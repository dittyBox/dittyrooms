

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated automatically 
//    Author: EntityGenerator
//    Date: 2021-09-10 14:02:00
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Entity.Core.Objects.DataClasses;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using MOM.Common;   // for EdmScalarPropertyDetailAttribute

[assembly: EdmSchemaAttribute()]
namespace MOM.MES.Entity
{
    
    /// <summary>
    /// 현재 발생한 alarm
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarm : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for alarm id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Alarmsysid
        {
            get
            {
                return _Alarmsysid;
            }
            set
            {
                if (_Alarmsysid != value)
                {
                    _Alarmsysid = value;
                }
            }
        }
        private string _Alarmsysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Alarm definition id. (ref. FOM_ALARMDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdefinitionid
        {
            get
            {
                return _Alarmdefinitionid;
            }
            set
            {
                if (_Alarmdefinitionid != value)
                {
                    _Alarmdefinitionid = value;
                }
            }
        }
        private string _Alarmdefinitionid;

        /// <summary>
        /// Alarm source id (ex. EQPID, LOTID, SYSTEMID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmsourceid
        {
            get
            {
                return _Alarmsourceid;
            }
            set
            {
                if (_Alarmsourceid != value)
                {
                    _Alarmsourceid = value;
                }
            }
        }
        private string _Alarmsourceid;

        /// <summary>
        /// Type of alarm. (ex. EQP, MACHINE, WIP, SYSTEM, SPC)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmtype
        {
            get
            {
                return _Alarmtype;
            }
            set
            {
                if (_Alarmtype != value)
                {
                    _Alarmtype = value;
                }
            }
        }
        private string _Alarmtype;

        /// <summary>
        /// Alarm class id. (ref. FOM_ALARMCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclassid
        {
            get
            {
                return _Alarmclassid;
            }
            set
            {
                if (_Alarmclassid != value)
                {
                    _Alarmclassid = value;
                }
            }
        }
        private string _Alarmclassid;

        /// <summary>
        /// Alarm Code. (Alarm category code, Alarm group code)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmcode
        {
            get
            {
                return _Alarmcode;
            }
            set
            {
                if (_Alarmcode != value)
                {
                    _Alarmcode = value;
                }
            }
        }
        private string _Alarmcode;

        /// <summary>
        /// Level of alarm. Ex) ERROR, WARNING, INFORM
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmlevel
        {
            get
            {
                return _Alarmlevel;
            }
            set
            {
                if (_Alarmlevel != value)
                {
                    _Alarmlevel = value;
                }
            }
        }
        private string _Alarmlevel;

        /// <summary>
        /// Alarm data for alarm action (ex. Data in email or SMS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdata
        {
            get
            {
                return _Alarmdata;
            }
            set
            {
                if (_Alarmdata != value)
                {
                    _Alarmdata = value;
                }
            }
        }
        private string _Alarmdata;

        /// <summary>
        /// Alarm reporter (ex. USERID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmreporter
        {
            get
            {
                return _Alarmreporter;
            }
            set
            {
                if (_Alarmreporter != value)
                {
                    _Alarmreporter = value;
                }
            }
        }
        private string _Alarmreporter;

        /// <summary>
        /// Current state of alarm id. Ex) Active, Processing, Clear
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state of alarm id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Current location. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Processsegment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Parameter id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parameterid
        {
            get
            {
                return _Parameterid;
            }
            set
            {
                if (_Parameterid != value)
                {
                    _Parameterid = value;
                }
            }
        }
        private string _Parameterid;

        /// <summary>
        /// Alarm clear message.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recoverytext
        {
            get
            {
                return _Recoverytext;
            }
            set
            {
                if (_Recoverytext != value)
                {
                    _Recoverytext = value;
                }
            }
        }
        private string _Recoverytext;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alarm action 정의 (Ex. SMS / EMAIL / LOTHOLD / EQPHOLD)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmaction : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for alarm action id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Alarmactionid
        {
            get
            {
                return _Alarmactionid;
            }
            set
            {
                if (_Alarmactionid != value)
                {
                    _Alarmactionid = value;
                }
            }
        }
        private string _Alarmactionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Alarm action name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactionname
        {
            get
            {
                return _Alarmactionname;
            }
            set
            {
                if (_Alarmactionname != value)
                {
                    _Alarmactionname = value;
                }
            }
        }
        private string _Alarmactionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of alarm action. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactiontype
        {
            get
            {
                return _Alarmactiontype;
            }
            set
            {
                if (_Alarmactiontype != value)
                {
                    _Alarmactiontype = value;
                }
            }
        }
        private string _Alarmactiontype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alarm action에 대한 category 정의 (Ex. NOTIFY / LOTACTION / EQPACTION)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmactioncategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmactioncategory : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for alarm action category id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Alarmactioncategoryid
        {
            get
            {
                return _Alarmactioncategoryid;
            }
            set
            {
                if (_Alarmactioncategoryid != value)
                {
                    _Alarmactioncategoryid = value;
                }
            }
        }
        private string _Alarmactioncategoryid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Alarm action category name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactioncategoryname
        {
            get
            {
                return _Alarmactioncategoryname;
            }
            set
            {
                if (_Alarmactioncategoryname != value)
                {
                    _Alarmactioncategoryname = value;
                }
            }
        }
        private string _Alarmactioncategoryname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alarm action에 대한 category 정의 (Ex. NOTIFY / LOTACTION / EQPACTION) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmactioncategoryhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmactioncategoryhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for alarm action category id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactioncategoryid
        {
            get
            {
                return _Alarmactioncategoryid;
            }
            set
            {
                if (_Alarmactioncategoryid != value)
                {
                    _Alarmactioncategoryid = value;
                }
            }
        }
        private string _Alarmactioncategoryid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Alarm action category name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactioncategoryname
        {
            get
            {
                return _Alarmactioncategoryname;
            }
            set
            {
                if (_Alarmactioncategoryname != value)
                {
                    _Alarmactioncategoryname = value;
                }
            }
        }
        private string _Alarmactioncategoryname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alacm action - category의 relation
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmactioncategoryrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmactioncategoryrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for alarm action category id. (ref. FOM_ALARMACTIONCATEGORY)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Alarmactioncategoryid
        {
            get
            {
                return _Alarmactioncategoryid;
            }
            set
            {
                if (_Alarmactioncategoryid != value)
                {
                    _Alarmactioncategoryid = value;
                }
            }
        }
        private string _Alarmactioncategoryid;

        /// <summary>
        /// Unique identifier for alarm action id. (ref. FOM_ALARMACTION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Alarmactionid
        {
            get
            {
                return _Alarmactionid;
            }
            set
            {
                if (_Alarmactionid != value)
                {
                    _Alarmactionid = value;
                }
            }
        }
        private string _Alarmactionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Sequence of alarm action
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="(1)")]
        [DataMemberAttribute()]
        public Nullable<int> Actionsequence
        {
            get
            {
                return _Actionsequence;
            }
            set
            {
                if (_Actionsequence != value)
                {
                    _Actionsequence = value;
                }
            }
        }
        private Nullable<int> _Actionsequence;

        /// <summary>
        /// Identifier of auto/manual action
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isautoaction
        {
            get
            {
                return _Isautoaction;
            }
            set
            {
                if (_Isautoaction != value)
                {
                    _Isautoaction = value;
                }
            }
        }
        private string _Isautoaction;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alacm action - category의 relation 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmactioncategoryrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmactioncategoryrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for alarm action category id. (ref. FOM_ALARMACTIONCATEGORY)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactioncategoryid
        {
            get
            {
                return _Alarmactioncategoryid;
            }
            set
            {
                if (_Alarmactioncategoryid != value)
                {
                    _Alarmactioncategoryid = value;
                }
            }
        }
        private string _Alarmactioncategoryid;

        /// <summary>
        /// Unique identifier for alarm action id. (ref. FOM_ALARMACTION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactionid
        {
            get
            {
                return _Alarmactionid;
            }
            set
            {
                if (_Alarmactionid != value)
                {
                    _Alarmactionid = value;
                }
            }
        }
        private string _Alarmactionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Sequence of alarm action
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="(1)")]
        [DataMemberAttribute()]
        public Nullable<int> Actionsequence
        {
            get
            {
                return _Actionsequence;
            }
            set
            {
                if (_Actionsequence != value)
                {
                    _Actionsequence = value;
                }
            }
        }
        private Nullable<int> _Actionsequence;

        /// <summary>
        /// Identifier of auto/manual action
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isautoaction
        {
            get
            {
                return _Isautoaction;
            }
            set
            {
                if (_Isautoaction != value)
                {
                    _Isautoaction = value;
                }
            }
        }
        private string _Isautoaction;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alarm action 정의 (Ex. SMS / EMAIL / LOTHOLD / EQPHOLD) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmactionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmactionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for alarm action id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactionid
        {
            get
            {
                return _Alarmactionid;
            }
            set
            {
                if (_Alarmactionid != value)
                {
                    _Alarmactionid = value;
                }
            }
        }
        private string _Alarmactionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Alarm action name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactionname
        {
            get
            {
                return _Alarmactionname;
            }
            set
            {
                if (_Alarmactionname != value)
                {
                    _Alarmactionname = value;
                }
            }
        }
        private string _Alarmactionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of alarm action. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactiontype
        {
            get
            {
                return _Alarmactiontype;
            }
            set
            {
                if (_Alarmactiontype != value)
                {
                    _Alarmactiontype = value;
                }
            }
        }
        private string _Alarmactiontype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 현재 발생한 alarm의 현재 action 상태
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmactioninfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmactioninfo : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for alarmactioninfo id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Alarmactioninfosysid
        {
            get
            {
                return _Alarmactioninfosysid;
            }
            set
            {
                if (_Alarmactioninfosysid != value)
                {
                    _Alarmactioninfosysid = value;
                }
            }
        }
        private string _Alarmactioninfosysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Unique identifier for alarm id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmsysid
        {
            get
            {
                return _Alarmsysid;
            }
            set
            {
                if (_Alarmsysid != value)
                {
                    _Alarmsysid = value;
                }
            }
        }
        private string _Alarmsysid;

        /// <summary>
        /// Alarm definition id. (ref. FOM_ALARMACTIONINFODEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdefinitionid
        {
            get
            {
                return _Alarmdefinitionid;
            }
            set
            {
                if (_Alarmdefinitionid != value)
                {
                    _Alarmdefinitionid = value;
                }
            }
        }
        private string _Alarmdefinitionid;

        /// <summary>
        /// Alarm source id (ex. EQPID, LOTID, SYSTEMID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmsourceid
        {
            get
            {
                return _Alarmsourceid;
            }
            set
            {
                if (_Alarmsourceid != value)
                {
                    _Alarmsourceid = value;
                }
            }
        }
        private string _Alarmsourceid;

        /// <summary>
        /// Type of alarm. (ex. EQP, MACHINE, WIP, SYSTEM, SPC)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmtype
        {
            get
            {
                return _Alarmtype;
            }
            set
            {
                if (_Alarmtype != value)
                {
                    _Alarmtype = value;
                }
            }
        }
        private string _Alarmtype;

        /// <summary>
        /// Current alarm action id. (ref. FOM_ALARMACTIONINFOACTION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactionid
        {
            get
            {
                return _Alarmactionid;
            }
            set
            {
                if (_Alarmactionid != value)
                {
                    _Alarmactionid = value;
                }
            }
        }
        private string _Alarmactionid;

        /// <summary>
        /// Alarm class id. (ref. FOM_ALARMACTIONINFOCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclassid
        {
            get
            {
                return _Alarmclassid;
            }
            set
            {
                if (_Alarmclassid != value)
                {
                    _Alarmclassid = value;
                }
            }
        }
        private string _Alarmclassid;

        /// <summary>
        /// Alarm Code. (Alarm category code, Alarm group code)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmcode
        {
            get
            {
                return _Alarmcode;
            }
            set
            {
                if (_Alarmcode != value)
                {
                    _Alarmcode = value;
                }
            }
        }
        private string _Alarmcode;

        /// <summary>
        /// Level of alarm. Ex) ERROR, WARNING, INFORM
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmlevel
        {
            get
            {
                return _Alarmlevel;
            }
            set
            {
                if (_Alarmlevel != value)
                {
                    _Alarmlevel = value;
                }
            }
        }
        private string _Alarmlevel;

        /// <summary>
        /// Alarm data for alarm action (ex. Data in email or SMS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdata
        {
            get
            {
                return _Alarmdata;
            }
            set
            {
                if (_Alarmdata != value)
                {
                    _Alarmdata = value;
                }
            }
        }
        private string _Alarmdata;

        /// <summary>
        /// Alarm reporter (ex. USERID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmreporter
        {
            get
            {
                return _Alarmreporter;
            }
            set
            {
                if (_Alarmreporter != value)
                {
                    _Alarmreporter = value;
                }
            }
        }
        private string _Alarmreporter;

        /// <summary>
        /// Current state of alarm id. Ex) Active, Processing, Clear
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state of alarm id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// User class id for receive alarm action (ex. email / SMS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionuserclassid
        {
            get
            {
                return _Actionuserclassid;
            }
            set
            {
                if (_Actionuserclassid != value)
                {
                    _Actionuserclassid = value;
                }
            }
        }
        private string _Actionuserclassid;

        /// <summary>
        /// User list to receive the alarm action (ex. email / SMS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionuserlist
        {
            get
            {
                return _Actionuserlist;
            }
            set
            {
                if (_Actionuserlist != value)
                {
                    _Actionuserlist = value;
                }
            }
        }
        private string _Actionuserlist;

        /// <summary>
        /// Title of alarm email.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emailtitle
        {
            get
            {
                return _Emailtitle;
            }
            set
            {
                if (_Emailtitle != value)
                {
                    _Emailtitle = value;
                }
            }
        }
        private string _Emailtitle;

        /// <summary>
        /// Body of alarm email.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emailbody
        {
            get
            {
                return _Emailbody;
            }
            set
            {
                if (_Emailbody != value)
                {
                    _Emailbody = value;
                }
            }
        }
        private string _Emailbody;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 현재 발생한 alarm의 현재 action 상태 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmactioninfohist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmactioninfohist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for alarmactioninfo id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactioninfosysid
        {
            get
            {
                return _Alarmactioninfosysid;
            }
            set
            {
                if (_Alarmactioninfosysid != value)
                {
                    _Alarmactioninfosysid = value;
                }
            }
        }
        private string _Alarmactioninfosysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Unique identifier for alarm id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmsysid
        {
            get
            {
                return _Alarmsysid;
            }
            set
            {
                if (_Alarmsysid != value)
                {
                    _Alarmsysid = value;
                }
            }
        }
        private string _Alarmsysid;

        /// <summary>
        /// Alarm definition id. (ref. FOM_ALARMACTIONINFODEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdefinitionid
        {
            get
            {
                return _Alarmdefinitionid;
            }
            set
            {
                if (_Alarmdefinitionid != value)
                {
                    _Alarmdefinitionid = value;
                }
            }
        }
        private string _Alarmdefinitionid;

        /// <summary>
        /// Alarm source id (ex. EQPID, LOTID, SYSTEMID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmsourceid
        {
            get
            {
                return _Alarmsourceid;
            }
            set
            {
                if (_Alarmsourceid != value)
                {
                    _Alarmsourceid = value;
                }
            }
        }
        private string _Alarmsourceid;

        /// <summary>
        /// Type of alarm. (ex. EQP, MACHINE, WIP, SYSTEM, SPC)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmtype
        {
            get
            {
                return _Alarmtype;
            }
            set
            {
                if (_Alarmtype != value)
                {
                    _Alarmtype = value;
                }
            }
        }
        private string _Alarmtype;

        /// <summary>
        /// Current alarm action id. (ref. FOM_ALARMACTIONINFOACTION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactionid
        {
            get
            {
                return _Alarmactionid;
            }
            set
            {
                if (_Alarmactionid != value)
                {
                    _Alarmactionid = value;
                }
            }
        }
        private string _Alarmactionid;

        /// <summary>
        /// Alarm class id. (ref. FOM_ALARMACTIONINFOCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclassid
        {
            get
            {
                return _Alarmclassid;
            }
            set
            {
                if (_Alarmclassid != value)
                {
                    _Alarmclassid = value;
                }
            }
        }
        private string _Alarmclassid;

        /// <summary>
        /// Alarm Code. (Alarm category code, Alarm group code)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmcode
        {
            get
            {
                return _Alarmcode;
            }
            set
            {
                if (_Alarmcode != value)
                {
                    _Alarmcode = value;
                }
            }
        }
        private string _Alarmcode;

        /// <summary>
        /// Level of alarm. Ex) ERROR, WARNING, INFORM
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmlevel
        {
            get
            {
                return _Alarmlevel;
            }
            set
            {
                if (_Alarmlevel != value)
                {
                    _Alarmlevel = value;
                }
            }
        }
        private string _Alarmlevel;

        /// <summary>
        /// Alarm data for alarm action (ex. Data in email or SMS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdata
        {
            get
            {
                return _Alarmdata;
            }
            set
            {
                if (_Alarmdata != value)
                {
                    _Alarmdata = value;
                }
            }
        }
        private string _Alarmdata;

        /// <summary>
        /// Alarm reporter (ex. USERID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmreporter
        {
            get
            {
                return _Alarmreporter;
            }
            set
            {
                if (_Alarmreporter != value)
                {
                    _Alarmreporter = value;
                }
            }
        }
        private string _Alarmreporter;

        /// <summary>
        /// Current state of alarm id. Ex) Active, Processing, Clear
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state of alarm id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// User class id for receive alarm action (ex. email / SMS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionuserclassid
        {
            get
            {
                return _Actionuserclassid;
            }
            set
            {
                if (_Actionuserclassid != value)
                {
                    _Actionuserclassid = value;
                }
            }
        }
        private string _Actionuserclassid;

        /// <summary>
        /// User list to receive the alarm action (ex. email / SMS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionuserlist
        {
            get
            {
                return _Actionuserlist;
            }
            set
            {
                if (_Actionuserlist != value)
                {
                    _Actionuserlist = value;
                }
            }
        }
        private string _Actionuserlist;

        /// <summary>
        /// Title of alarm email.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emailtitle
        {
            get
            {
                return _Emailtitle;
            }
            set
            {
                if (_Emailtitle != value)
                {
                    _Emailtitle = value;
                }
            }
        }
        private string _Emailtitle;

        /// <summary>
        /// Body of alarm email.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emailbody
        {
            get
            {
                return _Emailbody;
            }
            set
            {
                if (_Emailbody != value)
                {
                    _Emailbody = value;
                }
            }
        }
        private string _Emailbody;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alarm 종류 정의 (Ex. MES / SYSTEM / USER)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for alarm class id. ex) EQUIPMENT, SPC, SYSTEM
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Alarmclassid
        {
            get
            {
                return _Alarmclassid;
            }
            set
            {
                if (_Alarmclassid != value)
                {
                    _Alarmclassid = value;
                }
            }
        }
        private string _Alarmclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Alarm class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclassname
        {
            get
            {
                return _Alarmclassname;
            }
            set
            {
                if (_Alarmclassname != value)
                {
                    _Alarmclassname = value;
                }
            }
        }
        private string _Alarmclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of alarm class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclasstype
        {
            get
            {
                return _Alarmclasstype;
            }
            set
            {
                if (_Alarmclasstype != value)
                {
                    _Alarmclasstype = value;
                }
            }
        }
        private string _Alarmclasstype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alarm 종류 정의 (Ex. MES / SYSTEM / USER) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for alarm class id. ex) EQUIPMENT, SPC, SYSTEM
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclassid
        {
            get
            {
                return _Alarmclassid;
            }
            set
            {
                if (_Alarmclassid != value)
                {
                    _Alarmclassid = value;
                }
            }
        }
        private string _Alarmclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Alarm class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclassname
        {
            get
            {
                return _Alarmclassname;
            }
            set
            {
                if (_Alarmclassname != value)
                {
                    _Alarmclassname = value;
                }
            }
        }
        private string _Alarmclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of alarm class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclasstype
        {
            get
            {
                return _Alarmclasstype;
            }
            set
            {
                if (_Alarmclasstype != value)
                {
                    _Alarmclasstype = value;
                }
            }
        }
        private string _Alarmclasstype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alarm 액션 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmdefactionrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmdefactionrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for alarm definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Alarmdefinitionid
        {
            get
            {
                return _Alarmdefinitionid;
            }
            set
            {
                if (_Alarmdefinitionid != value)
                {
                    _Alarmdefinitionid = value;
                }
            }
        }
        private string _Alarmdefinitionid;

        /// <summary>
        /// Alarm source id (ex. EQPID, LOTID, SYSTEMID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Alarmsourceid
        {
            get
            {
                return _Alarmsourceid;
            }
            set
            {
                if (_Alarmsourceid != value)
                {
                    _Alarmsourceid = value;
                }
            }
        }
        private string _Alarmsourceid;

        /// <summary>
        /// Type of alarm. (ex. EQP, MACHINE, WIP, SYSTEM, SPC)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Alarmtype
        {
            get
            {
                return _Alarmtype;
            }
            set
            {
                if (_Alarmtype != value)
                {
                    _Alarmtype = value;
                }
            }
        }
        private string _Alarmtype;

        /// <summary>
        /// Alarm action id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Alarmactionid
        {
            get
            {
                return _Alarmactionid;
            }
            set
            {
                if (_Alarmactionid != value)
                {
                    _Alarmactionid = value;
                }
            }
        }
        private string _Alarmactionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Action Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="(1)")]
        [DataMemberAttribute()]
        public Nullable<int> Actionsequence
        {
            get
            {
                return _Actionsequence;
            }
            set
            {
                if (_Actionsequence != value)
                {
                    _Actionsequence = value;
                }
            }
        }
        private Nullable<int> _Actionsequence;

        /// <summary>
        /// Auto Action 여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isautoaction
        {
            get
            {
                return _Isautoaction;
            }
            set
            {
                if (_Isautoaction != value)
                {
                    _Isautoaction = value;
                }
            }
        }
        private string _Isautoaction;

        /// <summary>
        /// Action user class id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionuserclassid
        {
            get
            {
                return _Actionuserclassid;
            }
            set
            {
                if (_Actionuserclassid != value)
                {
                    _Actionuserclassid = value;
                }
            }
        }
        private string _Actionuserclassid;

        /// <summary>
        /// Email 제목
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emailtitle
        {
            get
            {
                return _Emailtitle;
            }
            set
            {
                if (_Emailtitle != value)
                {
                    _Emailtitle = value;
                }
            }
        }
        private string _Emailtitle;

        /// <summary>
        /// Email 내용
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emailbody
        {
            get
            {
                return _Emailbody;
            }
            set
            {
                if (_Emailbody != value)
                {
                    _Emailbody = value;
                }
            }
        }
        private string _Emailbody;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alarm 액션 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmdefactionrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmdefactionrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for alarm definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdefinitionid
        {
            get
            {
                return _Alarmdefinitionid;
            }
            set
            {
                if (_Alarmdefinitionid != value)
                {
                    _Alarmdefinitionid = value;
                }
            }
        }
        private string _Alarmdefinitionid;

        /// <summary>
        /// Alarm source id (ex. EQPID, LOTID, SYSTEMID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmsourceid
        {
            get
            {
                return _Alarmsourceid;
            }
            set
            {
                if (_Alarmsourceid != value)
                {
                    _Alarmsourceid = value;
                }
            }
        }
        private string _Alarmsourceid;

        /// <summary>
        /// Type of alarm. (ex. EQP, MACHINE, WIP, SYSTEM, SPC)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmtype
        {
            get
            {
                return _Alarmtype;
            }
            set
            {
                if (_Alarmtype != value)
                {
                    _Alarmtype = value;
                }
            }
        }
        private string _Alarmtype;

        /// <summary>
        /// Alarm action id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmactionid
        {
            get
            {
                return _Alarmactionid;
            }
            set
            {
                if (_Alarmactionid != value)
                {
                    _Alarmactionid = value;
                }
            }
        }
        private string _Alarmactionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Action Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="(1)")]
        [DataMemberAttribute()]
        public Nullable<int> Actionsequence
        {
            get
            {
                return _Actionsequence;
            }
            set
            {
                if (_Actionsequence != value)
                {
                    _Actionsequence = value;
                }
            }
        }
        private Nullable<int> _Actionsequence;

        /// <summary>
        /// Auto Action 여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isautoaction
        {
            get
            {
                return _Isautoaction;
            }
            set
            {
                if (_Isautoaction != value)
                {
                    _Isautoaction = value;
                }
            }
        }
        private string _Isautoaction;

        /// <summary>
        /// Action user class id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionuserclassid
        {
            get
            {
                return _Actionuserclassid;
            }
            set
            {
                if (_Actionuserclassid != value)
                {
                    _Actionuserclassid = value;
                }
            }
        }
        private string _Actionuserclassid;

        /// <summary>
        /// Email 제목
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emailtitle
        {
            get
            {
                return _Emailtitle;
            }
            set
            {
                if (_Emailtitle != value)
                {
                    _Emailtitle = value;
                }
            }
        }
        private string _Emailtitle;

        /// <summary>
        /// Email 내용
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emailbody
        {
            get
            {
                return _Emailbody;
            }
            set
            {
                if (_Emailbody != value)
                {
                    _Emailbody = value;
                }
            }
        }
        private string _Emailbody;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alarm 정의 (ID, 설비별, 설비 타입별) (Ex. 1000 / EQP01 / EQPTYPE1)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for alarm definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Alarmdefinitionid
        {
            get
            {
                return _Alarmdefinitionid;
            }
            set
            {
                if (_Alarmdefinitionid != value)
                {
                    _Alarmdefinitionid = value;
                }
            }
        }
        private string _Alarmdefinitionid;

        /// <summary>
        /// Alarm source id (ex. EQPID, LOTID, SYSTEMID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Alarmsourceid
        {
            get
            {
                return _Alarmsourceid;
            }
            set
            {
                if (_Alarmsourceid != value)
                {
                    _Alarmsourceid = value;
                }
            }
        }
        private string _Alarmsourceid;

        /// <summary>
        /// Type of alarm. (ex. EQP, MACHINE, WIP, SYSTEM, SPC)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Alarmtype
        {
            get
            {
                return _Alarmtype;
            }
            set
            {
                if (_Alarmtype != value)
                {
                    _Alarmtype = value;
                }
            }
        }
        private string _Alarmtype;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Alarm definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdefinitionname
        {
            get
            {
                return _Alarmdefinitionname;
            }
            set
            {
                if (_Alarmdefinitionname != value)
                {
                    _Alarmdefinitionname = value;
                }
            }
        }
        private string _Alarmdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Alarm class id. (ref. FOM_ALARMCLASS) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclassid
        {
            get
            {
                return _Alarmclassid;
            }
            set
            {
                if (_Alarmclassid != value)
                {
                    _Alarmclassid = value;
                }
            }
        }
        private string _Alarmclassid;

        /// <summary>
        /// Level of alarm. Ex) ERROR, WARNING, INFORM 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmlevel
        {
            get
            {
                return _Alarmlevel;
            }
            set
            {
                if (_Alarmlevel != value)
                {
                    _Alarmlevel = value;
                }
            }
        }
        private string _Alarmlevel;

        /// <summary>
        /// User who is responsible for this alarm. (ref. FOM_USER) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ownerid
        {
            get
            {
                return _Ownerid;
            }
            set
            {
                if (_Ownerid != value)
                {
                    _Ownerid = value;
                }
            }
        }
        private string _Ownerid;

        /// <summary>
        /// Ordering in selection (for UI Modeling)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Alarm clear message.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recoverytext
        {
            get
            {
                return _Recoverytext;
            }
            set
            {
                if (_Recoverytext != value)
                {
                    _Recoverytext = value;
                }
            }
        }
        private string _Recoverytext;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Alarm 정의 (ID, 설비별, 설비 타입별) (Ex. 1000 / EQP01 / EQPTYPE1) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for alarm definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdefinitionid
        {
            get
            {
                return _Alarmdefinitionid;
            }
            set
            {
                if (_Alarmdefinitionid != value)
                {
                    _Alarmdefinitionid = value;
                }
            }
        }
        private string _Alarmdefinitionid;

        /// <summary>
        /// Alarm source id (ex. EQPID, LOTID, SYSTEMID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmsourceid
        {
            get
            {
                return _Alarmsourceid;
            }
            set
            {
                if (_Alarmsourceid != value)
                {
                    _Alarmsourceid = value;
                }
            }
        }
        private string _Alarmsourceid;

        /// <summary>
        /// Type of alarm. (ex. EQP, MACHINE, WIP, SYSTEM, SPC)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmtype
        {
            get
            {
                return _Alarmtype;
            }
            set
            {
                if (_Alarmtype != value)
                {
                    _Alarmtype = value;
                }
            }
        }
        private string _Alarmtype;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Alarm definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdefinitionname
        {
            get
            {
                return _Alarmdefinitionname;
            }
            set
            {
                if (_Alarmdefinitionname != value)
                {
                    _Alarmdefinitionname = value;
                }
            }
        }
        private string _Alarmdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Alarm class id. (ref. FOM_ALARMCLASS) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclassid
        {
            get
            {
                return _Alarmclassid;
            }
            set
            {
                if (_Alarmclassid != value)
                {
                    _Alarmclassid = value;
                }
            }
        }
        private string _Alarmclassid;

        /// <summary>
        /// Level of alarm. Ex) ERROR, WARNING, INFORM 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmlevel
        {
            get
            {
                return _Alarmlevel;
            }
            set
            {
                if (_Alarmlevel != value)
                {
                    _Alarmlevel = value;
                }
            }
        }
        private string _Alarmlevel;

        /// <summary>
        /// User who is responsible for this alarm. (ref. FOM_USER) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ownerid
        {
            get
            {
                return _Ownerid;
            }
            set
            {
                if (_Ownerid != value)
                {
                    _Ownerid = value;
                }
            }
        }
        private string _Ownerid;

        /// <summary>
        /// Ordering in selection (for UI Modeling)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Alarm clear message.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recoverytext
        {
            get
            {
                return _Recoverytext;
            }
            set
            {
                if (_Recoverytext != value)
                {
                    _Recoverytext = value;
                }
            }
        }
        private string _Recoverytext;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 현재 발생한 alarm 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Alarmhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alarmhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for alarm id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmsysid
        {
            get
            {
                return _Alarmsysid;
            }
            set
            {
                if (_Alarmsysid != value)
                {
                    _Alarmsysid = value;
                }
            }
        }
        private string _Alarmsysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Alarm definition id. (ref. FOM_ALARMDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdefinitionid
        {
            get
            {
                return _Alarmdefinitionid;
            }
            set
            {
                if (_Alarmdefinitionid != value)
                {
                    _Alarmdefinitionid = value;
                }
            }
        }
        private string _Alarmdefinitionid;

        /// <summary>
        /// Alarm source id (ex. EQPID, LOTID, SYSTEMID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmsourceid
        {
            get
            {
                return _Alarmsourceid;
            }
            set
            {
                if (_Alarmsourceid != value)
                {
                    _Alarmsourceid = value;
                }
            }
        }
        private string _Alarmsourceid;

        /// <summary>
        /// Type of alarm. (ex. EQP, MACHINE, WIP, SYSTEM, SPC)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmtype
        {
            get
            {
                return _Alarmtype;
            }
            set
            {
                if (_Alarmtype != value)
                {
                    _Alarmtype = value;
                }
            }
        }
        private string _Alarmtype;

        /// <summary>
        /// Alarm class id. (ref. FOM_ALARMCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmclassid
        {
            get
            {
                return _Alarmclassid;
            }
            set
            {
                if (_Alarmclassid != value)
                {
                    _Alarmclassid = value;
                }
            }
        }
        private string _Alarmclassid;

        /// <summary>
        /// Alarm Code. (Alarm category code, Alarm group code)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmcode
        {
            get
            {
                return _Alarmcode;
            }
            set
            {
                if (_Alarmcode != value)
                {
                    _Alarmcode = value;
                }
            }
        }
        private string _Alarmcode;

        /// <summary>
        /// Level of alarm. Ex) ERROR, WARNING, INFORM
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmlevel
        {
            get
            {
                return _Alarmlevel;
            }
            set
            {
                if (_Alarmlevel != value)
                {
                    _Alarmlevel = value;
                }
            }
        }
        private string _Alarmlevel;

        /// <summary>
        /// Alarm data for alarm action (ex. Data in email or SMS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmdata
        {
            get
            {
                return _Alarmdata;
            }
            set
            {
                if (_Alarmdata != value)
                {
                    _Alarmdata = value;
                }
            }
        }
        private string _Alarmdata;

        /// <summary>
        /// Alarm reporter (ex. USERID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmreporter
        {
            get
            {
                return _Alarmreporter;
            }
            set
            {
                if (_Alarmreporter != value)
                {
                    _Alarmreporter = value;
                }
            }
        }
        private string _Alarmreporter;

        /// <summary>
        /// Current state of alarm id. Ex) Active, Processing, Clear
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state of alarm id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Current location. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Processsegment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Parameter id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parameterid
        {
            get
            {
                return _Parameterid;
            }
            set
            {
                if (_Parameterid != value)
                {
                    _Parameterid = value;
                }
            }
        }
        private string _Parameterid;

        /// <summary>
        /// Alarm clear message.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recoverytext
        {
            get
            {
                return _Recoverytext;
            }
            set
            {
                if (_Recoverytext != value)
                {
                    _Recoverytext = value;
                }
            }
        }
        private string _Recoverytext;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 고객(수출)바코드 기준정보 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Barcodedefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Barcodedefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Barcodeid
        {
            get
            {
                return _Barcodeid;
            }
            set
            {
                if (_Barcodeid != value)
                {
                    _Barcodeid = value;
                }
            }
        }
        private string _Barcodeid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// CUSTOMMER ITEM CODE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Customerpartid
        {
            get
            {
                return _Customerpartid;
            }
            set
            {
                if (_Customerpartid != value)
                {
                    _Customerpartid = value;
                }
            }
        }
        private string _Customerpartid;

        /// <summary>
        /// SUPPLIER CODE(CTR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Supplierid
        {
            get
            {
                return _Supplierid;
            }
            set
            {
                if (_Supplierid != value)
                {
                    _Supplierid = value;
                }
            }
        }
        private string _Supplierid;

        /// <summary>
        /// SUPPLIER NAME(CTR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Suppliername
        {
            get
            {
                return _Suppliername;
            }
            set
            {
                if (_Suppliername != value)
                {
                    _Suppliername = value;
                }
            }
        }
        private string _Suppliername;

        /// <summary>
        /// SERIAL NO.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<long> Serialid
        {
            get
            {
                return _Serialid;
            }
            set
            {
                if (_Serialid != value)
                {
                    _Serialid = value;
                }
            }
        }
        private Nullable<long> _Serialid;

        /// <summary>
        /// Purchase Order No.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Purchaseorderid
        {
            get
            {
                return _Purchaseorderid;
            }
            set
            {
                if (_Purchaseorderid != value)
                {
                    _Purchaseorderid = value;
                }
            }
        }
        private string _Purchaseorderid;

        /// <summary>
        /// Refference No.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Referenceid
        {
            get
            {
                return _Referenceid;
            }
            set
            {
                if (_Referenceid != value)
                {
                    _Referenceid = value;
                }
            }
        }
        private string _Referenceid;

        /// <summary>
        /// DESCRIPTION
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description1
        {
            get
            {
                return _Description1;
            }
            set
            {
                if (_Description1 != value)
                {
                    _Description1 = value;
                }
            }
        }
        private string _Description1;

        /// <summary>
        /// DESCRIPTION
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description2
        {
            get
            {
                return _Description2;
            }
            set
            {
                if (_Description2 != value)
                {
                    _Description2 = value;
                }
            }
        }
        private string _Description2;

        /// <summary>
        /// Ship Destination Code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shipto
        {
            get
            {
                return _Shipto;
            }
            set
            {
                if (_Shipto != value)
                {
                    _Shipto = value;
                }
            }
        }
        private string _Shipto;

        /// <summary>
        /// Ship Destination Name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shipname
        {
            get
            {
                return _Shipname;
            }
            set
            {
                if (_Shipname != value)
                {
                    _Shipname = value;
                }
            }
        }
        private string _Shipname;

        /// <summary>
        /// Packing List
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packinglist
        {
            get
            {
                return _Packinglist;
            }
            set
            {
                if (_Packinglist != value)
                {
                    _Packinglist = value;
                }
            }
        }
        private string _Packinglist;

        /// <summary>
        /// DLOC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Dloc
        {
            get
            {
                return _Dloc;
            }
            set
            {
                if (_Dloc != value)
                {
                    _Dloc = value;
                }
            }
        }
        private string _Dloc;

        /// <summary>
        /// Pallet Dock
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Palletdock
        {
            get
            {
                return _Palletdock;
            }
            set
            {
                if (_Palletdock != value)
                {
                    _Palletdock = value;
                }
            }
        }
        private string _Palletdock;

        /// <summary>
        /// From Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fromaddress1
        {
            get
            {
                return _Fromaddress1;
            }
            set
            {
                if (_Fromaddress1 != value)
                {
                    _Fromaddress1 = value;
                }
            }
        }
        private string _Fromaddress1;

        /// <summary>
        /// From Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fromaddress2
        {
            get
            {
                return _Fromaddress2;
            }
            set
            {
                if (_Fromaddress2 != value)
                {
                    _Fromaddress2 = value;
                }
            }
        }
        private string _Fromaddress2;

        /// <summary>
        /// From Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fromaddress3
        {
            get
            {
                return _Fromaddress3;
            }
            set
            {
                if (_Fromaddress3 != value)
                {
                    _Fromaddress3 = value;
                }
            }
        }
        private string _Fromaddress3;

        /// <summary>
        /// From Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fromaddress4
        {
            get
            {
                return _Fromaddress4;
            }
            set
            {
                if (_Fromaddress4 != value)
                {
                    _Fromaddress4 = value;
                }
            }
        }
        private string _Fromaddress4;

        /// <summary>
        /// To Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Toaddress1
        {
            get
            {
                return _Toaddress1;
            }
            set
            {
                if (_Toaddress1 != value)
                {
                    _Toaddress1 = value;
                }
            }
        }
        private string _Toaddress1;

        /// <summary>
        /// To Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Toaddress2
        {
            get
            {
                return _Toaddress2;
            }
            set
            {
                if (_Toaddress2 != value)
                {
                    _Toaddress2 = value;
                }
            }
        }
        private string _Toaddress2;

        /// <summary>
        /// To Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Toaddress3
        {
            get
            {
                return _Toaddress3;
            }
            set
            {
                if (_Toaddress3 != value)
                {
                    _Toaddress3 = value;
                }
            }
        }
        private string _Toaddress3;

        /// <summary>
        /// To Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Toaddress4
        {
            get
            {
                return _Toaddress4;
            }
            set
            {
                if (_Toaddress4 != value)
                {
                    _Toaddress4 = value;
                }
            }
        }
        private string _Toaddress4;

        /// <summary>
        /// License Plate
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Licenseplate
        {
            get
            {
                return _Licenseplate;
            }
            set
            {
                if (_Licenseplate != value)
                {
                    _Licenseplate = value;
                }
            }
        }
        private string _Licenseplate;

        /// <summary>
        /// Material Handling Code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialhandlingcode
        {
            get
            {
                return _Materialhandlingcode;
            }
            set
            {
                if (_Materialhandlingcode != value)
                {
                    _Materialhandlingcode = value;
                }
            }
        }
        private string _Materialhandlingcode;

        /// <summary>
        /// Weight of Packing
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingweight
        {
            get
            {
                return _Packingweight;
            }
            set
            {
                if (_Packingweight != value)
                {
                    _Packingweight = value;
                }
            }
        }
        private string _Packingweight;

        /// <summary>
        /// Revision No.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Revisionid
        {
            get
            {
                return _Revisionid;
            }
            set
            {
                if (_Revisionid != value)
                {
                    _Revisionid = value;
                }
            }
        }
        private string _Revisionid;

        /// <summary>
        /// Lot Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Type of Customer Label
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Labeltype
        {
            get
            {
                return _Labeltype;
            }
            set
            {
                if (_Labeltype != value)
                {
                    _Labeltype = value;
                }
            }
        }
        private string _Labeltype;

        /// <summary>
        /// Type of Container
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Containertype
        {
            get
            {
                return _Containertype;
            }
            set
            {
                if (_Containertype != value)
                {
                    _Containertype = value;
                }
            }
        }
        private string _Containertype;

        /// <summary>
        /// Project
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Project
        {
            get
            {
                return _Project;
            }
            set
            {
                if (_Project != value)
                {
                    _Project = value;
                }
            }
        }
        private string _Project;

        /// <summary>
        /// Project Code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Projectcode
        {
            get
            {
                return _Projectcode;
            }
            set
            {
                if (_Projectcode != value)
                {
                    _Projectcode = value;
                }
            }
        }
        private string _Projectcode;

        /// <summary>
        /// Title
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                if (_Title != value)
                {
                    _Title = value;
                }
            }
        }
        private string _Title;

        /// <summary>
        /// Remark
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Remark1
        {
            get
            {
                return _Remark1;
            }
            set
            {
                if (_Remark1 != value)
                {
                    _Remark1 = value;
                }
            }
        }
        private string _Remark1;

        /// <summary>
        /// Remark
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Remark2
        {
            get
            {
                return _Remark2;
            }
            set
            {
                if (_Remark2 != value)
                {
                    _Remark2 = value;
                }
            }
        }
        private string _Remark2;

        /// <summary>
        /// Remark
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Remark3
        {
            get
            {
                return _Remark3;
            }
            set
            {
                if (_Remark3 != value)
                {
                    _Remark3 = value;
                }
            }
        }
        private string _Remark3;

        /// <summary>
        /// Remark
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Remark4
        {
            get
            {
                return _Remark4;
            }
            set
            {
                if (_Remark4 != value)
                {
                    _Remark4 = value;
                }
            }
        }
        private string _Remark4;

        /// <summary>
        /// Remark
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Remark5
        {
            get
            {
                return _Remark5;
            }
            set
            {
                if (_Remark5 != value)
                {
                    _Remark5 = value;
                }
            }
        }
        private string _Remark5;

        /// <summary>
        /// (Small)Box Quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<long> Boxquantity
        {
            get
            {
                return _Boxquantity;
            }
            set
            {
                if (_Boxquantity != value)
                {
                    _Boxquantity = value;
                }
            }
        }
        private Nullable<long> _Boxquantity;

        /// <summary>
        /// (Small)Box isusable
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isboxuse
        {
            get
            {
                return _Isboxuse;
            }
            set
            {
                if (_Isboxuse != value)
                {
                    _Isboxuse = value;
                }
            }
        }
        private string _Isboxuse;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 고객(수출)바코드 기준정보 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Barcodedefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Barcodedefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Barcodeid
        {
            get
            {
                return _Barcodeid;
            }
            set
            {
                if (_Barcodeid != value)
                {
                    _Barcodeid = value;
                }
            }
        }
        private string _Barcodeid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// CUSTOMMER ITEM CODE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Customerpartid
        {
            get
            {
                return _Customerpartid;
            }
            set
            {
                if (_Customerpartid != value)
                {
                    _Customerpartid = value;
                }
            }
        }
        private string _Customerpartid;

        /// <summary>
        /// SUPPLIER CODE(CTR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Supplierid
        {
            get
            {
                return _Supplierid;
            }
            set
            {
                if (_Supplierid != value)
                {
                    _Supplierid = value;
                }
            }
        }
        private string _Supplierid;

        /// <summary>
        /// SUPPLIER NAME(CTR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Suppliername
        {
            get
            {
                return _Suppliername;
            }
            set
            {
                if (_Suppliername != value)
                {
                    _Suppliername = value;
                }
            }
        }
        private string _Suppliername;

        /// <summary>
        /// SERIAL NO.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<long> Serialid
        {
            get
            {
                return _Serialid;
            }
            set
            {
                if (_Serialid != value)
                {
                    _Serialid = value;
                }
            }
        }
        private Nullable<long> _Serialid;

        /// <summary>
        /// Purchase Order No.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Purchaseorderid
        {
            get
            {
                return _Purchaseorderid;
            }
            set
            {
                if (_Purchaseorderid != value)
                {
                    _Purchaseorderid = value;
                }
            }
        }
        private string _Purchaseorderid;

        /// <summary>
        /// Refference No.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Referenceid
        {
            get
            {
                return _Referenceid;
            }
            set
            {
                if (_Referenceid != value)
                {
                    _Referenceid = value;
                }
            }
        }
        private string _Referenceid;

        /// <summary>
        /// DESCRIPTION
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description1
        {
            get
            {
                return _Description1;
            }
            set
            {
                if (_Description1 != value)
                {
                    _Description1 = value;
                }
            }
        }
        private string _Description1;

        /// <summary>
        /// DESCRIPTION
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description2
        {
            get
            {
                return _Description2;
            }
            set
            {
                if (_Description2 != value)
                {
                    _Description2 = value;
                }
            }
        }
        private string _Description2;

        /// <summary>
        /// Ship Destination Code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shipto
        {
            get
            {
                return _Shipto;
            }
            set
            {
                if (_Shipto != value)
                {
                    _Shipto = value;
                }
            }
        }
        private string _Shipto;

        /// <summary>
        /// Ship Destination Name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shipname
        {
            get
            {
                return _Shipname;
            }
            set
            {
                if (_Shipname != value)
                {
                    _Shipname = value;
                }
            }
        }
        private string _Shipname;

        /// <summary>
        /// Packing List
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packinglist
        {
            get
            {
                return _Packinglist;
            }
            set
            {
                if (_Packinglist != value)
                {
                    _Packinglist = value;
                }
            }
        }
        private string _Packinglist;

        /// <summary>
        /// DLOC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Dloc
        {
            get
            {
                return _Dloc;
            }
            set
            {
                if (_Dloc != value)
                {
                    _Dloc = value;
                }
            }
        }
        private string _Dloc;

        /// <summary>
        /// Pallet Dock
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Palletdock
        {
            get
            {
                return _Palletdock;
            }
            set
            {
                if (_Palletdock != value)
                {
                    _Palletdock = value;
                }
            }
        }
        private string _Palletdock;

        /// <summary>
        /// From Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fromaddress1
        {
            get
            {
                return _Fromaddress1;
            }
            set
            {
                if (_Fromaddress1 != value)
                {
                    _Fromaddress1 = value;
                }
            }
        }
        private string _Fromaddress1;

        /// <summary>
        /// From Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fromaddress2
        {
            get
            {
                return _Fromaddress2;
            }
            set
            {
                if (_Fromaddress2 != value)
                {
                    _Fromaddress2 = value;
                }
            }
        }
        private string _Fromaddress2;

        /// <summary>
        /// From Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fromaddress3
        {
            get
            {
                return _Fromaddress3;
            }
            set
            {
                if (_Fromaddress3 != value)
                {
                    _Fromaddress3 = value;
                }
            }
        }
        private string _Fromaddress3;

        /// <summary>
        /// From Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fromaddress4
        {
            get
            {
                return _Fromaddress4;
            }
            set
            {
                if (_Fromaddress4 != value)
                {
                    _Fromaddress4 = value;
                }
            }
        }
        private string _Fromaddress4;

        /// <summary>
        /// To Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Toaddress1
        {
            get
            {
                return _Toaddress1;
            }
            set
            {
                if (_Toaddress1 != value)
                {
                    _Toaddress1 = value;
                }
            }
        }
        private string _Toaddress1;

        /// <summary>
        /// To Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Toaddress2
        {
            get
            {
                return _Toaddress2;
            }
            set
            {
                if (_Toaddress2 != value)
                {
                    _Toaddress2 = value;
                }
            }
        }
        private string _Toaddress2;

        /// <summary>
        /// To Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Toaddress3
        {
            get
            {
                return _Toaddress3;
            }
            set
            {
                if (_Toaddress3 != value)
                {
                    _Toaddress3 = value;
                }
            }
        }
        private string _Toaddress3;

        /// <summary>
        /// To Address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Toaddress4
        {
            get
            {
                return _Toaddress4;
            }
            set
            {
                if (_Toaddress4 != value)
                {
                    _Toaddress4 = value;
                }
            }
        }
        private string _Toaddress4;

        /// <summary>
        /// License Plate
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Licenseplate
        {
            get
            {
                return _Licenseplate;
            }
            set
            {
                if (_Licenseplate != value)
                {
                    _Licenseplate = value;
                }
            }
        }
        private string _Licenseplate;

        /// <summary>
        /// Material Handling Code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialhandlingcode
        {
            get
            {
                return _Materialhandlingcode;
            }
            set
            {
                if (_Materialhandlingcode != value)
                {
                    _Materialhandlingcode = value;
                }
            }
        }
        private string _Materialhandlingcode;

        /// <summary>
        /// Weight of Packing
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingweight
        {
            get
            {
                return _Packingweight;
            }
            set
            {
                if (_Packingweight != value)
                {
                    _Packingweight = value;
                }
            }
        }
        private string _Packingweight;

        /// <summary>
        /// Revision No.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Revisionid
        {
            get
            {
                return _Revisionid;
            }
            set
            {
                if (_Revisionid != value)
                {
                    _Revisionid = value;
                }
            }
        }
        private string _Revisionid;

        /// <summary>
        /// Lot Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Type of Customer Label
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Labeltype
        {
            get
            {
                return _Labeltype;
            }
            set
            {
                if (_Labeltype != value)
                {
                    _Labeltype = value;
                }
            }
        }
        private string _Labeltype;

        /// <summary>
        /// Type of Container
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Containertype
        {
            get
            {
                return _Containertype;
            }
            set
            {
                if (_Containertype != value)
                {
                    _Containertype = value;
                }
            }
        }
        private string _Containertype;

        /// <summary>
        /// Project
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Project
        {
            get
            {
                return _Project;
            }
            set
            {
                if (_Project != value)
                {
                    _Project = value;
                }
            }
        }
        private string _Project;

        /// <summary>
        /// Project Code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Projectcode
        {
            get
            {
                return _Projectcode;
            }
            set
            {
                if (_Projectcode != value)
                {
                    _Projectcode = value;
                }
            }
        }
        private string _Projectcode;

        /// <summary>
        /// Title
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                if (_Title != value)
                {
                    _Title = value;
                }
            }
        }
        private string _Title;

        /// <summary>
        /// Remark
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Remark1
        {
            get
            {
                return _Remark1;
            }
            set
            {
                if (_Remark1 != value)
                {
                    _Remark1 = value;
                }
            }
        }
        private string _Remark1;

        /// <summary>
        /// Remark
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Remark2
        {
            get
            {
                return _Remark2;
            }
            set
            {
                if (_Remark2 != value)
                {
                    _Remark2 = value;
                }
            }
        }
        private string _Remark2;

        /// <summary>
        /// Remark
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Remark3
        {
            get
            {
                return _Remark3;
            }
            set
            {
                if (_Remark3 != value)
                {
                    _Remark3 = value;
                }
            }
        }
        private string _Remark3;

        /// <summary>
        /// Remark
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Remark4
        {
            get
            {
                return _Remark4;
            }
            set
            {
                if (_Remark4 != value)
                {
                    _Remark4 = value;
                }
            }
        }
        private string _Remark4;

        /// <summary>
        /// Remark
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=255, DataSize=255, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Remark5
        {
            get
            {
                return _Remark5;
            }
            set
            {
                if (_Remark5 != value)
                {
                    _Remark5 = value;
                }
            }
        }
        private string _Remark5;

        /// <summary>
        /// (Small)Box Quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<long> Boxquantity
        {
            get
            {
                return _Boxquantity;
            }
            set
            {
                if (_Boxquantity != value)
                {
                    _Boxquantity = value;
                }
            }
        }
        private Nullable<long> _Boxquantity;

        /// <summary>
        /// (Small)Box isusable
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isboxuse
        {
            get
            {
                return _Isboxuse;
            }
            set
            {
                if (_Isboxuse != value)
                {
                    _Isboxuse = value;
                }
            }
        }
        private string _Isboxuse;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Capability 종류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Capability")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Capability : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for object id. :  PROC | TAP | MOVE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Capabilityid
        {
            get
            {
                return _Capabilityid;
            }
            set
            {
                if (_Capabilityid != value)
                {
                    _Capabilityid = value;
                }
            }
        }
        private string _Capabilityid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment | Personnel | ProcessSegment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Objecttype
        {
            get
            {
                return _Objecttype;
            }
            set
            {
                if (_Objecttype != value)
                {
                    _Objecttype = value;
                }
            }
        }
        private string _Objecttype;

        /// <summary>
        /// CAPABILITY적용 단위ID : Location | Equipment 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilityapplytype
        {
            get
            {
                return _Capabilityapplytype;
            }
            set
            {
                if (_Capabilityapplytype != value)
                {
                    _Capabilityapplytype = value;
                }
            }
        }
        private string _Capabilityapplytype;

        /// <summary>
        /// Capability name 조립, 검사
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilityname
        {
            get
            {
                return _Capabilityname;
            }
            set
            {
                if (_Capabilityname != value)
                {
                    _Capabilityname = value;
                }
            }
        }
        private string _Capabilityname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Capability 종류 HIST
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Capabilityhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Capabilityhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for object id. :  PROC | TAP | MOVE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilityid
        {
            get
            {
                return _Capabilityid;
            }
            set
            {
                if (_Capabilityid != value)
                {
                    _Capabilityid = value;
                }
            }
        }
        private string _Capabilityid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment | Personnel | ProcessSegment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objecttype
        {
            get
            {
                return _Objecttype;
            }
            set
            {
                if (_Objecttype != value)
                {
                    _Objecttype = value;
                }
            }
        }
        private string _Objecttype;

        /// <summary>
        /// CAPABILITY적용 단위ID : Location | Equipment 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilityapplytype
        {
            get
            {
                return _Capabilityapplytype;
            }
            set
            {
                if (_Capabilityapplytype != value)
                {
                    _Capabilityapplytype = value;
                }
            }
        }
        private string _Capabilityapplytype;

        /// <summary>
        /// Capability name 조립, 검사
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilityname
        {
            get
            {
                return _Capabilityname;
            }
            set
            {
                if (_Capabilityname != value)
                {
                    _Capabilityname = value;
                }
            }
        }
        private string _Capabilityname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Capability 등급 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Capabilityproperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Capabilityproperty : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for object id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Capabilitypropertyid
        {
            get
            {
                return _Capabilitypropertyid;
            }
            set
            {
                if (_Capabilitypropertyid != value)
                {
                    _Capabilitypropertyid = value;
                }
            }
        }
        private string _Capabilitypropertyid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment | Personnel | ProcessSegment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Objecttype
        {
            get
            {
                return _Objecttype;
            }
            set
            {
                if (_Objecttype != value)
                {
                    _Objecttype = value;
                }
            }
        }
        private string _Objecttype;

        /// <summary>
        /// Unique identifier for object id. :  PROC | TAP | MOVE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Capabilityid
        {
            get
            {
                return _Capabilityid;
            }
            set
            {
                if (_Capabilityid != value)
                {
                    _Capabilityid = value;
                }
            }
        }
        private string _Capabilityid;

        /// <summary>
        /// Facility name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilitypropertyname
        {
            get
            {
                return _Capabilitypropertyname;
            }
            set
            {
                if (_Capabilitypropertyname != value)
                {
                    _Capabilitypropertyname = value;
                }
            }
        }
        private string _Capabilitypropertyname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Available | Unattainable
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// 점수 상한값
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Upperlimit
        {
            get
            {
                return _Upperlimit;
            }
            set
            {
                if (_Upperlimit != value)
                {
                    _Upperlimit = value;
                }
            }
        }
        private Nullable<decimal> _Upperlimit;

        /// <summary>
        /// 점수 하한값
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Lowerlimit
        {
            get
            {
                return _Lowerlimit;
            }
            set
            {
                if (_Lowerlimit != value)
                {
                    _Lowerlimit = value;
                }
            }
        }
        private Nullable<decimal> _Lowerlimit;

        /// <summary>
        /// 점수 단위
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Capability 종류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Capabilitypropertyhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Capabilitypropertyhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for object id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Capabilitypropertyid
        {
            get
            {
                return _Capabilitypropertyid;
            }
            set
            {
                if (_Capabilitypropertyid != value)
                {
                    _Capabilitypropertyid = value;
                }
            }
        }
        private string _Capabilitypropertyid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment | Personnel | ProcessSegment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Objecttype
        {
            get
            {
                return _Objecttype;
            }
            set
            {
                if (_Objecttype != value)
                {
                    _Objecttype = value;
                }
            }
        }
        private string _Objecttype;

        /// <summary>
        /// Unique identifier for object id. :  PROC | TAP | MOVE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Capabilityid
        {
            get
            {
                return _Capabilityid;
            }
            set
            {
                if (_Capabilityid != value)
                {
                    _Capabilityid = value;
                }
            }
        }
        private string _Capabilityid;

        /// <summary>
        /// Facility name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilitypropertyname
        {
            get
            {
                return _Capabilitypropertyname;
            }
            set
            {
                if (_Capabilitypropertyname != value)
                {
                    _Capabilitypropertyname = value;
                }
            }
        }
        private string _Capabilitypropertyname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Available | Unattainable
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// 점수 상한값
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Upperlimit
        {
            get
            {
                return _Upperlimit;
            }
            set
            {
                if (_Upperlimit != value)
                {
                    _Upperlimit = value;
                }
            }
        }
        private Nullable<decimal> _Upperlimit;

        /// <summary>
        /// 점수 하한값
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Lowerlimit
        {
            get
            {
                return _Lowerlimit;
            }
            set
            {
                if (_Lowerlimit != value)
                {
                    _Lowerlimit = value;
                }
            }
        }
        private Nullable<decimal> _Lowerlimit;

        /// <summary>
        /// 점수 단위
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 현재 Carrier
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Carrier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carrier : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for carrier id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Carrier name. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carriername
        {
            get
            {
                return _Carriername;
            }
            set
            {
                if (_Carriername != value)
                {
                    _Carriername = value;
                }
            }
        }
        private string _Carriername;

        /// <summary>
        /// Carrier definition id. (ref. FOM_CARRIERDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// Carrier class id. (ref. FOM_CARRIERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierclassid
        {
            get
            {
                return _Carrierclassid;
            }
            set
            {
                if (_Carrierclassid != value)
                {
                    _Carrierclassid = value;
                }
            }
        }
        private string _Carrierclassid;

        /// <summary>
        /// Type of material. Product | MaterialLot | Lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// Lot ID that is contained this carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Lot ID that is contained this carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Loaded state. Ex) Empty, Full, Partial
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Loadstate
        {
            get
            {
                return _Loadstate;
            }
            set
            {
                if (_Loadstate != value)
                {
                    _Loadstate = value;
                }
            }
        }
        private string _Loadstate;

        /// <summary>
        /// Total sum of the assigned product or material.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Assignquantity
        {
            get
            {
                return _Assignquantity;
            }
            set
            {
                if (_Assignquantity != value)
                {
                    _Assignquantity = value;
                }
            }
        }
        private Nullable<decimal> _Assignquantity;

        /// <summary>
        /// Maximum capacity for a slot. (Logical capacity)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Maxcapacity
        {
            get
            {
                return _Maxcapacity;
            }
            set
            {
                if (_Maxcapacity != value)
                {
                    _Maxcapacity = value;
                }
            }
        }
        private Nullable<decimal> _Maxcapacity;

        /// <summary>
        /// Current state of carrier. Ex) Created, Active, Hold, Release, Terminated
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state of carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Current location. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Previous location.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Type of usage. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usagetype
        {
            get
            {
                return _Usagetype;
            }
            set
            {
                if (_Usagetype != value)
                {
                    _Usagetype = value;
                }
            }
        }
        private string _Usagetype;

        /// <summary>
        /// Limit of usage count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecountlimit
        {
            get
            {
                return _Usagecountlimit;
            }
            set
            {
                if (_Usagecountlimit != value)
                {
                    _Usagecountlimit = value;
                }
            }
        }
        private Nullable<int> _Usagecountlimit;

        /// <summary>
        /// Current usage count. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecount
        {
            get
            {
                return _Usagecount;
            }
            set
            {
                if (_Usagecount != value)
                {
                    _Usagecount = value;
                }
            }
        }
        private Nullable<int> _Usagecount;

        /// <summary>
        /// Unit of usage period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usageperiodunit
        {
            get
            {
                return _Usageperiodunit;
            }
            set
            {
                if (_Usageperiodunit != value)
                {
                    _Usageperiodunit = value;
                }
            }
        }
        private string _Usageperiodunit;

        /// <summary>
        /// Limit of usage period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiodlimit
        {
            get
            {
                return _Usageperiodlimit;
            }
            set
            {
                if (_Usageperiodlimit != value)
                {
                    _Usageperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Usageperiodlimit;

        /// <summary>
        /// Current usage period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiod
        {
            get
            {
                return _Usageperiod;
            }
            set
            {
                if (_Usageperiod != value)
                {
                    _Usageperiod = value;
                }
            }
        }
        private Nullable<int> _Usageperiod;

        /// <summary>
        /// Type of clean. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleantype
        {
            get
            {
                return _Cleantype;
            }
            set
            {
                if (_Cleantype != value)
                {
                    _Cleantype = value;
                }
            }
        }
        private string _Cleantype;

        /// <summary>
        /// Limit of clean count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancountlimit
        {
            get
            {
                return _Cleancountlimit;
            }
            set
            {
                if (_Cleancountlimit != value)
                {
                    _Cleancountlimit = value;
                }
            }
        }
        private Nullable<int> _Cleancountlimit;

        /// <summary>
        /// Current clean count. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancount
        {
            get
            {
                return _Cleancount;
            }
            set
            {
                if (_Cleancount != value)
                {
                    _Cleancount = value;
                }
            }
        }
        private Nullable<int> _Cleancount;

        /// <summary>
        /// Unit of clean period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleanperiodunit
        {
            get
            {
                return _Cleanperiodunit;
            }
            set
            {
                if (_Cleanperiodunit != value)
                {
                    _Cleanperiodunit = value;
                }
            }
        }
        private string _Cleanperiodunit;

        /// <summary>
        /// Limit of clean period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiodlimit
        {
            get
            {
                return _Cleanperiodlimit;
            }
            set
            {
                if (_Cleanperiodlimit != value)
                {
                    _Cleanperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Cleanperiodlimit;

        /// <summary>
        /// Current clean period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiod
        {
            get
            {
                return _Cleanperiod;
            }
            set
            {
                if (_Cleanperiod != value)
                {
                    _Cleanperiod = value;
                }
            }
        }
        private Nullable<int> _Cleanperiod;

        /// <summary>
        /// The date when the carrier has been cleaned recently.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Lastcleantime
        {
            get
            {
                return _Lastcleantime;
            }
            set
            {
                if (_Lastcleantime != value)
                {
                    _Lastcleantime = value;
                }
            }
        }
        private Nullable<DateTime> _Lastcleantime;

        /// <summary>
        /// Time of next clean.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Nextcleantime
        {
            get
            {
                return _Nextcleantime;
            }
            set
            {
                if (_Nextcleantime != value)
                {
                    _Nextcleantime = value;
                }
            }
        }
        private Nullable<DateTime> _Nextcleantime;

        /// <summary>
        /// Type of repair. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairtype
        {
            get
            {
                return _Repairtype;
            }
            set
            {
                if (_Repairtype != value)
                {
                    _Repairtype = value;
                }
            }
        }
        private string _Repairtype;

        /// <summary>
        /// Limit of repair count.  Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircountlimit
        {
            get
            {
                return _Repaircountlimit;
            }
            set
            {
                if (_Repaircountlimit != value)
                {
                    _Repaircountlimit = value;
                }
            }
        }
        private Nullable<int> _Repaircountlimit;

        /// <summary>
        /// Current repair count. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircount
        {
            get
            {
                return _Repaircount;
            }
            set
            {
                if (_Repaircount != value)
                {
                    _Repaircount = value;
                }
            }
        }
        private Nullable<int> _Repaircount;

        /// <summary>
        /// Unit of repair period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairperiodunit
        {
            get
            {
                return _Repairperiodunit;
            }
            set
            {
                if (_Repairperiodunit != value)
                {
                    _Repairperiodunit = value;
                }
            }
        }
        private string _Repairperiodunit;

        /// <summary>
        /// Limit of repair period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiodlimit
        {
            get
            {
                return _Repairperiodlimit;
            }
            set
            {
                if (_Repairperiodlimit != value)
                {
                    _Repairperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Repairperiodlimit;

        /// <summary>
        /// Current repair period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiod
        {
            get
            {
                return _Repairperiod;
            }
            set
            {
                if (_Repairperiod != value)
                {
                    _Repairperiod = value;
                }
            }
        }
        private Nullable<int> _Repairperiod;

        /// <summary>
        /// Finally Carrier repair time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Lastrepairtime
        {
            get
            {
                return _Lastrepairtime;
            }
            set
            {
                if (_Lastrepairtime != value)
                {
                    _Lastrepairtime = value;
                }
            }
        }
        private Nullable<DateTime> _Lastrepairtime;

        /// <summary>
        /// Next Carrier Repair Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Nextrepairtime
        {
            get
            {
                return _Nextrepairtime;
            }
            set
            {
                if (_Nextrepairtime != value)
                {
                    _Nextrepairtime = value;
                }
            }
        }
        private Nullable<DateTime> _Nextrepairtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// Transfer request id (ref.FOM_TRANSFERREQUEST)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestid
        {
            get
            {
                return _Requestid;
            }
            set
            {
                if (_Requestid != value)
                {
                    _Requestid = value;
                }
            }
        }
        private string _Requestid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Carriercapacity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carriercapacity : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lifecyclestage
        {
            get
            {
                return _Lifecyclestage;
            }
            set
            {
                if (_Lifecyclestage != value)
                {
                    _Lifecyclestage = value;
                }
            }
        }
        private string _Lifecyclestage;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionid
        {
            get
            {
                return _Materialdefinitionid;
            }
            set
            {
                if (_Materialdefinitionid != value)
                {
                    _Materialdefinitionid = value;
                }
            }
        }
        private string _Materialdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Quantityperbox
        {
            get
            {
                return _Quantityperbox;
            }
            set
            {
                if (_Quantityperbox != value)
                {
                    _Quantityperbox = value;
                }
            }
        }
        private Nullable<int> _Quantityperbox;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Boxcount
        {
            get
            {
                return _Boxcount;
            }
            set
            {
                if (_Boxcount != value)
                {
                    _Boxcount = value;
                }
            }
        }
        private Nullable<int> _Boxcount;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<int> _Quantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecarrierquantityperday
        {
            get
            {
                return _Usagecarrierquantityperday;
            }
            set
            {
                if (_Usagecarrierquantityperday != value)
                {
                    _Usagecarrierquantityperday = value;
                }
            }
        }
        private Nullable<int> _Usagecarrierquantityperday;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagematerialquantityperday
        {
            get
            {
                return _Usagematerialquantityperday;
            }
            set
            {
                if (_Usagematerialquantityperday != value)
                {
                    _Usagematerialquantityperday = value;
                }
            }
        }
        private Nullable<int> _Usagematerialquantityperday;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Carriercapacityhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carriercapacityhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lifecyclestage
        {
            get
            {
                return _Lifecyclestage;
            }
            set
            {
                if (_Lifecyclestage != value)
                {
                    _Lifecyclestage = value;
                }
            }
        }
        private string _Lifecyclestage;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionid
        {
            get
            {
                return _Materialdefinitionid;
            }
            set
            {
                if (_Materialdefinitionid != value)
                {
                    _Materialdefinitionid = value;
                }
            }
        }
        private string _Materialdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Quantityperbox
        {
            get
            {
                return _Quantityperbox;
            }
            set
            {
                if (_Quantityperbox != value)
                {
                    _Quantityperbox = value;
                }
            }
        }
        private Nullable<int> _Quantityperbox;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<int> _Quantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Boxcount
        {
            get
            {
                return _Boxcount;
            }
            set
            {
                if (_Boxcount != value)
                {
                    _Boxcount = value;
                }
            }
        }
        private Nullable<int> _Boxcount;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecarrierquantityperday
        {
            get
            {
                return _Usagecarrierquantityperday;
            }
            set
            {
                if (_Usagecarrierquantityperday != value)
                {
                    _Usagecarrierquantityperday = value;
                }
            }
        }
        private Nullable<int> _Usagecarrierquantityperday;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagematerialquantityperday
        {
            get
            {
                return _Usagematerialquantityperday;
            }
            set
            {
                if (_Usagematerialquantityperday != value)
                {
                    _Usagematerialquantityperday = value;
                }
            }
        }
        private Nullable<int> _Usagematerialquantityperday;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Carrier 분류 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Carrierclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carrierclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for carrier class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Carrierclassid
        {
            get
            {
                return _Carrierclassid;
            }
            set
            {
                if (_Carrierclassid != value)
                {
                    _Carrierclassid = value;
                }
            }
        }
        private string _Carrierclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Carrier class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierclassname
        {
            get
            {
                return _Carrierclassname;
            }
            set
            {
                if (_Carrierclassname != value)
                {
                    _Carrierclassname = value;
                }
            }
        }
        private string _Carrierclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Carrier 분류 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Carrierclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carrierclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for carrier class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierclassid
        {
            get
            {
                return _Carrierclassid;
            }
            set
            {
                if (_Carrierclassid != value)
                {
                    _Carrierclassid = value;
                }
            }
        }
        private string _Carrierclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Carrier class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierclassname
        {
            get
            {
                return _Carrierclassname;
            }
            set
            {
                if (_Carrierclassname != value)
                {
                    _Carrierclassname = value;
                }
            }
        }
        private string _Carrierclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Carrier 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Carrierdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carrierdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for carrier definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Carrier definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionname
        {
            get
            {
                return _Carrierdefinitionname;
            }
            set
            {
                if (_Carrierdefinitionname != value)
                {
                    _Carrierdefinitionname = value;
                }
            }
        }
        private string _Carrierdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Carrier class id. (ref. FOM_CARRIERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierclassid
        {
            get
            {
                return _Carrierclassid;
            }
            set
            {
                if (_Carrierclassid != value)
                {
                    _Carrierclassid = value;
                }
            }
        }
        private string _Carrierclassid;

        /// <summary>
        /// Type of carrier. Ex) CARRIER, LOT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carriertype
        {
            get
            {
                return _Carriertype;
            }
            set
            {
                if (_Carriertype != value)
                {
                    _Carriertype = value;
                }
            }
        }
        private string _Carriertype;

        /// <summary>
        /// Vendor id. (ref. FOM_VENDOR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// Number(Count) of slot . (Physical capacity)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Slotcount
        {
            get
            {
                return _Slotcount;
            }
            set
            {
                if (_Slotcount != value)
                {
                    _Slotcount = value;
                }
            }
        }
        private Nullable<int> _Slotcount;

        /// <summary>
        /// Maximum capacity for a slot. (Logical capacity)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Maxcapacity
        {
            get
            {
                return _Maxcapacity;
            }
            set
            {
                if (_Maxcapacity != value)
                {
                    _Maxcapacity = value;
                }
            }
        }
        private Nullable<decimal> _Maxcapacity;

        /// <summary>
        /// Type of material.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// Type of usage. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usagetype
        {
            get
            {
                return _Usagetype;
            }
            set
            {
                if (_Usagetype != value)
                {
                    _Usagetype = value;
                }
            }
        }
        private string _Usagetype;

        /// <summary>
        /// Limit of usage count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecountlimit
        {
            get
            {
                return _Usagecountlimit;
            }
            set
            {
                if (_Usagecountlimit != value)
                {
                    _Usagecountlimit = value;
                }
            }
        }
        private Nullable<int> _Usagecountlimit;

        /// <summary>
        /// Unit of usage period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usageperiodunit
        {
            get
            {
                return _Usageperiodunit;
            }
            set
            {
                if (_Usageperiodunit != value)
                {
                    _Usageperiodunit = value;
                }
            }
        }
        private string _Usageperiodunit;

        /// <summary>
        /// Limit of usage period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiodlimit
        {
            get
            {
                return _Usageperiodlimit;
            }
            set
            {
                if (_Usageperiodlimit != value)
                {
                    _Usageperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Usageperiodlimit;

        /// <summary>
        /// Type of clean. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleantype
        {
            get
            {
                return _Cleantype;
            }
            set
            {
                if (_Cleantype != value)
                {
                    _Cleantype = value;
                }
            }
        }
        private string _Cleantype;

        /// <summary>
        /// Limit of clean count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancountlimit
        {
            get
            {
                return _Cleancountlimit;
            }
            set
            {
                if (_Cleancountlimit != value)
                {
                    _Cleancountlimit = value;
                }
            }
        }
        private Nullable<int> _Cleancountlimit;

        /// <summary>
        /// Unit of clean period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleanperiodunit
        {
            get
            {
                return _Cleanperiodunit;
            }
            set
            {
                if (_Cleanperiodunit != value)
                {
                    _Cleanperiodunit = value;
                }
            }
        }
        private string _Cleanperiodunit;

        /// <summary>
        /// Limit of clean period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiodlimit
        {
            get
            {
                return _Cleanperiodlimit;
            }
            set
            {
                if (_Cleanperiodlimit != value)
                {
                    _Cleanperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Cleanperiodlimit;

        /// <summary>
        /// Type of repair. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairtype
        {
            get
            {
                return _Repairtype;
            }
            set
            {
                if (_Repairtype != value)
                {
                    _Repairtype = value;
                }
            }
        }
        private string _Repairtype;

        /// <summary>
        /// Limit of repair count.  Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircountlimit
        {
            get
            {
                return _Repaircountlimit;
            }
            set
            {
                if (_Repaircountlimit != value)
                {
                    _Repaircountlimit = value;
                }
            }
        }
        private Nullable<int> _Repaircountlimit;

        /// <summary>
        /// Unit of repair period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairperiodunit
        {
            get
            {
                return _Repairperiodunit;
            }
            set
            {
                if (_Repairperiodunit != value)
                {
                    _Repairperiodunit = value;
                }
            }
        }
        private string _Repairperiodunit;

        /// <summary>
        /// Limit of repair period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiodlimit
        {
            get
            {
                return _Repairperiodlimit;
            }
            set
            {
                if (_Repairperiodlimit != value)
                {
                    _Repairperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Repairperiodlimit;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Carrier 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Carrierdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carrierdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for carrier definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Carrier definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionname
        {
            get
            {
                return _Carrierdefinitionname;
            }
            set
            {
                if (_Carrierdefinitionname != value)
                {
                    _Carrierdefinitionname = value;
                }
            }
        }
        private string _Carrierdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Carrier class id. (ref. FOM_CARRIERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierclassid
        {
            get
            {
                return _Carrierclassid;
            }
            set
            {
                if (_Carrierclassid != value)
                {
                    _Carrierclassid = value;
                }
            }
        }
        private string _Carrierclassid;

        /// <summary>
        /// Type of carrier. Ex) CARRIER, LOT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carriertype
        {
            get
            {
                return _Carriertype;
            }
            set
            {
                if (_Carriertype != value)
                {
                    _Carriertype = value;
                }
            }
        }
        private string _Carriertype;

        /// <summary>
        /// Vendor id. (ref. FOM_VENDOR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// Number(Count) of slot . (Physical capacity)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Slotcount
        {
            get
            {
                return _Slotcount;
            }
            set
            {
                if (_Slotcount != value)
                {
                    _Slotcount = value;
                }
            }
        }
        private Nullable<int> _Slotcount;

        /// <summary>
        /// Maximum capacity for a slot. (Logical capacity)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Maxcapacity
        {
            get
            {
                return _Maxcapacity;
            }
            set
            {
                if (_Maxcapacity != value)
                {
                    _Maxcapacity = value;
                }
            }
        }
        private Nullable<decimal> _Maxcapacity;

        /// <summary>
        /// Type of material.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// Type of usage. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usagetype
        {
            get
            {
                return _Usagetype;
            }
            set
            {
                if (_Usagetype != value)
                {
                    _Usagetype = value;
                }
            }
        }
        private string _Usagetype;

        /// <summary>
        /// Limit of usage count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecountlimit
        {
            get
            {
                return _Usagecountlimit;
            }
            set
            {
                if (_Usagecountlimit != value)
                {
                    _Usagecountlimit = value;
                }
            }
        }
        private Nullable<int> _Usagecountlimit;

        /// <summary>
        /// Unit of usage period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usageperiodunit
        {
            get
            {
                return _Usageperiodunit;
            }
            set
            {
                if (_Usageperiodunit != value)
                {
                    _Usageperiodunit = value;
                }
            }
        }
        private string _Usageperiodunit;

        /// <summary>
        /// Limit of usage period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiodlimit
        {
            get
            {
                return _Usageperiodlimit;
            }
            set
            {
                if (_Usageperiodlimit != value)
                {
                    _Usageperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Usageperiodlimit;

        /// <summary>
        /// Type of clean. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleantype
        {
            get
            {
                return _Cleantype;
            }
            set
            {
                if (_Cleantype != value)
                {
                    _Cleantype = value;
                }
            }
        }
        private string _Cleantype;

        /// <summary>
        /// Limit of clean count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancountlimit
        {
            get
            {
                return _Cleancountlimit;
            }
            set
            {
                if (_Cleancountlimit != value)
                {
                    _Cleancountlimit = value;
                }
            }
        }
        private Nullable<int> _Cleancountlimit;

        /// <summary>
        /// Unit of clean period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleanperiodunit
        {
            get
            {
                return _Cleanperiodunit;
            }
            set
            {
                if (_Cleanperiodunit != value)
                {
                    _Cleanperiodunit = value;
                }
            }
        }
        private string _Cleanperiodunit;

        /// <summary>
        /// Limit of clean period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiodlimit
        {
            get
            {
                return _Cleanperiodlimit;
            }
            set
            {
                if (_Cleanperiodlimit != value)
                {
                    _Cleanperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Cleanperiodlimit;

        /// <summary>
        /// Type of repair. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairtype
        {
            get
            {
                return _Repairtype;
            }
            set
            {
                if (_Repairtype != value)
                {
                    _Repairtype = value;
                }
            }
        }
        private string _Repairtype;

        /// <summary>
        /// Limit of repair count.  Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircountlimit
        {
            get
            {
                return _Repaircountlimit;
            }
            set
            {
                if (_Repaircountlimit != value)
                {
                    _Repaircountlimit = value;
                }
            }
        }
        private Nullable<int> _Repaircountlimit;

        /// <summary>
        /// Unit of repair period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairperiodunit
        {
            get
            {
                return _Repairperiodunit;
            }
            set
            {
                if (_Repairperiodunit != value)
                {
                    _Repairperiodunit = value;
                }
            }
        }
        private string _Repairperiodunit;

        /// <summary>
        /// Limit of repair period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiodlimit
        {
            get
            {
                return _Repairperiodlimit;
            }
            set
            {
                if (_Repairperiodlimit != value)
                {
                    _Repairperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Repairperiodlimit;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 현재 Carrier 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Carrierhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carrierhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for carrier id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Carrier name. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carriername
        {
            get
            {
                return _Carriername;
            }
            set
            {
                if (_Carriername != value)
                {
                    _Carriername = value;
                }
            }
        }
        private string _Carriername;

        /// <summary>
        /// Carrier definition id. (ref. FOM_CARRIERDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// Carrier class id. (ref. FOM_CARRIERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierclassid
        {
            get
            {
                return _Carrierclassid;
            }
            set
            {
                if (_Carrierclassid != value)
                {
                    _Carrierclassid = value;
                }
            }
        }
        private string _Carrierclassid;

        /// <summary>
        /// Type of material. Product | MaterialLot | Lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// Lot ID that is contained this carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Lot ID that is contained this carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Loaded state. Ex) Empty, Full, Partial
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Loadstate
        {
            get
            {
                return _Loadstate;
            }
            set
            {
                if (_Loadstate != value)
                {
                    _Loadstate = value;
                }
            }
        }
        private string _Loadstate;

        /// <summary>
        /// Total sum of the assigned product or material.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Assignquantity
        {
            get
            {
                return _Assignquantity;
            }
            set
            {
                if (_Assignquantity != value)
                {
                    _Assignquantity = value;
                }
            }
        }
        private Nullable<decimal> _Assignquantity;

        /// <summary>
        /// Maximum capacity for a slot. (Logical capacity)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Maxcapacity
        {
            get
            {
                return _Maxcapacity;
            }
            set
            {
                if (_Maxcapacity != value)
                {
                    _Maxcapacity = value;
                }
            }
        }
        private Nullable<decimal> _Maxcapacity;

        /// <summary>
        /// Current state of carrier. Ex) Created, Active, Hold, Release, Terminated
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state of carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Current location. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Previous location.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Type of usage. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usagetype
        {
            get
            {
                return _Usagetype;
            }
            set
            {
                if (_Usagetype != value)
                {
                    _Usagetype = value;
                }
            }
        }
        private string _Usagetype;

        /// <summary>
        /// Limit of usage count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecountlimit
        {
            get
            {
                return _Usagecountlimit;
            }
            set
            {
                if (_Usagecountlimit != value)
                {
                    _Usagecountlimit = value;
                }
            }
        }
        private Nullable<int> _Usagecountlimit;

        /// <summary>
        /// Current usage count. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecount
        {
            get
            {
                return _Usagecount;
            }
            set
            {
                if (_Usagecount != value)
                {
                    _Usagecount = value;
                }
            }
        }
        private Nullable<int> _Usagecount;

        /// <summary>
        /// Unit of usage period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usageperiodunit
        {
            get
            {
                return _Usageperiodunit;
            }
            set
            {
                if (_Usageperiodunit != value)
                {
                    _Usageperiodunit = value;
                }
            }
        }
        private string _Usageperiodunit;

        /// <summary>
        /// Limit of usage period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiodlimit
        {
            get
            {
                return _Usageperiodlimit;
            }
            set
            {
                if (_Usageperiodlimit != value)
                {
                    _Usageperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Usageperiodlimit;

        /// <summary>
        /// Current usage period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiod
        {
            get
            {
                return _Usageperiod;
            }
            set
            {
                if (_Usageperiod != value)
                {
                    _Usageperiod = value;
                }
            }
        }
        private Nullable<int> _Usageperiod;

        /// <summary>
        /// Type of clean. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleantype
        {
            get
            {
                return _Cleantype;
            }
            set
            {
                if (_Cleantype != value)
                {
                    _Cleantype = value;
                }
            }
        }
        private string _Cleantype;

        /// <summary>
        /// Limit of clean count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancountlimit
        {
            get
            {
                return _Cleancountlimit;
            }
            set
            {
                if (_Cleancountlimit != value)
                {
                    _Cleancountlimit = value;
                }
            }
        }
        private Nullable<int> _Cleancountlimit;

        /// <summary>
        /// Current clean count. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancount
        {
            get
            {
                return _Cleancount;
            }
            set
            {
                if (_Cleancount != value)
                {
                    _Cleancount = value;
                }
            }
        }
        private Nullable<int> _Cleancount;

        /// <summary>
        /// Unit of clean period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleanperiodunit
        {
            get
            {
                return _Cleanperiodunit;
            }
            set
            {
                if (_Cleanperiodunit != value)
                {
                    _Cleanperiodunit = value;
                }
            }
        }
        private string _Cleanperiodunit;

        /// <summary>
        /// Limit of clean period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiodlimit
        {
            get
            {
                return _Cleanperiodlimit;
            }
            set
            {
                if (_Cleanperiodlimit != value)
                {
                    _Cleanperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Cleanperiodlimit;

        /// <summary>
        /// Current clean period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiod
        {
            get
            {
                return _Cleanperiod;
            }
            set
            {
                if (_Cleanperiod != value)
                {
                    _Cleanperiod = value;
                }
            }
        }
        private Nullable<int> _Cleanperiod;

        /// <summary>
        /// The date when the carrier has been cleaned recently.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Lastcleantime
        {
            get
            {
                return _Lastcleantime;
            }
            set
            {
                if (_Lastcleantime != value)
                {
                    _Lastcleantime = value;
                }
            }
        }
        private Nullable<DateTime> _Lastcleantime;

        /// <summary>
        /// Time of next clean.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Nextcleantime
        {
            get
            {
                return _Nextcleantime;
            }
            set
            {
                if (_Nextcleantime != value)
                {
                    _Nextcleantime = value;
                }
            }
        }
        private Nullable<DateTime> _Nextcleantime;

        /// <summary>
        /// Type of repair. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairtype
        {
            get
            {
                return _Repairtype;
            }
            set
            {
                if (_Repairtype != value)
                {
                    _Repairtype = value;
                }
            }
        }
        private string _Repairtype;

        /// <summary>
        /// Limit of repair count.  Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircountlimit
        {
            get
            {
                return _Repaircountlimit;
            }
            set
            {
                if (_Repaircountlimit != value)
                {
                    _Repaircountlimit = value;
                }
            }
        }
        private Nullable<int> _Repaircountlimit;

        /// <summary>
        /// Current repair count. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircount
        {
            get
            {
                return _Repaircount;
            }
            set
            {
                if (_Repaircount != value)
                {
                    _Repaircount = value;
                }
            }
        }
        private Nullable<int> _Repaircount;

        /// <summary>
        /// Unit of repair period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairperiodunit
        {
            get
            {
                return _Repairperiodunit;
            }
            set
            {
                if (_Repairperiodunit != value)
                {
                    _Repairperiodunit = value;
                }
            }
        }
        private string _Repairperiodunit;

        /// <summary>
        /// Limit of repair period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiodlimit
        {
            get
            {
                return _Repairperiodlimit;
            }
            set
            {
                if (_Repairperiodlimit != value)
                {
                    _Repairperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Repairperiodlimit;

        /// <summary>
        /// Current repair period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiod
        {
            get
            {
                return _Repairperiod;
            }
            set
            {
                if (_Repairperiod != value)
                {
                    _Repairperiod = value;
                }
            }
        }
        private Nullable<int> _Repairperiod;

        /// <summary>
        /// Finally Carrier repair time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Lastrepairtime
        {
            get
            {
                return _Lastrepairtime;
            }
            set
            {
                if (_Lastrepairtime != value)
                {
                    _Lastrepairtime = value;
                }
            }
        }
        private Nullable<DateTime> _Lastrepairtime;

        /// <summary>
        /// Next Carrier Repair Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Nextrepairtime
        {
            get
            {
                return _Nextrepairtime;
            }
            set
            {
                if (_Nextrepairtime != value)
                {
                    _Nextrepairtime = value;
                }
            }
        }
        private Nullable<DateTime> _Nextrepairtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// Transfer request id (ref.FOM_TRANSFERREQUEST)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestid
        {
            get
            {
                return _Requestid;
            }
            set
            {
                if (_Requestid != value)
                {
                    _Requestid = value;
                }
            }
        }
        private string _Requestid;

        #endregion
    }

    /// <summary>
    /// 거래처 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for company id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Companyid
        {
            get
            {
                return _Companyid;
            }
            set
            {
                if (_Companyid != value)
                {
                    _Companyid = value;
                }
            }
        }
        private string _Companyid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Company name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyname
        {
            get
            {
                return _Companyname;
            }
            set
            {
                if (_Companyname != value)
                {
                    _Companyname = value;
                }
            }
        }
        private string _Companyname;

        /// <summary>
        /// Description of primary key.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 판매거래 여부 Y|N
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Issales
        {
            get
            {
                return _Issales;
            }
            set
            {
                if (_Issales != value)
                {
                    _Issales = value;
                }
            }
        }
        private string _Issales;

        /// <summary>
        /// 구매거래 여부 Y|N
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ispurchase
        {
            get
            {
                return _Ispurchase;
            }
            set
            {
                if (_Ispurchase != value)
                {
                    _Ispurchase = value;
                }
            }
        }
        private string _Ispurchase;

        /// <summary>
        /// CEO name of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Representativename
        {
            get
            {
                return _Representativename;
            }
            set
            {
                if (_Representativename != value)
                {
                    _Representativename = value;
                }
            }
        }
        private string _Representativename;

        /// <summary>
        /// Address of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyaddress1
        {
            get
            {
                return _Companyaddress1;
            }
            set
            {
                if (_Companyaddress1 != value)
                {
                    _Companyaddress1 = value;
                }
            }
        }
        private string _Companyaddress1;

        /// <summary>
        /// Address of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=402, DataSize=201, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyaddress2
        {
            get
            {
                return _Companyaddress2;
            }
            set
            {
                if (_Companyaddress2 != value)
                {
                    _Companyaddress2 = value;
                }
            }
        }
        private string _Companyaddress2;

        /// <summary>
        /// Address of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=404, DataSize=202, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyaddress3
        {
            get
            {
                return _Companyaddress3;
            }
            set
            {
                if (_Companyaddress3 != value)
                {
                    _Companyaddress3 = value;
                }
            }
        }
        private string _Companyaddress3;

        /// <summary>
        /// Country code of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=3, DataSize=3, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Countrycode
        {
            get
            {
                return _Countrycode;
            }
            set
            {
                if (_Countrycode != value)
                {
                    _Countrycode = value;
                }
            }
        }
        private string _Countrycode;

        /// <summary>
        /// Short name of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shortname
        {
            get
            {
                return _Shortname;
            }
            set
            {
                if (_Shortname != value)
                {
                    _Shortname = value;
                }
            }
        }
        private string _Shortname;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 거래 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Companyhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Companyhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for company id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Companyid
        {
            get
            {
                return _Companyid;
            }
            set
            {
                if (_Companyid != value)
                {
                    _Companyid = value;
                }
            }
        }
        private string _Companyid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Company name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyname
        {
            get
            {
                return _Companyname;
            }
            set
            {
                if (_Companyname != value)
                {
                    _Companyname = value;
                }
            }
        }
        private string _Companyname;

        /// <summary>
        /// Description of primary key.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 판매거래 여부 Y|N
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Issales
        {
            get
            {
                return _Issales;
            }
            set
            {
                if (_Issales != value)
                {
                    _Issales = value;
                }
            }
        }
        private string _Issales;

        /// <summary>
        /// 구매거래 여부 Y|N
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ispurchase
        {
            get
            {
                return _Ispurchase;
            }
            set
            {
                if (_Ispurchase != value)
                {
                    _Ispurchase = value;
                }
            }
        }
        private string _Ispurchase;

        /// <summary>
        /// CEO name of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Representativename
        {
            get
            {
                return _Representativename;
            }
            set
            {
                if (_Representativename != value)
                {
                    _Representativename = value;
                }
            }
        }
        private string _Representativename;

        /// <summary>
        /// Address of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyaddress1
        {
            get
            {
                return _Companyaddress1;
            }
            set
            {
                if (_Companyaddress1 != value)
                {
                    _Companyaddress1 = value;
                }
            }
        }
        private string _Companyaddress1;

        /// <summary>
        /// Address of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyaddress2
        {
            get
            {
                return _Companyaddress2;
            }
            set
            {
                if (_Companyaddress2 != value)
                {
                    _Companyaddress2 = value;
                }
            }
        }
        private string _Companyaddress2;

        /// <summary>
        /// Address of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyaddress3
        {
            get
            {
                return _Companyaddress3;
            }
            set
            {
                if (_Companyaddress3 != value)
                {
                    _Companyaddress3 = value;
                }
            }
        }
        private string _Companyaddress3;

        /// <summary>
        /// Country code of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=3, DataSize=3, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Countrycode
        {
            get
            {
                return _Countrycode;
            }
            set
            {
                if (_Countrycode != value)
                {
                    _Countrycode = value;
                }
            }
        }
        private string _Countrycode;

        /// <summary>
        /// Short name of company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shortname
        {
            get
            {
                return _Shortname;
            }
            set
            {
                if (_Shortname != value)
                {
                    _Shortname = value;
                }
            }
        }
        private string _Shortname;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Constant 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Constantclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Constantclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Classification id for what information is defined to be used, to cope flexibly to special circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Constantclassid
        {
            get
            {
                return _Constantclassid;
            }
            set
            {
                if (_Constantclassid != value)
                {
                    _Constantclassid = value;
                }
            }
        }
        private string _Constantclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// The name of the information for use by extending the definition depending on the circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constantclassname
        {
            get
            {
                return _Constantclassname;
            }
            set
            {
                if (_Constantclassname != value)
                {
                    _Constantclassname = value;
                }
            }
        }
        private string _Constantclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of constant class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constanttype
        {
            get
            {
                return _Constanttype;
            }
            set
            {
                if (_Constanttype != value)
                {
                    _Constanttype = value;
                }
            }
        }
        private string _Constanttype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Enum 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Constantclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Constantclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Classification id for what information is defined to be used, to cope flexibly to special circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constantclassid
        {
            get
            {
                return _Constantclassid;
            }
            set
            {
                if (_Constantclassid != value)
                {
                    _Constantclassid = value;
                }
            }
        }
        private string _Constantclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// The name of the information for use by extending the definition depending on the circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constantclassname
        {
            get
            {
                return _Constantclassname;
            }
            set
            {
                if (_Constantclassname != value)
                {
                    _Constantclassname = value;
                }
            }
        }
        private string _Constantclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of constant class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constanttype
        {
            get
            {
                return _Constanttype;
            }
            set
            {
                if (_Constanttype != value)
                {
                    _Constanttype = value;
                }
            }
        }
        private string _Constanttype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Constantdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Constantdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Constantclassid
        {
            get
            {
                return _Constantclassid;
            }
            set
            {
                if (_Constantclassid != value)
                {
                    _Constantclassid = value;
                }
            }
        }
        private string _Constantclassid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Constantdefinitionid
        {
            get
            {
                return _Constantdefinitionid;
            }
            set
            {
                if (_Constantdefinitionid != value)
                {
                    _Constantdefinitionid = value;
                }
            }
        }
        private string _Constantdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constantdefinitionname
        {
            get
            {
                return _Constantdefinitionname;
            }
            set
            {
                if (_Constantdefinitionname != value)
                {
                    _Constantdefinitionname = value;
                }
            }
        }
        private string _Constantdefinitionname;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constantvalue
        {
            get
            {
                return _Constantvalue;
            }
            set
            {
                if (_Constantvalue != value)
                {
                    _Constantvalue = value;
                }
            }
        }
        private string _Constantvalue;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 상수 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Constantdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Constantdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Classification id for what information is defined to be used, to cope flexibly to special circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constantclassid
        {
            get
            {
                return _Constantclassid;
            }
            set
            {
                if (_Constantclassid != value)
                {
                    _Constantclassid = value;
                }
            }
        }
        private string _Constantclassid;

        /// <summary>
        /// ID of repetitive work according to specific status or state value definition
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constantdefinitionid
        {
            get
            {
                return _Constantdefinitionid;
            }
            set
            {
                if (_Constantdefinitionid != value)
                {
                    _Constantdefinitionid = value;
                }
            }
        }
        private string _Constantdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Name of repetitive work according to specific status or state value definition
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constantdefinitionname
        {
            get
            {
                return _Constantdefinitionname;
            }
            set
            {
                if (_Constantdefinitionname != value)
                {
                    _Constantdefinitionname = value;
                }
            }
        }
        private string _Constantdefinitionname;

        /// <summary>
        /// Value of repetitive work according to specific status or state value definition
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constantvalue
        {
            get
            {
                return _Constantvalue;
            }
            set
            {
                if (_Constantvalue != value)
                {
                    _Constantvalue = value;
                }
            }
        }
        private string _Constantvalue;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 거래처별품목관리
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Customerpart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customerpart : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for Company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Companyid
        {
            get
            {
                return _Companyid;
            }
            set
            {
                if (_Companyid != value)
                {
                    _Companyid = value;
                }
            }
        }
        private string _Companyid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 제품코드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// 고객사 PARTID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Customerpartid
        {
            get
            {
                return _Customerpartid;
            }
            set
            {
                if (_Customerpartid != value)
                {
                    _Customerpartid = value;
                }
            }
        }
        private string _Customerpartid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 거래처별품목관리 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Customerparthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customerparthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for Company.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Companyid
        {
            get
            {
                return _Companyid;
            }
            set
            {
                if (_Companyid != value)
                {
                    _Companyid = value;
                }
            }
        }
        private string _Companyid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 제품코드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// 고객사 PARTID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Customerpartid
        {
            get
            {
                return _Customerpartid;
            }
            set
            {
                if (_Customerpartid != value)
                {
                    _Customerpartid = value;
                }
            }
        }
        private string _Customerpartid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 영속성 자재 현황 (Ex. Mask / Punch)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Durable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Durable : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for durable id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Durableid
        {
            get
            {
                return _Durableid;
            }
            set
            {
                if (_Durableid != value)
                {
                    _Durableid = value;
                }
            }
        }
        private string _Durableid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Durable name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durablename
        {
            get
            {
                return _Durablename;
            }
            set
            {
                if (_Durablename != value)
                {
                    _Durablename = value;
                }
            }
        }
        private string _Durablename;

        /// <summary>
        /// Durable definition id. (ref. FOM_DURABLEDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durabledefinitionid
        {
            get
            {
                return _Durabledefinitionid;
            }
            set
            {
                if (_Durabledefinitionid != value)
                {
                    _Durabledefinitionid = value;
                }
            }
        }
        private string _Durabledefinitionid;

        /// <summary>
        /// Durable class id. (ref. FOM_DURABLECLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableclassid
        {
            get
            {
                return _Durableclassid;
            }
            set
            {
                if (_Durableclassid != value)
                {
                    _Durableclassid = value;
                }
            }
        }
        private string _Durableclassid;

        /// <summary>
        /// The equipment id that durable has been attached. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// The time that durable has been reset after reparing.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Resettime
        {
            get
            {
                return _Resettime;
            }
            set
            {
                if (_Resettime != value)
                {
                    _Resettime = value;
                }
            }
        }
        private Nullable<DateTime> _Resettime;

        /// <summary>
        /// Unit id. (ref. FOM_UOM) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Vendor id. (ref. FOM_VENDOR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// Current state. (ref. FOM_STATE) ex) Created, Active, Hold, Release, Terminated
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state. (ref. FOM_STATE) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Current location. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Previous location. (ref. FOM_LOCATION) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Type of usage. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usagetype
        {
            get
            {
                return _Usagetype;
            }
            set
            {
                if (_Usagetype != value)
                {
                    _Usagetype = value;
                }
            }
        }
        private string _Usagetype;

        /// <summary>
        /// Limit of usage count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecountlimit
        {
            get
            {
                return _Usagecountlimit;
            }
            set
            {
                if (_Usagecountlimit != value)
                {
                    _Usagecountlimit = value;
                }
            }
        }
        private Nullable<int> _Usagecountlimit;

        /// <summary>
        /// Current usage count. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecount
        {
            get
            {
                return _Usagecount;
            }
            set
            {
                if (_Usagecount != value)
                {
                    _Usagecount = value;
                }
            }
        }
        private Nullable<int> _Usagecount;

        /// <summary>
        /// Unit of usage period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usageperiodunit
        {
            get
            {
                return _Usageperiodunit;
            }
            set
            {
                if (_Usageperiodunit != value)
                {
                    _Usageperiodunit = value;
                }
            }
        }
        private string _Usageperiodunit;

        /// <summary>
        /// Limit of usage period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiodlimit
        {
            get
            {
                return _Usageperiodlimit;
            }
            set
            {
                if (_Usageperiodlimit != value)
                {
                    _Usageperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Usageperiodlimit;

        /// <summary>
        /// Current usage period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiod
        {
            get
            {
                return _Usageperiod;
            }
            set
            {
                if (_Usageperiod != value)
                {
                    _Usageperiod = value;
                }
            }
        }
        private Nullable<int> _Usageperiod;

        /// <summary>
        /// Type of clean. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleantype
        {
            get
            {
                return _Cleantype;
            }
            set
            {
                if (_Cleantype != value)
                {
                    _Cleantype = value;
                }
            }
        }
        private string _Cleantype;

        /// <summary>
        /// Limit of clean count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancountlimit
        {
            get
            {
                return _Cleancountlimit;
            }
            set
            {
                if (_Cleancountlimit != value)
                {
                    _Cleancountlimit = value;
                }
            }
        }
        private Nullable<int> _Cleancountlimit;

        /// <summary>
        /// Current clean count. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancount
        {
            get
            {
                return _Cleancount;
            }
            set
            {
                if (_Cleancount != value)
                {
                    _Cleancount = value;
                }
            }
        }
        private Nullable<int> _Cleancount;

        /// <summary>
        /// Unit of clean period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleanperiodunit
        {
            get
            {
                return _Cleanperiodunit;
            }
            set
            {
                if (_Cleanperiodunit != value)
                {
                    _Cleanperiodunit = value;
                }
            }
        }
        private string _Cleanperiodunit;

        /// <summary>
        /// Limit of clean period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiodlimit
        {
            get
            {
                return _Cleanperiodlimit;
            }
            set
            {
                if (_Cleanperiodlimit != value)
                {
                    _Cleanperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Cleanperiodlimit;

        /// <summary>
        /// Current clean period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiod
        {
            get
            {
                return _Cleanperiod;
            }
            set
            {
                if (_Cleanperiod != value)
                {
                    _Cleanperiod = value;
                }
            }
        }
        private Nullable<int> _Cleanperiod;

        /// <summary>
        /// The date when the carrier has been cleaned recently.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Lastcleantime
        {
            get
            {
                return _Lastcleantime;
            }
            set
            {
                if (_Lastcleantime != value)
                {
                    _Lastcleantime = value;
                }
            }
        }
        private Nullable<DateTime> _Lastcleantime;

        /// <summary>
        /// Time of next clean.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Nextcleantime
        {
            get
            {
                return _Nextcleantime;
            }
            set
            {
                if (_Nextcleantime != value)
                {
                    _Nextcleantime = value;
                }
            }
        }
        private Nullable<DateTime> _Nextcleantime;

        /// <summary>
        /// Type of repair. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairtype
        {
            get
            {
                return _Repairtype;
            }
            set
            {
                if (_Repairtype != value)
                {
                    _Repairtype = value;
                }
            }
        }
        private string _Repairtype;

        /// <summary>
        /// Limit of repair count.  Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircountlimit
        {
            get
            {
                return _Repaircountlimit;
            }
            set
            {
                if (_Repaircountlimit != value)
                {
                    _Repaircountlimit = value;
                }
            }
        }
        private Nullable<int> _Repaircountlimit;

        /// <summary>
        /// Current repair count.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircount
        {
            get
            {
                return _Repaircount;
            }
            set
            {
                if (_Repaircount != value)
                {
                    _Repaircount = value;
                }
            }
        }
        private Nullable<int> _Repaircount;

        /// <summary>
        /// Unit of repair period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairperiodunit
        {
            get
            {
                return _Repairperiodunit;
            }
            set
            {
                if (_Repairperiodunit != value)
                {
                    _Repairperiodunit = value;
                }
            }
        }
        private string _Repairperiodunit;

        /// <summary>
        /// Limit of repair period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiodlimit
        {
            get
            {
                return _Repairperiodlimit;
            }
            set
            {
                if (_Repairperiodlimit != value)
                {
                    _Repairperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Repairperiodlimit;

        /// <summary>
        /// Current repair period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiod
        {
            get
            {
                return _Repairperiod;
            }
            set
            {
                if (_Repairperiod != value)
                {
                    _Repairperiod = value;
                }
            }
        }
        private Nullable<int> _Repairperiod;

        /// <summary>
        /// Finally Durable Material repair time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Lastrepairtime
        {
            get
            {
                return _Lastrepairtime;
            }
            set
            {
                if (_Lastrepairtime != value)
                {
                    _Lastrepairtime = value;
                }
            }
        }
        private Nullable<DateTime> _Lastrepairtime;

        /// <summary>
        /// Next Carrier Repair Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Nextrepairtime
        {
            get
            {
                return _Nextrepairtime;
            }
            set
            {
                if (_Nextrepairtime != value)
                {
                    _Nextrepairtime = value;
                }
            }
        }
        private Nullable<DateTime> _Nextrepairtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 영속성 자재 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Durableclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Durableclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for durable class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Durableclassid
        {
            get
            {
                return _Durableclassid;
            }
            set
            {
                if (_Durableclassid != value)
                {
                    _Durableclassid = value;
                }
            }
        }
        private string _Durableclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Durable class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableclassname
        {
            get
            {
                return _Durableclassname;
            }
            set
            {
                if (_Durableclassname != value)
                {
                    _Durableclassname = value;
                }
            }
        }
        private string _Durableclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of durable class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableclasstype
        {
            get
            {
                return _Durableclasstype;
            }
            set
            {
                if (_Durableclasstype != value)
                {
                    _Durableclasstype = value;
                }
            }
        }
        private string _Durableclasstype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 영속성 자재 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Durableclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Durableclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for durable class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableclassid
        {
            get
            {
                return _Durableclassid;
            }
            set
            {
                if (_Durableclassid != value)
                {
                    _Durableclassid = value;
                }
            }
        }
        private string _Durableclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Durable class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableclassname
        {
            get
            {
                return _Durableclassname;
            }
            set
            {
                if (_Durableclassname != value)
                {
                    _Durableclassname = value;
                }
            }
        }
        private string _Durableclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of durable class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableclasstype
        {
            get
            {
                return _Durableclasstype;
            }
            set
            {
                if (_Durableclasstype != value)
                {
                    _Durableclasstype = value;
                }
            }
        }
        private string _Durableclasstype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 영속성 자재 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Durabledefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Durabledefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for durable definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Durabledefinitionid
        {
            get
            {
                return _Durabledefinitionid;
            }
            set
            {
                if (_Durabledefinitionid != value)
                {
                    _Durabledefinitionid = value;
                }
            }
        }
        private string _Durabledefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Durable definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durabledefinitionname
        {
            get
            {
                return _Durabledefinitionname;
            }
            set
            {
                if (_Durabledefinitionname != value)
                {
                    _Durabledefinitionname = value;
                }
            }
        }
        private string _Durabledefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Durable class id. (ref. FOM_DURABLECLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableclassid
        {
            get
            {
                return _Durableclassid;
            }
            set
            {
                if (_Durableclassid != value)
                {
                    _Durableclassid = value;
                }
            }
        }
        private string _Durableclassid;

        /// <summary>
        /// Vendor id. (ref. FOM_VENDOR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// Type of usage. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usagetype
        {
            get
            {
                return _Usagetype;
            }
            set
            {
                if (_Usagetype != value)
                {
                    _Usagetype = value;
                }
            }
        }
        private string _Usagetype;

        /// <summary>
        /// Limit of usage count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecountlimit
        {
            get
            {
                return _Usagecountlimit;
            }
            set
            {
                if (_Usagecountlimit != value)
                {
                    _Usagecountlimit = value;
                }
            }
        }
        private Nullable<int> _Usagecountlimit;

        /// <summary>
        /// Unit of usage period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usageperiodunit
        {
            get
            {
                return _Usageperiodunit;
            }
            set
            {
                if (_Usageperiodunit != value)
                {
                    _Usageperiodunit = value;
                }
            }
        }
        private string _Usageperiodunit;

        /// <summary>
        /// Limit of usage period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiodlimit
        {
            get
            {
                return _Usageperiodlimit;
            }
            set
            {
                if (_Usageperiodlimit != value)
                {
                    _Usageperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Usageperiodlimit;

        /// <summary>
        /// Type of clean. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleantype
        {
            get
            {
                return _Cleantype;
            }
            set
            {
                if (_Cleantype != value)
                {
                    _Cleantype = value;
                }
            }
        }
        private string _Cleantype;

        /// <summary>
        /// Maximum clean count.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancountlimit
        {
            get
            {
                return _Cleancountlimit;
            }
            set
            {
                if (_Cleancountlimit != value)
                {
                    _Cleancountlimit = value;
                }
            }
        }
        private Nullable<int> _Cleancountlimit;

        /// <summary>
        /// Unit of clean period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleanperiodunit
        {
            get
            {
                return _Cleanperiodunit;
            }
            set
            {
                if (_Cleanperiodunit != value)
                {
                    _Cleanperiodunit = value;
                }
            }
        }
        private string _Cleanperiodunit;

        /// <summary>
        /// Limit of clean period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiodlimit
        {
            get
            {
                return _Cleanperiodlimit;
            }
            set
            {
                if (_Cleanperiodlimit != value)
                {
                    _Cleanperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Cleanperiodlimit;

        /// <summary>
        /// Type of repair. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairtype
        {
            get
            {
                return _Repairtype;
            }
            set
            {
                if (_Repairtype != value)
                {
                    _Repairtype = value;
                }
            }
        }
        private string _Repairtype;

        /// <summary>
        /// Maximum repair count.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircountlimit
        {
            get
            {
                return _Repaircountlimit;
            }
            set
            {
                if (_Repaircountlimit != value)
                {
                    _Repaircountlimit = value;
                }
            }
        }
        private Nullable<int> _Repaircountlimit;

        /// <summary>
        /// Unit of repair period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairperiodunit
        {
            get
            {
                return _Repairperiodunit;
            }
            set
            {
                if (_Repairperiodunit != value)
                {
                    _Repairperiodunit = value;
                }
            }
        }
        private string _Repairperiodunit;

        /// <summary>
        /// Limit of repair period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiodlimit
        {
            get
            {
                return _Repairperiodlimit;
            }
            set
            {
                if (_Repairperiodlimit != value)
                {
                    _Repairperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Repairperiodlimit;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 영속성 자재 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Durabledefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Durabledefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for durable definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durabledefinitionid
        {
            get
            {
                return _Durabledefinitionid;
            }
            set
            {
                if (_Durabledefinitionid != value)
                {
                    _Durabledefinitionid = value;
                }
            }
        }
        private string _Durabledefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Durable definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durabledefinitionname
        {
            get
            {
                return _Durabledefinitionname;
            }
            set
            {
                if (_Durabledefinitionname != value)
                {
                    _Durabledefinitionname = value;
                }
            }
        }
        private string _Durabledefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Durable class id. (ref. FOM_DURABLECLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableclassid
        {
            get
            {
                return _Durableclassid;
            }
            set
            {
                if (_Durableclassid != value)
                {
                    _Durableclassid = value;
                }
            }
        }
        private string _Durableclassid;

        /// <summary>
        /// Vendor id. (ref. FOM_VENDOR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// Type of usage. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usagetype
        {
            get
            {
                return _Usagetype;
            }
            set
            {
                if (_Usagetype != value)
                {
                    _Usagetype = value;
                }
            }
        }
        private string _Usagetype;

        /// <summary>
        /// Limit of usage count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecountlimit
        {
            get
            {
                return _Usagecountlimit;
            }
            set
            {
                if (_Usagecountlimit != value)
                {
                    _Usagecountlimit = value;
                }
            }
        }
        private Nullable<int> _Usagecountlimit;

        /// <summary>
        /// Unit of usage period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usageperiodunit
        {
            get
            {
                return _Usageperiodunit;
            }
            set
            {
                if (_Usageperiodunit != value)
                {
                    _Usageperiodunit = value;
                }
            }
        }
        private string _Usageperiodunit;

        /// <summary>
        /// Limit of usage period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiodlimit
        {
            get
            {
                return _Usageperiodlimit;
            }
            set
            {
                if (_Usageperiodlimit != value)
                {
                    _Usageperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Usageperiodlimit;

        /// <summary>
        /// Type of clean. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleantype
        {
            get
            {
                return _Cleantype;
            }
            set
            {
                if (_Cleantype != value)
                {
                    _Cleantype = value;
                }
            }
        }
        private string _Cleantype;

        /// <summary>
        /// Maximum clean count.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancountlimit
        {
            get
            {
                return _Cleancountlimit;
            }
            set
            {
                if (_Cleancountlimit != value)
                {
                    _Cleancountlimit = value;
                }
            }
        }
        private Nullable<int> _Cleancountlimit;

        /// <summary>
        /// Unit of clean period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleanperiodunit
        {
            get
            {
                return _Cleanperiodunit;
            }
            set
            {
                if (_Cleanperiodunit != value)
                {
                    _Cleanperiodunit = value;
                }
            }
        }
        private string _Cleanperiodunit;

        /// <summary>
        /// Limit of clean period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiodlimit
        {
            get
            {
                return _Cleanperiodlimit;
            }
            set
            {
                if (_Cleanperiodlimit != value)
                {
                    _Cleanperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Cleanperiodlimit;

        /// <summary>
        /// Type of repair. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairtype
        {
            get
            {
                return _Repairtype;
            }
            set
            {
                if (_Repairtype != value)
                {
                    _Repairtype = value;
                }
            }
        }
        private string _Repairtype;

        /// <summary>
        /// Maximum repair count.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircountlimit
        {
            get
            {
                return _Repaircountlimit;
            }
            set
            {
                if (_Repaircountlimit != value)
                {
                    _Repaircountlimit = value;
                }
            }
        }
        private Nullable<int> _Repaircountlimit;

        /// <summary>
        /// Unit of repair period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairperiodunit
        {
            get
            {
                return _Repairperiodunit;
            }
            set
            {
                if (_Repairperiodunit != value)
                {
                    _Repairperiodunit = value;
                }
            }
        }
        private string _Repairperiodunit;

        /// <summary>
        /// Limit of repair period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiodlimit
        {
            get
            {
                return _Repairperiodlimit;
            }
            set
            {
                if (_Repairperiodlimit != value)
                {
                    _Repairperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Repairperiodlimit;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 영속성 자재 현황 (Ex. Mask / Punch) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Durablehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Durablehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for durable id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableid
        {
            get
            {
                return _Durableid;
            }
            set
            {
                if (_Durableid != value)
                {
                    _Durableid = value;
                }
            }
        }
        private string _Durableid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Durable name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durablename
        {
            get
            {
                return _Durablename;
            }
            set
            {
                if (_Durablename != value)
                {
                    _Durablename = value;
                }
            }
        }
        private string _Durablename;

        /// <summary>
        /// Durable definition id. (ref. FOM_DURABLEDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durabledefinitionid
        {
            get
            {
                return _Durabledefinitionid;
            }
            set
            {
                if (_Durabledefinitionid != value)
                {
                    _Durabledefinitionid = value;
                }
            }
        }
        private string _Durabledefinitionid;

        /// <summary>
        /// Durable class id. (ref. FOM_DURABLECLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableclassid
        {
            get
            {
                return _Durableclassid;
            }
            set
            {
                if (_Durableclassid != value)
                {
                    _Durableclassid = value;
                }
            }
        }
        private string _Durableclassid;

        /// <summary>
        /// The equipment id that durable has been attached. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// The time that durable has been reset after reparing.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Resettime
        {
            get
            {
                return _Resettime;
            }
            set
            {
                if (_Resettime != value)
                {
                    _Resettime = value;
                }
            }
        }
        private Nullable<DateTime> _Resettime;

        /// <summary>
        /// Unit id. (ref. FOM_UOM) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Vendor id. (ref. FOM_VENDOR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// Current state. (ref. FOM_STATE) ex) Created, Active, Hold, Release, Terminated
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state. (ref. FOM_STATE) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Current location. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Previous location. (ref. FOM_LOCATION) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Type of usage. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usagetype
        {
            get
            {
                return _Usagetype;
            }
            set
            {
                if (_Usagetype != value)
                {
                    _Usagetype = value;
                }
            }
        }
        private string _Usagetype;

        /// <summary>
        /// Limit of usage count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecountlimit
        {
            get
            {
                return _Usagecountlimit;
            }
            set
            {
                if (_Usagecountlimit != value)
                {
                    _Usagecountlimit = value;
                }
            }
        }
        private Nullable<int> _Usagecountlimit;

        /// <summary>
        /// Current usage count. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usagecount
        {
            get
            {
                return _Usagecount;
            }
            set
            {
                if (_Usagecount != value)
                {
                    _Usagecount = value;
                }
            }
        }
        private Nullable<int> _Usagecount;

        /// <summary>
        /// Unit of usage period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usageperiodunit
        {
            get
            {
                return _Usageperiodunit;
            }
            set
            {
                if (_Usageperiodunit != value)
                {
                    _Usageperiodunit = value;
                }
            }
        }
        private string _Usageperiodunit;

        /// <summary>
        /// Limit of usage period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiodlimit
        {
            get
            {
                return _Usageperiodlimit;
            }
            set
            {
                if (_Usageperiodlimit != value)
                {
                    _Usageperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Usageperiodlimit;

        /// <summary>
        /// Current usage period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Usageperiod
        {
            get
            {
                return _Usageperiod;
            }
            set
            {
                if (_Usageperiod != value)
                {
                    _Usageperiod = value;
                }
            }
        }
        private Nullable<int> _Usageperiod;

        /// <summary>
        /// Type of clean. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleantype
        {
            get
            {
                return _Cleantype;
            }
            set
            {
                if (_Cleantype != value)
                {
                    _Cleantype = value;
                }
            }
        }
        private string _Cleantype;

        /// <summary>
        /// Limit of clean count. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancountlimit
        {
            get
            {
                return _Cleancountlimit;
            }
            set
            {
                if (_Cleancountlimit != value)
                {
                    _Cleancountlimit = value;
                }
            }
        }
        private Nullable<int> _Cleancountlimit;

        /// <summary>
        /// Current clean count. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleancount
        {
            get
            {
                return _Cleancount;
            }
            set
            {
                if (_Cleancount != value)
                {
                    _Cleancount = value;
                }
            }
        }
        private Nullable<int> _Cleancount;

        /// <summary>
        /// Unit of clean period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cleanperiodunit
        {
            get
            {
                return _Cleanperiodunit;
            }
            set
            {
                if (_Cleanperiodunit != value)
                {
                    _Cleanperiodunit = value;
                }
            }
        }
        private string _Cleanperiodunit;

        /// <summary>
        /// Limit of clean period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiodlimit
        {
            get
            {
                return _Cleanperiodlimit;
            }
            set
            {
                if (_Cleanperiodlimit != value)
                {
                    _Cleanperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Cleanperiodlimit;

        /// <summary>
        /// Current clean period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Cleanperiod
        {
            get
            {
                return _Cleanperiod;
            }
            set
            {
                if (_Cleanperiod != value)
                {
                    _Cleanperiod = value;
                }
            }
        }
        private Nullable<int> _Cleanperiod;

        /// <summary>
        /// The date when the carrier has been cleaned recently.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Lastcleantime
        {
            get
            {
                return _Lastcleantime;
            }
            set
            {
                if (_Lastcleantime != value)
                {
                    _Lastcleantime = value;
                }
            }
        }
        private Nullable<DateTime> _Lastcleantime;

        /// <summary>
        /// Time of next clean.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Nextcleantime
        {
            get
            {
                return _Nextcleantime;
            }
            set
            {
                if (_Nextcleantime != value)
                {
                    _Nextcleantime = value;
                }
            }
        }
        private Nullable<DateTime> _Nextcleantime;

        /// <summary>
        /// Type of repair. Ex) Count, Period
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairtype
        {
            get
            {
                return _Repairtype;
            }
            set
            {
                if (_Repairtype != value)
                {
                    _Repairtype = value;
                }
            }
        }
        private string _Repairtype;

        /// <summary>
        /// Limit of repair count.  Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircountlimit
        {
            get
            {
                return _Repaircountlimit;
            }
            set
            {
                if (_Repaircountlimit != value)
                {
                    _Repaircountlimit = value;
                }
            }
        }
        private Nullable<int> _Repaircountlimit;

        /// <summary>
        /// Current repair count.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repaircount
        {
            get
            {
                return _Repaircount;
            }
            set
            {
                if (_Repaircount != value)
                {
                    _Repaircount = value;
                }
            }
        }
        private Nullable<int> _Repaircount;

        /// <summary>
        /// Unit of repair period. Ex) DAY, HOUR, MIN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Repairperiodunit
        {
            get
            {
                return _Repairperiodunit;
            }
            set
            {
                if (_Repairperiodunit != value)
                {
                    _Repairperiodunit = value;
                }
            }
        }
        private string _Repairperiodunit;

        /// <summary>
        /// Limit of repair period. Ex) 10, 20, 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiodlimit
        {
            get
            {
                return _Repairperiodlimit;
            }
            set
            {
                if (_Repairperiodlimit != value)
                {
                    _Repairperiodlimit = value;
                }
            }
        }
        private Nullable<int> _Repairperiodlimit;

        /// <summary>
        /// Current repair period. Ex) 10
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repairperiod
        {
            get
            {
                return _Repairperiod;
            }
            set
            {
                if (_Repairperiod != value)
                {
                    _Repairperiod = value;
                }
            }
        }
        private Nullable<int> _Repairperiod;

        /// <summary>
        /// Finally Durable Material repair time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Lastrepairtime
        {
            get
            {
                return _Lastrepairtime;
            }
            set
            {
                if (_Lastrepairtime != value)
                {
                    _Lastrepairtime = value;
                }
            }
        }
        private Nullable<DateTime> _Lastrepairtime;

        /// <summary>
        /// Next Carrier Repair Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Nextrepairtime
        {
            get
            {
                return _Nextrepairtime;
            }
            set
            {
                if (_Nextrepairtime != value)
                {
                    _Nextrepairtime = value;
                }
            }
        }
        private Nullable<DateTime> _Nextrepairtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Enum 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Enumclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Enumclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Classification id for what information is defined to be used, to cope flexibly to special circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Enumclassid
        {
            get
            {
                return _Enumclassid;
            }
            set
            {
                if (_Enumclassid != value)
                {
                    _Enumclassid = value;
                }
            }
        }
        private string _Enumclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// The name of the information for use by extending the definition depending on the circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumclassname
        {
            get
            {
                return _Enumclassname;
            }
            set
            {
                if (_Enumclassname != value)
                {
                    _Enumclassname = value;
                }
            }
        }
        private string _Enumclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of Enum class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumtype
        {
            get
            {
                return _Enumtype;
            }
            set
            {
                if (_Enumtype != value)
                {
                    _Enumtype = value;
                }
            }
        }
        private string _Enumtype;

        /// <summary>
        /// The flag about whether to use a constant topic for discriminating against a particular item.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isconstant
        {
            get
            {
                return _Isconstant;
            }
            set
            {
                if (_Isconstant != value)
                {
                    _Isconstant = value;
                }
            }
        }
        private string _Isconstant;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Enum 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Enumclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Enumclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Classification id for what information is defined to be used, to cope flexibly to special circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumclassid
        {
            get
            {
                return _Enumclassid;
            }
            set
            {
                if (_Enumclassid != value)
                {
                    _Enumclassid = value;
                }
            }
        }
        private string _Enumclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// The name of the information for use by extending the definition depending on the circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumclassname
        {
            get
            {
                return _Enumclassname;
            }
            set
            {
                if (_Enumclassname != value)
                {
                    _Enumclassname = value;
                }
            }
        }
        private string _Enumclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of Enum class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumtype
        {
            get
            {
                return _Enumtype;
            }
            set
            {
                if (_Enumtype != value)
                {
                    _Enumtype = value;
                }
            }
        }
        private string _Enumtype;

        /// <summary>
        /// The flag about whether to use a constant topic for discriminating against a particular item.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isconstant
        {
            get
            {
                return _Isconstant;
            }
            set
            {
                if (_Isconstant != value)
                {
                    _Isconstant = value;
                }
            }
        }
        private string _Isconstant;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Enum 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Enumdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Enumdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Classification id for what information is defined to be used, to cope flexibly to special circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Enumclassid
        {
            get
            {
                return _Enumclassid;
            }
            set
            {
                if (_Enumclassid != value)
                {
                    _Enumclassid = value;
                }
            }
        }
        private string _Enumclassid;

        /// <summary>
        /// Definition ID(Value) of the classification for use in expansion
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Enumdefinitionid
        {
            get
            {
                return _Enumdefinitionid;
            }
            set
            {
                if (_Enumdefinitionid != value)
                {
                    _Enumdefinitionid = value;
                }
            }
        }
        private string _Enumdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Definition Name for the user expression
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumdefinitionname
        {
            get
            {
                return _Enumdefinitionname;
            }
            set
            {
                if (_Enumdefinitionname != value)
                {
                    _Enumdefinitionname = value;
                }
            }
        }
        private string _Enumdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Definition Value for the user expression
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumvalue
        {
            get
            {
                return _Enumvalue;
            }
            set
            {
                if (_Enumvalue != value)
                {
                    _Enumvalue = value;
                }
            }
        }
        private string _Enumvalue;

        /// <summary>
        /// The flag to determine whether or not to be default. ex) if Y then default
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isdefault
        {
            get
            {
                return _Isdefault;
            }
            set
            {
                if (_Isdefault != value)
                {
                    _Isdefault = value;
                }
            }
        }
        private string _Isdefault;

        /// <summary>
        /// Parent enum ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentid
        {
            get
            {
                return _Parentid;
            }
            set
            {
                if (_Parentid != value)
                {
                    _Parentid = value;
                }
            }
        }
        private string _Parentid;

        /// <summary>
        /// Display Color
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Displaycolor
        {
            get
            {
                return _Displaycolor;
            }
            set
            {
                if (_Displaycolor != value)
                {
                    _Displaycolor = value;
                }
            }
        }
        private string _Displaycolor;

        /// <summary>
        /// Ordering in selection (for UI Modeling)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Enum 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Enumdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Enumdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Classification id for what information is defined to be used, to cope flexibly to special circumstances.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumclassid
        {
            get
            {
                return _Enumclassid;
            }
            set
            {
                if (_Enumclassid != value)
                {
                    _Enumclassid = value;
                }
            }
        }
        private string _Enumclassid;

        /// <summary>
        /// Definition ID(Value) of the classification for use in expansion
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumdefinitionid
        {
            get
            {
                return _Enumdefinitionid;
            }
            set
            {
                if (_Enumdefinitionid != value)
                {
                    _Enumdefinitionid = value;
                }
            }
        }
        private string _Enumdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Definition Name for the user expression
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumdefinitionname
        {
            get
            {
                return _Enumdefinitionname;
            }
            set
            {
                if (_Enumdefinitionname != value)
                {
                    _Enumdefinitionname = value;
                }
            }
        }
        private string _Enumdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Definition Value for the user expression
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Enumvalue
        {
            get
            {
                return _Enumvalue;
            }
            set
            {
                if (_Enumvalue != value)
                {
                    _Enumvalue = value;
                }
            }
        }
        private string _Enumvalue;

        /// <summary>
        /// The flag to determine whether or not to be default. ex) if Y then default
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isdefault
        {
            get
            {
                return _Isdefault;
            }
            set
            {
                if (_Isdefault != value)
                {
                    _Isdefault = value;
                }
            }
        }
        private string _Isdefault;

        /// <summary>
        /// Parent enum ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentid
        {
            get
            {
                return _Parentid;
            }
            set
            {
                if (_Parentid != value)
                {
                    _Parentid = value;
                }
            }
        }
        private string _Parentid;

        /// <summary>
        /// Display Color
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Displaycolor
        {
            get
            {
                return _Displaycolor;
            }
            set
            {
                if (_Displaycolor != value)
                {
                    _Displaycolor = value;
                }
            }
        }
        private string _Displaycolor;

        /// <summary>
        /// Ordering in selection (for UI Modeling)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipment : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for equipment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Current state. (ref. FOM_STATE) ex) Idle, Run, Down, PM, Hold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Category of state.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statecategory
        {
            get
            {
                return _Statecategory;
            }
            set
            {
                if (_Statecategory != value)
                {
                    _Statecategory = value;
                }
            }
        }
        private string _Statecategory;

        /// <summary>
        /// The time is updated whenever equipmet state is changed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Statetime
        {
            get
            {
                return _Statetime;
            }
            set
            {
                if (_Statetime != value)
                {
                    _Statetime = value;
                }
            }
        }
        private Nullable<DateTime> _Statetime;

        /// <summary>
        /// Previous state time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Prevstatetime
        {
            get
            {
                return _Prevstatetime;
            }
            set
            {
                if (_Prevstatetime != value)
                {
                    _Prevstatetime = value;
                }
            }
        }
        private Nullable<DateTime> _Prevstatetime;

        /// <summary>
        /// StateModel of Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statemodel
        {
            get
            {
                return _Statemodel;
            }
            set
            {
                if (_Statemodel != value)
                {
                    _Statemodel = value;
                }
            }
        }
        private string _Statemodel;

        /// <summary>
        /// Current Lot count in processing
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Processcount
        {
            get
            {
                return _Processcount;
            }
            set
            {
                if (_Processcount != value)
                {
                    _Processcount = value;
                }
            }
        }
        private Nullable<int> _Processcount;

        /// <summary>
        /// Specific plan id that type of specific plan is 'Recipe'. (ref. FOM_SPECPLAN)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeid
        {
            get
            {
                return _Recipeid;
            }
            set
            {
                if (_Recipeid != value)
                {
                    _Recipeid = value;
                }
            }
        }
        private string _Recipeid;

        /// <summary>
        /// Current location. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Previous location. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Equipment Process State Ex) Executing, Idle, Setup, PAUSE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processstate
        {
            get
            {
                return _Processstate;
            }
            set
            {
                if (_Processstate != value)
                {
                    _Processstate = value;
                }
            }
        }
        private string _Processstate;

        /// <summary>
        /// Previous Process State
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocessstate
        {
            get
            {
                return _Prevprocessstate;
            }
            set
            {
                if (_Prevprocessstate != value)
                {
                    _Prevprocessstate = value;
                }
            }
        }
        private string _Prevprocessstate;

        /// <summary>
        /// Current process State Change Time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Processstatetime
        {
            get
            {
                return _Processstatetime;
            }
            set
            {
                if (_Processstatetime != value)
                {
                    _Processstatetime = value;
                }
            }
        }
        private Nullable<DateTime> _Processstatetime;

        /// <summary>
        /// Previous process State Change Time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Prevprocessstatetime
        {
            get
            {
                return _Prevprocessstatetime;
            }
            set
            {
                if (_Prevprocessstatetime != value)
                {
                    _Prevprocessstatetime = value;
                }
            }
        }
        private Nullable<DateTime> _Prevprocessstatetime;

        /// <summary>
        /// HoldState
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// Equipment control server.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ecservername
        {
            get
            {
                return _Ecservername;
            }
            set
            {
                if (_Ecservername != value)
                {
                    _Ecservername = value;
                }
            }
        }
        private string _Ecservername;

        /// <summary>
        /// Workcrew id. (ref. FOM_WORKCREW)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewid
        {
            get
            {
                return _Workcrewid;
            }
            set
            {
                if (_Workcrewid != value)
                {
                    _Workcrewid = value;
                }
            }
        }
        private string _Workcrewid;

        /// <summary>
        /// EMS에 수리(BM) 요청 번호
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emsbmreqno
        {
            get
            {
                return _Emsbmreqno;
            }
            set
            {
                if (_Emsbmreqno != value)
                {
                    _Emsbmreqno = value;
                }
            }
        }
        private string _Emsbmreqno;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비 알람 이력 테이블
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentalarm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentalarm : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Alarm definition id. (ref. FOM_EQUIPMENTALARMDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentalarmdefinitionid
        {
            get
            {
                return _Equipmentalarmdefinitionid;
            }
            set
            {
                if (_Equipmentalarmdefinitionid != value)
                {
                    _Equipmentalarmdefinitionid = value;
                }
            }
        }
        private string _Equipmentalarmdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Unitequipmentid
        {
            get
            {
                return _Unitequipmentid;
            }
            set
            {
                if (_Unitequipmentid != value)
                {
                    _Unitequipmentid = value;
                }
            }
        }
        private string _Unitequipmentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subunitequipmentid
        {
            get
            {
                return _Subunitequipmentid;
            }
            set
            {
                if (_Subunitequipmentid != value)
                {
                    _Subunitequipmentid = value;
                }
            }
        }
        private string _Subunitequipmentid;

        /// <summary>
        /// Alarm Code. (Alarm category code, Alarm group code)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmcode
        {
            get
            {
                return _Alarmcode;
            }
            set
            {
                if (_Alarmcode != value)
                {
                    _Alarmcode = value;
                }
            }
        }
        private string _Alarmcode;

        /// <summary>
        /// Level of alarm of manufacturer. Ex) ERROR, WARNING, INFORM
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Manufacturerseverity
        {
            get
            {
                return _Manufacturerseverity;
            }
            set
            {
                if (_Manufacturerseverity != value)
                {
                    _Manufacturerseverity = value;
                }
            }
        }
        private string _Manufacturerseverity;

        /// <summary>
        /// Level of alarm of owner
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Severityowner
        {
            get
            {
                return _Severityowner;
            }
            set
            {
                if (_Severityowner != value)
                {
                    _Severityowner = value;
                }
            }
        }
        private string _Severityowner;

        /// <summary>
        /// Alarm data from equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmtext
        {
            get
            {
                return _Alarmtext;
            }
            set
            {
                if (_Alarmtext != value)
                {
                    _Alarmtext = value;
                }
            }
        }
        private string _Alarmtext;

        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for equipment class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Equipmentclassid
        {
            get
            {
                return _Equipmentclassid;
            }
            set
            {
                if (_Equipmentclassid != value)
                {
                    _Equipmentclassid = value;
                }
            }
        }
        private string _Equipmentclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentclassname
        {
            get
            {
                return _Equipmentclassname;
            }
            set
            {
                if (_Equipmentclassname != value)
                {
                    _Equipmentclassname = value;
                }
            }
        }
        private string _Equipmentclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for equipment class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentclassid
        {
            get
            {
                return _Equipmentclassid;
            }
            set
            {
                if (_Equipmentclassid != value)
                {
                    _Equipmentclassid = value;
                }
            }
        }
        private string _Equipmentclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentclassname
        {
            get
            {
                return _Equipmentclassname;
            }
            set
            {
                if (_Equipmentclassname != value)
                {
                    _Equipmentclassname = value;
                }
            }
        }
        private string _Equipmentclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Equipment Control State
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentcontrolstate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentcontrolstate : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for equipment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment control state.  ex) OnlineLocal, OnlineRemote, Offline
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Controlstate
        {
            get
            {
                return _Controlstate;
            }
            set
            {
                if (_Controlstate != value)
                {
                    _Controlstate = value;
                }
            }
        }
        private string _Controlstate;

        /// <summary>
        /// Previous control state.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevcontrolstate
        {
            get
            {
                return _Prevcontrolstate;
            }
            set
            {
                if (_Prevcontrolstate != value)
                {
                    _Prevcontrolstate = value;
                }
            }
        }
        private string _Prevcontrolstate;

        /// <summary>
        /// Equipment control mode.  ex) OnlineLocal, OnlineRemote, Offline
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Offline'")]
        [DataMemberAttribute()]
        public string Controlmode
        {
            get
            {
                return _Controlmode;
            }
            set
            {
                if (_Controlmode != value)
                {
                    _Controlmode = value;
                }
            }
        }
        private string _Controlmode;

        /// <summary>
        /// Previous control mode.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevcontrolmode
        {
            get
            {
                return _Prevcontrolmode;
            }
            set
            {
                if (_Prevcontrolmode != value)
                {
                    _Prevcontrolmode = value;
                }
            }
        }
        private string _Prevcontrolmode;

        /// <summary>
        /// The time is updated whenever equipmet control mode is changed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Controlmodetime
        {
            get
            {
                return _Controlmodetime;
            }
            set
            {
                if (_Controlmodetime != value)
                {
                    _Controlmodetime = value;
                }
            }
        }
        private Nullable<DateTime> _Controlmodetime;

        /// <summary>
        /// Previous control mode time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Prevcontrolmodetime
        {
            get
            {
                return _Prevcontrolmodetime;
            }
            set
            {
                if (_Prevcontrolmodetime != value)
                {
                    _Prevcontrolmodetime = value;
                }
            }
        }
        private Nullable<DateTime> _Prevcontrolmodetime;

        /// <summary>
        /// Equipment operation mode. ex) Full-Auto, Semi-Auto, Manual
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Operationmode
        {
            get
            {
                return _Operationmode;
            }
            set
            {
                if (_Operationmode != value)
                {
                    _Operationmode = value;
                }
            }
        }
        private string _Operationmode;

        /// <summary>
        /// previous Operation Mode.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevoperationmode
        {
            get
            {
                return _Prevoperationmode;
            }
            set
            {
                if (_Prevoperationmode != value)
                {
                    _Prevoperationmode = value;
                }
            }
        }
        private string _Prevoperationmode;

        /// <summary>
        /// Current Operation Mode Change Time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Operationmodetime
        {
            get
            {
                return _Operationmodetime;
            }
            set
            {
                if (_Operationmodetime != value)
                {
                    _Operationmodetime = value;
                }
            }
        }
        private Nullable<DateTime> _Operationmodetime;

        /// <summary>
        /// Previous Operation Mode Change Time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Prevoperationmodetime
        {
            get
            {
                return _Prevoperationmodetime;
            }
            set
            {
                if (_Prevoperationmodetime != value)
                {
                    _Prevoperationmodetime = value;
                }
            }
        }
        private Nullable<DateTime> _Prevoperationmodetime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Equipment Control State 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentcontrolstatehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentcontrolstatehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for equipment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment control state.  ex) OnlineLocal, OnlineRemote, Offline
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Controlstate
        {
            get
            {
                return _Controlstate;
            }
            set
            {
                if (_Controlstate != value)
                {
                    _Controlstate = value;
                }
            }
        }
        private string _Controlstate;

        /// <summary>
        /// Previous control state.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevcontrolstate
        {
            get
            {
                return _Prevcontrolstate;
            }
            set
            {
                if (_Prevcontrolstate != value)
                {
                    _Prevcontrolstate = value;
                }
            }
        }
        private string _Prevcontrolstate;

        /// <summary>
        /// Equipment control mode.  ex) OnlineLocal, OnlineRemote, Offline
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Controlmode
        {
            get
            {
                return _Controlmode;
            }
            set
            {
                if (_Controlmode != value)
                {
                    _Controlmode = value;
                }
            }
        }
        private string _Controlmode;

        /// <summary>
        /// Previous control mode.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevcontrolmode
        {
            get
            {
                return _Prevcontrolmode;
            }
            set
            {
                if (_Prevcontrolmode != value)
                {
                    _Prevcontrolmode = value;
                }
            }
        }
        private string _Prevcontrolmode;

        /// <summary>
        /// The time is updated whenever equipmet control mode is changed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Controlmodetime
        {
            get
            {
                return _Controlmodetime;
            }
            set
            {
                if (_Controlmodetime != value)
                {
                    _Controlmodetime = value;
                }
            }
        }
        private Nullable<DateTime> _Controlmodetime;

        /// <summary>
        /// Previous control mode time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Prevcontrolmodetime
        {
            get
            {
                return _Prevcontrolmodetime;
            }
            set
            {
                if (_Prevcontrolmodetime != value)
                {
                    _Prevcontrolmodetime = value;
                }
            }
        }
        private Nullable<DateTime> _Prevcontrolmodetime;

        /// <summary>
        /// Equipment operation mode. ex) Full-Auto, Semi-Auto, Manual
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Operationmode
        {
            get
            {
                return _Operationmode;
            }
            set
            {
                if (_Operationmode != value)
                {
                    _Operationmode = value;
                }
            }
        }
        private string _Operationmode;

        /// <summary>
        /// previous Operation Mode.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevoperationmode
        {
            get
            {
                return _Prevoperationmode;
            }
            set
            {
                if (_Prevoperationmode != value)
                {
                    _Prevoperationmode = value;
                }
            }
        }
        private string _Prevoperationmode;

        /// <summary>
        /// Current Operation Mode Change Time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Operationmodetime
        {
            get
            {
                return _Operationmodetime;
            }
            set
            {
                if (_Operationmodetime != value)
                {
                    _Operationmodetime = value;
                }
            }
        }
        private Nullable<DateTime> _Operationmodetime;

        /// <summary>
        /// Previous Operation Mode Change Time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Prevoperationmodetime
        {
            get
            {
                return _Prevoperationmodetime;
            }
            set
            {
                if (_Prevoperationmodetime != value)
                {
                    _Prevoperationmodetime = value;
                }
            }
        }
        private Nullable<DateTime> _Prevoperationmodetime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for equipment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentname
        {
            get
            {
                return _Equipmentname;
            }
            set
            {
                if (_Equipmentname != value)
                {
                    _Equipmentname = value;
                }
            }
        }
        private string _Equipmentname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Equipment class id. (ref. FOM_EQUIPMENTCLASS) - 공정 분류(BALLJOINT-ASSEMBLY..)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Process'")]
        [DataMemberAttribute()]
        public string Equipmentclassid
        {
            get
            {
                return _Equipmentclassid;
            }
            set
            {
                if (_Equipmentclassid != value)
                {
                    _Equipmentclassid = value;
                }
            }
        }
        private string _Equipmentclassid;

        /// <summary>
        /// Type of equipment. -  Process | Metrology|Tester, In case of SUB - ProcessModule | TransferModule|TestModule|MetrologyModule
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Process'")]
        [DataMemberAttribute()]
        public string Equipmenttype
        {
            get
            {
                return _Equipmenttype;
            }
            set
            {
                if (_Equipmenttype != value)
                {
                    _Equipmenttype = value;
                }
            }
        }
        private string _Equipmenttype;

        /// <summary>
        /// Detail type of equipment. - Transfer, In case of SUB - AVG | MGV | OMGV
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailequipmenttype
        {
            get
            {
                return _Detailequipmenttype;
            }
            set
            {
                if (_Detailequipmenttype != value)
                {
                    _Detailequipmenttype = value;
                }
            }
        }
        private string _Detailequipmenttype;

        /// <summary>
        /// Previous location of equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Parent equipment id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentid
        {
            get
            {
                return _Parentid;
            }
            set
            {
                if (_Parentid != value)
                {
                    _Parentid = value;
                }
            }
        }
        private string _Parentid;

        /// <summary>
        /// Number of levels of nesting in the equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Equipmentlevel
        {
            get
            {
                return _Equipmentlevel;
            }
            set
            {
                if (_Equipmentlevel != value)
                {
                    _Equipmentlevel = value;
                }
            }
        }
        private Nullable<int> _Equipmentlevel;

        /// <summary>
        /// Level name of the equipment. - LINE(MAIN)| PART | EQP
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentlevelname
        {
            get
            {
                return _Equipmentlevelname;
            }
            set
            {
                if (_Equipmentlevelname != value)
                {
                    _Equipmentlevelname = value;
                }
            }
        }
        private string _Equipmentlevelname;

        /// <summary>
        /// Model number of equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Model
        {
            get
            {
                return _Model;
            }
            set
            {
                if (_Model != value)
                {
                    _Model = value;
                }
            }
        }
        private string _Model;

        /// <summary>
        /// Serial number of equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Serialno
        {
            get
            {
                return _Serialno;
            }
            set
            {
                if (_Serialno != value)
                {
                    _Serialno = value;
                }
            }
        }
        private string _Serialno;

        /// <summary>
        /// Maximum capacity at a time. - TrackIn Capacity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Maxprocesscapacity
        {
            get
            {
                return _Maxprocesscapacity;
            }
            set
            {
                if (_Maxprocesscapacity != value)
                {
                    _Maxprocesscapacity = value;
                }
            }
        }
        private Nullable<decimal> _Maxprocesscapacity;

        /// <summary>
        /// Minimum capacity at a time. - TrackIn Capacity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Minprocesscapacity
        {
            get
            {
                return _Minprocesscapacity;
            }
            set
            {
                if (_Minprocesscapacity != value)
                {
                    _Minprocesscapacity = value;
                }
            }
        }
        private Nullable<decimal> _Minprocesscapacity;

        /// <summary>
        /// Maximum capacity at a time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Maxbatchsize
        {
            get
            {
                return _Maxbatchsize;
            }
            set
            {
                if (_Maxbatchsize != value)
                {
                    _Maxbatchsize = value;
                }
            }
        }
        private Nullable<decimal> _Maxbatchsize;

        /// <summary>
        /// Minimum capacity at a time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Minbatchsize
        {
            get
            {
                return _Minbatchsize;
            }
            set
            {
                if (_Minbatchsize != value)
                {
                    _Minbatchsize = value;
                }
            }
        }
        private Nullable<decimal> _Minbatchsize;

        /// <summary>
        /// Default Input StockerID of equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaultinstockerid
        {
            get
            {
                return _Defaultinstockerid;
            }
            set
            {
                if (_Defaultinstockerid != value)
                {
                    _Defaultinstockerid = value;
                }
            }
        }
        private string _Defaultinstockerid;

        /// <summary>
        /// Default Input Location of equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaultinlocationid
        {
            get
            {
                return _Defaultinlocationid;
            }
            set
            {
                if (_Defaultinlocationid != value)
                {
                    _Defaultinlocationid = value;
                }
            }
        }
        private string _Defaultinlocationid;

        /// <summary>
        /// Default Output StockerID of equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaultoutstockerid
        {
            get
            {
                return _Defaultoutstockerid;
            }
            set
            {
                if (_Defaultoutstockerid != value)
                {
                    _Defaultoutstockerid = value;
                }
            }
        }
        private string _Defaultoutstockerid;

        /// <summary>
        /// Default Output Location of equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaultoutlocationid
        {
            get
            {
                return _Defaultoutlocationid;
            }
            set
            {
                if (_Defaultoutlocationid != value)
                {
                    _Defaultoutlocationid = value;
                }
            }
        }
        private string _Defaultoutlocationid;

        /// <summary>
        /// Default transfer zone of tranport.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaulttransferzone
        {
            get
            {
                return _Defaulttransferzone;
            }
            set
            {
                if (_Defaulttransferzone != value)
                {
                    _Defaulttransferzone = value;
                }
            }
        }
        private string _Defaulttransferzone;

        /// <summary>
        /// Port count
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=4, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Portcount
        {
            get
            {
                return _Portcount;
            }
            set
            {
                if (_Portcount != value)
                {
                    _Portcount = value;
                }
            }
        }
        private Nullable<int> _Portcount;

        /// <summary>
        /// ERP Plant, for ERP plant mapping
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Erpplant
        {
            get
            {
                return _Erpplant;
            }
            set
            {
                if (_Erpplant != value)
                {
                    _Erpplant = value;
                }
            }
        }
        private string _Erpplant;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Flowtype
        {
            get
            {
                return _Flowtype;
            }
            set
            {
                if (_Flowtype != value)
                {
                    _Flowtype = value;
                }
            }
        }
        private string _Flowtype;

        /// <summary>
        /// 설비 진행 순서
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Instructionnumber
        {
            get
            {
                return _Instructionnumber;
            }
            set
            {
                if (_Instructionnumber != value)
                {
                    _Instructionnumber = value;
                }
            }
        }
        private string _Instructionnumber;

        /// <summary>
        /// EMS 설비 코드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emsid
        {
            get
            {
                return _Emsid;
            }
            set
            {
                if (_Emsid != value)
                {
                    _Emsid = value;
                }
            }
        }
        private string _Emsid;

        /// <summary>
        /// MDM IF 기준의 상위 레벨
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mdmparentid
        {
            get
            {
                return _Mdmparentid;
            }
            set
            {
                if (_Mdmparentid != value)
                {
                    _Mdmparentid = value;
                }
            }
        }
        private string _Mdmparentid;

        /// <summary>
        /// 세부공정 코드 (MDM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processoperationid
        {
            get
            {
                return _Processoperationid;
            }
            set
            {
                if (_Processoperationid != value)
                {
                    _Processoperationid = value;
                }
            }
        }
        private string _Processoperationid;

        #endregion
    }

    /// <summary>
    /// 설비 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for equipment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentname
        {
            get
            {
                return _Equipmentname;
            }
            set
            {
                if (_Equipmentname != value)
                {
                    _Equipmentname = value;
                }
            }
        }
        private string _Equipmentname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Equipment class id. (ref. FOM_EQUIPMENTCLASS) - 공정 분류(BALLJOINT-ASSEMBLY..)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentclassid
        {
            get
            {
                return _Equipmentclassid;
            }
            set
            {
                if (_Equipmentclassid != value)
                {
                    _Equipmentclassid = value;
                }
            }
        }
        private string _Equipmentclassid;

        /// <summary>
        /// Type of equipment. -  Process | Metrology|Tester, In case of SUB - ProcessModule | TransferModule|TestModule|MetrologyModule
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmenttype
        {
            get
            {
                return _Equipmenttype;
            }
            set
            {
                if (_Equipmenttype != value)
                {
                    _Equipmenttype = value;
                }
            }
        }
        private string _Equipmenttype;

        /// <summary>
        /// Detail type of equipment. - Transfer, In case of SUB - AVG | MGV | OMGV
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailequipmenttype
        {
            get
            {
                return _Detailequipmenttype;
            }
            set
            {
                if (_Detailequipmenttype != value)
                {
                    _Detailequipmenttype = value;
                }
            }
        }
        private string _Detailequipmenttype;

        /// <summary>
        /// Previous location of equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Parent equipment id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentid
        {
            get
            {
                return _Parentid;
            }
            set
            {
                if (_Parentid != value)
                {
                    _Parentid = value;
                }
            }
        }
        private string _Parentid;

        /// <summary>
        /// Number of levels of nesting in the equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Equipmentlevel
        {
            get
            {
                return _Equipmentlevel;
            }
            set
            {
                if (_Equipmentlevel != value)
                {
                    _Equipmentlevel = value;
                }
            }
        }
        private Nullable<int> _Equipmentlevel;

        /// <summary>
        /// Level name of the equipment. - LINE(MAIN)| UNIT | SUBUNIT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentlevelname
        {
            get
            {
                return _Equipmentlevelname;
            }
            set
            {
                if (_Equipmentlevelname != value)
                {
                    _Equipmentlevelname = value;
                }
            }
        }
        private string _Equipmentlevelname;

        /// <summary>
        /// Model number of equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Model
        {
            get
            {
                return _Model;
            }
            set
            {
                if (_Model != value)
                {
                    _Model = value;
                }
            }
        }
        private string _Model;

        /// <summary>
        /// Serial number of equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Serialno
        {
            get
            {
                return _Serialno;
            }
            set
            {
                if (_Serialno != value)
                {
                    _Serialno = value;
                }
            }
        }
        private string _Serialno;

        /// <summary>
        /// Maximum capacity at a time. - TrackIn Capacity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Maxprocesscapacity
        {
            get
            {
                return _Maxprocesscapacity;
            }
            set
            {
                if (_Maxprocesscapacity != value)
                {
                    _Maxprocesscapacity = value;
                }
            }
        }
        private Nullable<decimal> _Maxprocesscapacity;

        /// <summary>
        /// Minimum capacity at a time. - TrackIn Capacity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Minprocesscapacity
        {
            get
            {
                return _Minprocesscapacity;
            }
            set
            {
                if (_Minprocesscapacity != value)
                {
                    _Minprocesscapacity = value;
                }
            }
        }
        private Nullable<decimal> _Minprocesscapacity;

        /// <summary>
        /// Maximum capacity at a time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Maxbatchsize
        {
            get
            {
                return _Maxbatchsize;
            }
            set
            {
                if (_Maxbatchsize != value)
                {
                    _Maxbatchsize = value;
                }
            }
        }
        private Nullable<decimal> _Maxbatchsize;

        /// <summary>
        /// Minimum capacity at a time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Minbatchsize
        {
            get
            {
                return _Minbatchsize;
            }
            set
            {
                if (_Minbatchsize != value)
                {
                    _Minbatchsize = value;
                }
            }
        }
        private Nullable<decimal> _Minbatchsize;

        /// <summary>
        /// Default Input StockerID of equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaultinstockerid
        {
            get
            {
                return _Defaultinstockerid;
            }
            set
            {
                if (_Defaultinstockerid != value)
                {
                    _Defaultinstockerid = value;
                }
            }
        }
        private string _Defaultinstockerid;

        /// <summary>
        /// Default Input Location of equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaultinlocationid
        {
            get
            {
                return _Defaultinlocationid;
            }
            set
            {
                if (_Defaultinlocationid != value)
                {
                    _Defaultinlocationid = value;
                }
            }
        }
        private string _Defaultinlocationid;

        /// <summary>
        /// Default Output StockerID of equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaultoutstockerid
        {
            get
            {
                return _Defaultoutstockerid;
            }
            set
            {
                if (_Defaultoutstockerid != value)
                {
                    _Defaultoutstockerid = value;
                }
            }
        }
        private string _Defaultoutstockerid;

        /// <summary>
        /// Default Output Location of equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaultoutlocationid
        {
            get
            {
                return _Defaultoutlocationid;
            }
            set
            {
                if (_Defaultoutlocationid != value)
                {
                    _Defaultoutlocationid = value;
                }
            }
        }
        private string _Defaultoutlocationid;

        /// <summary>
        /// Default transfer zone of tranport.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaulttransferzone
        {
            get
            {
                return _Defaulttransferzone;
            }
            set
            {
                if (_Defaulttransferzone != value)
                {
                    _Defaulttransferzone = value;
                }
            }
        }
        private string _Defaulttransferzone;

        /// <summary>
        /// Port count
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=4, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Portcount
        {
            get
            {
                return _Portcount;
            }
            set
            {
                if (_Portcount != value)
                {
                    _Portcount = value;
                }
            }
        }
        private Nullable<int> _Portcount;

        /// <summary>
        /// ERP Plant, for ERP plant mapping
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Erpplant
        {
            get
            {
                return _Erpplant;
            }
            set
            {
                if (_Erpplant != value)
                {
                    _Erpplant = value;
                }
            }
        }
        private string _Erpplant;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Flowtype
        {
            get
            {
                return _Flowtype;
            }
            set
            {
                if (_Flowtype != value)
                {
                    _Flowtype = value;
                }
            }
        }
        private string _Flowtype;

        #endregion
    }

    /// <summary>
    /// EP 점검 항목 기준정보 테이블
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentepcheckdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentepcheckdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// (미정) 라인 Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// (미정) 블록 Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Unitequipmentid
        {
            get
            {
                return _Unitequipmentid;
            }
            set
            {
                if (_Unitequipmentid != value)
                {
                    _Unitequipmentid = value;
                }
            }
        }
        private string _Unitequipmentid;

        /// <summary>
        /// (미정) 세부공정 Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Subunitequipmentid
        {
            get
            {
                return _Subunitequipmentid;
            }
            set
            {
                if (_Subunitequipmentid != value)
                {
                    _Subunitequipmentid = value;
                }
            }
        }
        private string _Subunitequipmentid;

        /// <summary>
        /// 품번
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// EP Check item id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=6, Default="")]
        [DataMemberAttribute()]
        public string Itemid
        {
            get
            {
                return _Itemid;
            }
            set
            {
                if (_Itemid != value)
                {
                    _Itemid = value;
                }
            }
        }
        private string _Itemid;

        /// <summary>
        /// EP Check item name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Itemname
        {
            get
            {
                return _Itemname;
            }
            set
            {
                if (_Itemname != value)
                {
                    _Itemname = value;
                }
            }
        }
        private string _Itemname;

        /// <summary>
        /// EP Check sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Checksequence
        {
            get
            {
                return _Checksequence;
            }
            set
            {
                if (_Checksequence != value)
                {
                    _Checksequence = value;
                }
            }
        }
        private int _Checksequence;

        /// <summary>
        /// EP Check unit (sensor)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Checkunit
        {
            get
            {
                return _Checkunit;
            }
            set
            {
                if (_Checkunit != value)
                {
                    _Checkunit = value;
                }
            }
        }
        private string _Checkunit;

        /// <summary>
        /// EP Check result data type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Datatype
        {
            get
            {
                return _Datatype;
            }
            set
            {
                if (_Datatype != value)
                {
                    _Datatype = value;
                }
            }
        }
        private string _Datatype;

        /// <summary>
        /// Master data using date (Start)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Startusedate
        {
            get
            {
                return _Startusedate;
            }
            set
            {
                if (_Startusedate != value)
                {
                    _Startusedate = value;
                }
            }
        }
        private Nullable<DateTime> _Startusedate;

        /// <summary>
        /// Master data using date (End)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Endusedate
        {
            get
            {
                return _Endusedate;
            }
            set
            {
                if (_Endusedate != value)
                {
                    _Endusedate = value;
                }
            }
        }
        private Nullable<DateTime> _Endusedate;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// EP 점검 항목 기준정보 테이블
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentepcheckdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentepcheckdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// (미정) 라인 Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// (미정) 블록 Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Unitequipmentid
        {
            get
            {
                return _Unitequipmentid;
            }
            set
            {
                if (_Unitequipmentid != value)
                {
                    _Unitequipmentid = value;
                }
            }
        }
        private string _Unitequipmentid;

        /// <summary>
        /// (미정) 세부공정 Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subunitequipmentid
        {
            get
            {
                return _Subunitequipmentid;
            }
            set
            {
                if (_Subunitequipmentid != value)
                {
                    _Subunitequipmentid = value;
                }
            }
        }
        private string _Subunitequipmentid;

        /// <summary>
        /// 품번
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// EP Check item id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Itemid
        {
            get
            {
                return _Itemid;
            }
            set
            {
                if (_Itemid != value)
                {
                    _Itemid = value;
                }
            }
        }
        private string _Itemid;

        /// <summary>
        /// EP Check item name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Itemname
        {
            get
            {
                return _Itemname;
            }
            set
            {
                if (_Itemname != value)
                {
                    _Itemname = value;
                }
            }
        }
        private string _Itemname;

        /// <summary>
        /// EP Check sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Checksequence
        {
            get
            {
                return _Checksequence;
            }
            set
            {
                if (_Checksequence != value)
                {
                    _Checksequence = value;
                }
            }
        }
        private int _Checksequence;

        /// <summary>
        /// EP Check unit (sensor)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Checkunit
        {
            get
            {
                return _Checkunit;
            }
            set
            {
                if (_Checkunit != value)
                {
                    _Checkunit = value;
                }
            }
        }
        private string _Checkunit;

        /// <summary>
        /// EP Check result data type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Datatype
        {
            get
            {
                return _Datatype;
            }
            set
            {
                if (_Datatype != value)
                {
                    _Datatype = value;
                }
            }
        }
        private string _Datatype;

        /// <summary>
        /// Master data using date (Start)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Startusedate
        {
            get
            {
                return _Startusedate;
            }
            set
            {
                if (_Startusedate != value)
                {
                    _Startusedate = value;
                }
            }
        }
        private Nullable<DateTime> _Startusedate;

        /// <summary>
        /// Master data using date (End)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Endusedate
        {
            get
            {
                return _Endusedate;
            }
            set
            {
                if (_Endusedate != value)
                {
                    _Endusedate = value;
                }
            }
        }
        private Nullable<DateTime> _Endusedate;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// EP 점검 결과 Detail 테이블
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentepcheckitemresult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentepcheckitemresult : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for master table
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Checkresultsysid
        {
            get
            {
                return _Checkresultsysid;
            }
            set
            {
                if (_Checkresultsysid != value)
                {
                    _Checkresultsysid = value;
                }
            }
        }
        private string _Checkresultsysid;

        /// <summary>
        /// Unique identifier for this table
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Checkresultitemsysid
        {
            get
            {
                return _Checkresultitemsysid;
            }
            set
            {
                if (_Checkresultitemsysid != value)
                {
                    _Checkresultitemsysid = value;
                }
            }
        }
        private string _Checkresultitemsysid;

        /// <summary>
        /// (미정) 블럭 Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Unitequipmentid
        {
            get
            {
                return _Unitequipmentid;
            }
            set
            {
                if (_Unitequipmentid != value)
                {
                    _Unitequipmentid = value;
                }
            }
        }
        private string _Unitequipmentid;

        /// <summary>
        /// (미정) 세부공정 (설비) Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subunitequipmentid
        {
            get
            {
                return _Subunitequipmentid;
            }
            set
            {
                if (_Subunitequipmentid != value)
                {
                    _Subunitequipmentid = value;
                }
            }
        }
        private string _Subunitequipmentid;

        /// <summary>
        /// EP Check item id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Itemid
        {
            get
            {
                return _Itemid;
            }
            set
            {
                if (_Itemid != value)
                {
                    _Itemid = value;
                }
            }
        }
        private string _Itemid;

        /// <summary>
        /// EP Check item name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=8, DataSize=8, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Itemname
        {
            get
            {
                return _Itemname;
            }
            set
            {
                if (_Itemname != value)
                {
                    _Itemname = value;
                }
            }
        }
        private string _Itemname;

        /// <summary>
        /// EP Check sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Checksequence
        {
            get
            {
                return _Checksequence;
            }
            set
            {
                if (_Checksequence != value)
                {
                    _Checksequence = value;
                }
            }
        }
        private int _Checksequence;

        /// <summary>
        /// EP Check unit (sensor)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Checkunit
        {
            get
            {
                return _Checkunit;
            }
            set
            {
                if (_Checkunit != value)
                {
                    _Checkunit = value;
                }
            }
        }
        private string _Checkunit;

        /// <summary>
        /// EP Check result data type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Datatype
        {
            get
            {
                return _Datatype;
            }
            set
            {
                if (_Datatype != value)
                {
                    _Datatype = value;
                }
            }
        }
        private string _Datatype;

        /// <summary>
        /// Check result data
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Checkresult
        {
            get
            {
                return _Checkresult;
            }
            set
            {
                if (_Checkresult != value)
                {
                    _Checkresult = value;
                }
            }
        }
        private string _Checkresult;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// EP 점검 결과 Master 테이블
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentepcheckresult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentepcheckresult : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Checkresultsysid
        {
            get
            {
                return _Checkresultsysid;
            }
            set
            {
                if (_Checkresultsysid != value)
                {
                    _Checkresultsysid = value;
                }
            }
        }
        private string _Checkresultsysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// (미정) 라인 Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 품번
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// 점검 작업자 그룹
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usergroup
        {
            get
            {
                return _Usergroup;
            }
            set
            {
                if (_Usergroup != value)
                {
                    _Usergroup = value;
                }
            }
        }
        private string _Usergroup;

        /// <summary>
        /// EP Check item id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Checktime
        {
            get
            {
                return _Checktime;
            }
            set
            {
                if (_Checktime != value)
                {
                    _Checktime = value;
                }
            }
        }
        private Nullable<DateTime> _Checktime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmenthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmenthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for equipment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Current state. (ref. FOM_STATE) ex) Idle, Run, Down, PM, Hold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Category of state.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statecategory
        {
            get
            {
                return _Statecategory;
            }
            set
            {
                if (_Statecategory != value)
                {
                    _Statecategory = value;
                }
            }
        }
        private string _Statecategory;

        /// <summary>
        /// The time is updated whenever equipmet state is changed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Statetime
        {
            get
            {
                return _Statetime;
            }
            set
            {
                if (_Statetime != value)
                {
                    _Statetime = value;
                }
            }
        }
        private Nullable<DateTime> _Statetime;

        /// <summary>
        /// Previous state time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Prevstatetime
        {
            get
            {
                return _Prevstatetime;
            }
            set
            {
                if (_Prevstatetime != value)
                {
                    _Prevstatetime = value;
                }
            }
        }
        private Nullable<DateTime> _Prevstatetime;

        /// <summary>
        /// StateModel of Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statemodel
        {
            get
            {
                return _Statemodel;
            }
            set
            {
                if (_Statemodel != value)
                {
                    _Statemodel = value;
                }
            }
        }
        private string _Statemodel;

        /// <summary>
        /// Current Lot count in processing
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Processcount
        {
            get
            {
                return _Processcount;
            }
            set
            {
                if (_Processcount != value)
                {
                    _Processcount = value;
                }
            }
        }
        private Nullable<int> _Processcount;

        /// <summary>
        /// Specific plan id that type of specific plan is 'Recipe'. (ref. FOM_SPECPLAN)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeid
        {
            get
            {
                return _Recipeid;
            }
            set
            {
                if (_Recipeid != value)
                {
                    _Recipeid = value;
                }
            }
        }
        private string _Recipeid;

        /// <summary>
        /// Current location. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Previous location. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Equipment Process State Ex) Executing, Idle, Setup, PAUSE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processstate
        {
            get
            {
                return _Processstate;
            }
            set
            {
                if (_Processstate != value)
                {
                    _Processstate = value;
                }
            }
        }
        private string _Processstate;

        /// <summary>
        /// Previous Process State
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocessstate
        {
            get
            {
                return _Prevprocessstate;
            }
            set
            {
                if (_Prevprocessstate != value)
                {
                    _Prevprocessstate = value;
                }
            }
        }
        private string _Prevprocessstate;

        /// <summary>
        /// Current process State Change Time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Processstatetime
        {
            get
            {
                return _Processstatetime;
            }
            set
            {
                if (_Processstatetime != value)
                {
                    _Processstatetime = value;
                }
            }
        }
        private Nullable<DateTime> _Processstatetime;

        /// <summary>
        /// Previous process State Change Time.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Prevprocessstatetime
        {
            get
            {
                return _Prevprocessstatetime;
            }
            set
            {
                if (_Prevprocessstatetime != value)
                {
                    _Prevprocessstatetime = value;
                }
            }
        }
        private Nullable<DateTime> _Prevprocessstatetime;

        /// <summary>
        /// HoldState
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// Equipment control server.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ecservername
        {
            get
            {
                return _Ecservername;
            }
            set
            {
                if (_Ecservername != value)
                {
                    _Ecservername = value;
                }
            }
        }
        private string _Ecservername;

        /// <summary>
        /// Workcrew id. (ref. FOM_WORKCREW)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewid
        {
            get
            {
                return _Workcrewid;
            }
            set
            {
                if (_Workcrewid != value)
                {
                    _Workcrewid = value;
                }
            }
        }
        private string _Workcrewid;

        /// <summary>
        /// EMS에 수리(BM) 요청 번호
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emsbmreqno
        {
            get
            {
                return _Emsbmreqno;
            }
            set
            {
                if (_Emsbmreqno != value)
                {
                    _Emsbmreqno = value;
                }
            }
        }
        private string _Emsbmreqno;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentnonprod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentnonprod : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// SEQUENCE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 위치 정보
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// A factory date [YYYYMMDD]
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// A factory shift
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryshift
        {
            get
            {
                return _Factoryshift;
            }
            set
            {
                if (_Factoryshift != value)
                {
                    _Factoryshift = value;
                }
            }
        }
        private string _Factoryshift;

        /// <summary>
        /// 작업반
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewid
        {
            get
            {
                return _Workcrewid;
            }
            set
            {
                if (_Workcrewid != value)
                {
                    _Workcrewid = value;
                }
            }
        }
        private string _Workcrewid;

        /// <summary>
        /// 생산중인 WorkOrder
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// 비가동시작시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// 비가동완료시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private Nullable<DateTime> _Endtime;

        /// <summary>
        /// 작업인원 공수
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Workrate
        {
            get
            {
                return _Workrate;
            }
            set
            {
                if (_Workrate != value)
                {
                    _Workrate = value;
                }
            }
        }
        private Nullable<decimal> _Workrate;

        /// <summary>
        /// 비가동코드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// 귀책구분
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Responsibletype
        {
            get
            {
                return _Responsibletype;
            }
            set
            {
                if (_Responsibletype != value)
                {
                    _Responsibletype = value;
                }
            }
        }
        private string _Responsibletype;

        /// <summary>
        /// 귀책처
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Responsible
        {
            get
            {
                return _Responsible;
            }
            set
            {
                if (_Responsible != value)
                {
                    _Responsible = value;
                }
            }
        }
        private string _Responsible;

        /// <summary>
        /// 원인품목
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Causematerialdefinitionid
        {
            get
            {
                return _Causematerialdefinitionid;
            }
            set
            {
                if (_Causematerialdefinitionid != value)
                {
                    _Causematerialdefinitionid = value;
                }
            }
        }
        private string _Causematerialdefinitionid;

        /// <summary>
        /// 조치내용
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actiondetails
        {
            get
            {
                return _Actiondetails;
            }
            set
            {
                if (_Actiondetails != value)
                {
                    _Actiondetails = value;
                }
            }
        }
        private string _Actiondetails;

        /// <summary>
        /// 관리자  CONFIRM 여부 Y/N
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Confirm
        {
            get
            {
                return _Confirm;
            }
            set
            {
                if (_Confirm != value)
                {
                    _Confirm = value;
                }
            }
        }
        private string _Confirm;

        /// <summary>
        /// EMS에 수리(BM) 요청 번호
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emsbmreqno
        {
            get
            {
                return _Emsbmreqno;
            }
            set
            {
                if (_Emsbmreqno != value)
                {
                    _Emsbmreqno = value;
                }
            }
        }
        private string _Emsbmreqno;

        /// <summary>
        /// ERP INTERFACE SEQ ( 일자별 순번 )
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Nonprodnumber
        {
            get
            {
                return _Nonprodnumber;
            }
            set
            {
                if (_Nonprodnumber != value)
                {
                    _Nonprodnumber = value;
                }
            }
        }
        private Nullable<int> _Nonprodnumber;

        /// <summary>
        /// SAP 인터페이스 FLAG
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Interfaceflag
        {
            get
            {
                return _Interfaceflag;
            }
            set
            {
                if (_Interfaceflag != value)
                {
                    _Interfaceflag = value;
                }
            }
        }
        private string _Interfaceflag;

        /// <summary>
        /// SAP 인터페이스 비가동 시간 FLAG
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Interfacetimeflag
        {
            get
            {
                return _Interfacetimeflag;
            }
            set
            {
                if (_Interfacetimeflag != value)
                {
                    _Interfacetimeflag = value;
                }
            }
        }
        private string _Interfacetimeflag;

        /// <summary>
        /// 비고
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비별 제품별 지표 시간 기준정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentprodstandard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentprodstandard : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for product rule system id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment and Worker cycletime system id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// CYCLETIME 단위 : 초
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Cycletime
        {
            get
            {
                return _Cycletime;
            }
            set
            {
                if (_Cycletime != value)
                {
                    _Cycletime = value;
                }
            }
        }
        private Nullable<decimal> _Cycletime;

        /// <summary>
        /// 표준생산인원
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Standardmannumber
        {
            get
            {
                return _Standardmannumber;
            }
            set
            {
                if (_Standardmannumber != value)
                {
                    _Standardmannumber = value;
                }
            }
        }
        private Nullable<decimal> _Standardmannumber;

        /// <summary>
        /// 표준수량(UPH) : 시간당표준수량 : (3600(초) / CycleTime(라인품목별))
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Standarduph
        {
            get
            {
                return _Standarduph;
            }
            set
            {
                if (_Standarduph != value)
                {
                    _Standarduph = value;
                }
            }
        }
        private Nullable<decimal> _Standarduph;

        /// <summary>
        /// 표준수량(UPMH) : 시간당표준수량 : (3600(초) / CycleTime(라인품목별))/표준인원
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Standardupmh
        {
            get
            {
                return _Standardupmh;
            }
            set
            {
                if (_Standardupmh != value)
                {
                    _Standardupmh = value;
                }
            }
        }
        private Nullable<decimal> _Standardupmh;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비별 제품별 지표 시간 기준정보 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmentprodstandardhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmentprodstandardhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for product rule system id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment and Worker cycletime system id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// CYCLETIME 단위 : 초
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Cycletime
        {
            get
            {
                return _Cycletime;
            }
            set
            {
                if (_Cycletime != value)
                {
                    _Cycletime = value;
                }
            }
        }
        private Nullable<decimal> _Cycletime;

        /// <summary>
        /// 표준생산인원
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Standardmannumber
        {
            get
            {
                return _Standardmannumber;
            }
            set
            {
                if (_Standardmannumber != value)
                {
                    _Standardmannumber = value;
                }
            }
        }
        private Nullable<int> _Standardmannumber;

        /// <summary>
        /// 표준수량(UPH) : 시간당표준수량 : (3600(초) / CycleTime(라인품목별))
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Standarduph
        {
            get
            {
                return _Standarduph;
            }
            set
            {
                if (_Standarduph != value)
                {
                    _Standarduph = value;
                }
            }
        }
        private Nullable<decimal> _Standarduph;

        /// <summary>
        /// 표준수량(UPMH) : 시간당표준수량 : (3600(초) / CycleTime(라인품목별))/표준인원
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Standardupmh
        {
            get
            {
                return _Standardupmh;
            }
            set
            {
                if (_Standardupmh != value)
                {
                    _Standardupmh = value;
                }
            }
        }
        private Nullable<decimal> _Standardupmh;

        /// <summary>
        /// 모델 변경 준비교체시간; 단위 초 (생산 작업 중단된 때 준비교체)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Internalsetuptime
        {
            get
            {
                return _Internalsetuptime;
            }
            set
            {
                if (_Internalsetuptime != value)
                {
                    _Internalsetuptime = value;
                }
            }
        }
        private Nullable<int> _Internalsetuptime;

        /// <summary>
        /// 모델 변경 준비교체시간; 단위 초 (생산 작업 중 준비교체)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Externalsetuptime
        {
            get
            {
                return _Externalsetuptime;
            }
            set
            {
                if (_Externalsetuptime != value)
                {
                    _Externalsetuptime = value;
                }
            }
        }
        private Nullable<int> _Externalsetuptime;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비별 지표 시간 기준정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmenttimestandard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmenttimestandard : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 사람중심, 기계중심 - Manual | Automatic 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isautomatic
        {
            get
            {
                return _Isautomatic;
            }
            set
            {
                if (_Isautomatic != value)
                {
                    _Isautomatic = value;
                }
            }
        }
        private string _Isautomatic;

        /// <summary>
        /// 평일 주간 근무 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Dayshiftworktime
        {
            get
            {
                return _Dayshiftworktime;
            }
            set
            {
                if (_Dayshiftworktime != value)
                {
                    _Dayshiftworktime = value;
                }
            }
        }
        private Nullable<decimal> _Dayshiftworktime;

        /// <summary>
        /// 평일 연장 근무 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Weekdayovertime
        {
            get
            {
                return _Weekdayovertime;
            }
            set
            {
                if (_Weekdayovertime != value)
                {
                    _Weekdayovertime = value;
                }
            }
        }
        private Nullable<decimal> _Weekdayovertime;

        /// <summary>
        /// 평일 야간 근무 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Nightshiftworktime
        {
            get
            {
                return _Nightshiftworktime;
            }
            set
            {
                if (_Nightshiftworktime != value)
                {
                    _Nightshiftworktime = value;
                }
            }
        }
        private Nullable<decimal> _Nightshiftworktime;

        /// <summary>
        /// 휴일 주간 근무 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Holidaydayshiftworktime
        {
            get
            {
                return _Holidaydayshiftworktime;
            }
            set
            {
                if (_Holidaydayshiftworktime != value)
                {
                    _Holidaydayshiftworktime = value;
                }
            }
        }
        private Nullable<decimal> _Holidaydayshiftworktime;

        /// <summary>
        /// 휴일 야간 근무 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Holidaynightshiftworktime
        {
            get
            {
                return _Holidaynightshiftworktime;
            }
            set
            {
                if (_Holidaynightshiftworktime != value)
                {
                    _Holidaynightshiftworktime = value;
                }
            }
        }
        private Nullable<decimal> _Holidaynightshiftworktime;

        /// <summary>
        /// 무인가동 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Unmaneduptime
        {
            get
            {
                return _Unmaneduptime;
            }
            set
            {
                if (_Unmaneduptime != value)
                {
                    _Unmaneduptime = value;
                }
            }
        }
        private Nullable<decimal> _Unmaneduptime;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비별 지표 시간 기준정보 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Equipmenttimestandardhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipmenttimestandardhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 사람중심, 기계중심 - Manual | Automatic 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isautomatic
        {
            get
            {
                return _Isautomatic;
            }
            set
            {
                if (_Isautomatic != value)
                {
                    _Isautomatic = value;
                }
            }
        }
        private string _Isautomatic;

        /// <summary>
        /// 평일 주간 근무 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Dayshiftworktime
        {
            get
            {
                return _Dayshiftworktime;
            }
            set
            {
                if (_Dayshiftworktime != value)
                {
                    _Dayshiftworktime = value;
                }
            }
        }
        private Nullable<decimal> _Dayshiftworktime;

        /// <summary>
        /// 평일 연장 근무 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Weekdayovertime
        {
            get
            {
                return _Weekdayovertime;
            }
            set
            {
                if (_Weekdayovertime != value)
                {
                    _Weekdayovertime = value;
                }
            }
        }
        private Nullable<decimal> _Weekdayovertime;

        /// <summary>
        /// 평일 야간 근무 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Nightshiftworktime
        {
            get
            {
                return _Nightshiftworktime;
            }
            set
            {
                if (_Nightshiftworktime != value)
                {
                    _Nightshiftworktime = value;
                }
            }
        }
        private Nullable<decimal> _Nightshiftworktime;

        /// <summary>
        /// 휴일 주간 근무 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Holidaydayshiftworktime
        {
            get
            {
                return _Holidaydayshiftworktime;
            }
            set
            {
                if (_Holidaydayshiftworktime != value)
                {
                    _Holidaydayshiftworktime = value;
                }
            }
        }
        private Nullable<decimal> _Holidaydayshiftworktime;

        /// <summary>
        /// 휴일 야간 근무 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Holidaynightshiftworktime
        {
            get
            {
                return _Holidaynightshiftworktime;
            }
            set
            {
                if (_Holidaynightshiftworktime != value)
                {
                    _Holidaynightshiftworktime = value;
                }
            }
        }
        private Nullable<decimal> _Holidaynightshiftworktime;

        /// <summary>
        /// 무인가동 시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Unmaneduptime
        {
            get
            {
                return _Unmaneduptime;
            }
            set
            {
                if (_Unmaneduptime != value)
                {
                    _Unmaneduptime = value;
                }
            }
        }
        private Nullable<decimal> _Unmaneduptime;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 생산 공장에 대한 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Factory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Factory : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing Factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Factory 이름
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryname
        {
            get
            {
                return _Factoryname;
            }
            set
            {
                if (_Factoryname != value)
                {
                    _Factoryname = value;
                }
            }
        }
        private string _Factoryname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Factory 유형
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorytype
        {
            get
            {
                return _Factorytype;
            }
            set
            {
                if (_Factorytype != value)
                {
                    _Factorytype = value;
                }
            }
        }
        private string _Factorytype;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=4, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// ERP Company - for ERP mapping
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Erpcompany
        {
            get
            {
                return _Erpcompany;
            }
            set
            {
                if (_Erpcompany != value)
                {
                    _Erpcompany = value;
                }
            }
        }
        private string _Erpcompany;

        /// <summary>
        /// ERP Plant - for ERP Plant mapping
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Erpplant
        {
            get
            {
                return _Erpplant;
            }
            set
            {
                if (_Erpplant != value)
                {
                    _Erpplant = value;
                }
            }
        }
        private string _Erpplant;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 생산 공장에 대한 정보 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Factoryhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Factoryhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing Factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Factory 이름
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryname
        {
            get
            {
                return _Factoryname;
            }
            set
            {
                if (_Factoryname != value)
                {
                    _Factoryname = value;
                }
            }
        }
        private string _Factoryname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Factory 유형
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorytype
        {
            get
            {
                return _Factorytype;
            }
            set
            {
                if (_Factorytype != value)
                {
                    _Factorytype = value;
                }
            }
        }
        private string _Factorytype;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=4, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// ERP Company - for ERP mapping
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Erpcompany
        {
            get
            {
                return _Erpcompany;
            }
            set
            {
                if (_Erpcompany != value)
                {
                    _Erpcompany = value;
                }
            }
        }
        private string _Erpcompany;

        /// <summary>
        /// ERP Plant - for ERP Plant mapping
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Erpplant
        {
            get
            {
                return _Erpplant;
            }
            set
            {
                if (_Erpplant != value)
                {
                    _Erpplant = value;
                }
            }
        }
        private string _Erpplant;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// (SPC,MES) This table manages File information.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// FILE system id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Filesysid
        {
            get
            {
                return _Filesysid;
            }
            set
            {
                if (_Filesysid != value)
                {
                    _Filesysid = value;
                }
            }
        }
        private string _Filesysid;

        /// <summary>
        /// Site id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// File type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Filetype
        {
            get
            {
                return _Filetype;
            }
            set
            {
                if (_Filetype != value)
                {
                    _Filetype = value;
                }
            }
        }
        private string _Filetype;

        /// <summary>
        /// Application Server에 저장된 File Full 경로?
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fullfilepath
        {
            get
            {
                return _Fullfilepath;
            }
            set
            {
                if (_Fullfilepath != value)
                {
                    _Fullfilepath = value;
                }
            }
        }
        private string _Fullfilepath;

        /// <summary>
        /// File name (확장자 제외)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                if (_Filename != value)
                {
                    _Filename = value;
                }
            }
        }
        private string _Filename;

        /// <summary>
        /// File extension.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fileextension
        {
            get
            {
                return _Fileextension;
            }
            set
            {
                if (_Fileextension != value)
                {
                    _Fileextension = value;
                }
            }
        }
        private string _Fileextension;

        /// <summary>
        /// File size (BYTE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<long> Filesize
        {
            get
            {
                return _Filesize;
            }
            set
            {
                if (_Filesize != value)
                {
                    _Filesize = value;
                }
            }
        }
        private Nullable<long> _Filesize;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varbinary", MaxLength=-1, DataSize=-1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public byte[] Filedata
        {
            get
            {
                return _Filedata;
            }
            set
            {
                if (_Filedata != value)
                {
                    _Filedata = value;
                }
            }
        }
        private byte[] _Filedata;

        #endregion
    }

    /// <summary>
    /// (SPC,MES) This table manages File information. 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Filehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Filehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// FILE system id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Filesysid
        {
            get
            {
                return _Filesysid;
            }
            set
            {
                if (_Filesysid != value)
                {
                    _Filesysid = value;
                }
            }
        }
        private string _Filesysid;

        /// <summary>
        /// Site id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// File type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Filetype
        {
            get
            {
                return _Filetype;
            }
            set
            {
                if (_Filetype != value)
                {
                    _Filetype = value;
                }
            }
        }
        private string _Filetype;

        /// <summary>
        /// Application Server에 저장된 File Full 경로?
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fullfilepath
        {
            get
            {
                return _Fullfilepath;
            }
            set
            {
                if (_Fullfilepath != value)
                {
                    _Fullfilepath = value;
                }
            }
        }
        private string _Fullfilepath;

        /// <summary>
        /// File name (확장자 제외)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                if (_Filename != value)
                {
                    _Filename = value;
                }
            }
        }
        private string _Filename;

        /// <summary>
        /// File extension.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fileextension
        {
            get
            {
                return _Fileextension;
            }
            set
            {
                if (_Fileextension != value)
                {
                    _Fileextension = value;
                }
            }
        }
        private string _Fileextension;

        /// <summary>
        /// File size (BYTE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<long> Filesize
        {
            get
            {
                return _Filesize;
            }
            set
            {
                if (_Filesize != value)
                {
                    _Filesize = value;
                }
            }
        }
        private Nullable<long> _Filesize;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 현재 ID 생성 상태 (current serial 정보 저장)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Idindex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Idindex : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for id-index id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Idindexid
        {
            get
            {
                return _Idindexid;
            }
            set
            {
                if (_Idindexid != value)
                {
                    _Idindexid = value;
                }
            }
        }
        private string _Idindexid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Id-pattern id. (ref. FOM_IDPATTERN)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Idpatternid
        {
            get
            {
                return _Idpatternid;
            }
            set
            {
                if (_Idpatternid != value)
                {
                    _Idpatternid = value;
                }
            }
        }
        private string _Idpatternid;

        /// <summary>
        /// Id-index name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Idindexname
        {
            get
            {
                return _Idindexname;
            }
            set
            {
                if (_Idindexname != value)
                {
                    _Idindexname = value;
                }
            }
        }
        private string _Idindexname;

        /// <summary>
        /// Last serial number that is used.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Currentindex
        {
            get
            {
                return _Currentindex;
            }
            set
            {
                if (_Currentindex != value)
                {
                    _Currentindex = value;
                }
            }
        }
        private string _Currentindex;

        /// <summary>
        /// The exception characters that cannot be used when a serial number is generated.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Exceptionchars
        {
            get
            {
                return _Exceptionchars;
            }
            set
            {
                if (_Exceptionchars != value)
                {
                    _Exceptionchars = value;
                }
            }
        }
        private string _Exceptionchars;

        /// <summary>
        /// The value that define the table column format, against which the transaction checks for uniqueness.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Checkobject
        {
            get
            {
                return _Checkobject;
            }
            set
            {
                if (_Checkobject != value)
                {
                    _Checkobject = value;
                }
            }
        }
        private string _Checkobject;

        /// <summary>
        /// The start serial number be used when a serial number is generated.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Firstindex
        {
            get
            {
                return _Firstindex;
            }
            set
            {
                if (_Firstindex != value)
                {
                    _Firstindex = value;
                }
            }
        }
        private string _Firstindex;

        /// <summary>
        /// The end serial number be used when a serial number is generated.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lastindex
        {
            get
            {
                return _Lastindex;
            }
            set
            {
                if (_Lastindex != value)
                {
                    _Lastindex = value;
                }
            }
        }
        private string _Lastindex;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// ID 생성 규칙 정의 (Lot ID 생성 룰, 자재 ID 생성 룰 등)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Idpattern")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Idpattern : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for id-pattern id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Idpatternid
        {
            get
            {
                return _Idpatternid;
            }
            set
            {
                if (_Idpatternid != value)
                {
                    _Idpatternid = value;
                }
            }
        }
        private string _Idpatternid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Id-pattern name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Idpatternname
        {
            get
            {
                return _Idpatternname;
            }
            set
            {
                if (_Idpatternname != value)
                {
                    _Idpatternname = value;
                }
            }
        }
        private string _Idpatternname;

        /// <summary>
        /// Pattern format. ex) .[%USERPARAM][%USERPARAM][YY][MM][DD][SERNUM<4>]
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Format
        {
            get
            {
                return _Format;
            }
            set
            {
                if (_Format != value)
                {
                    _Format = value;
                }
            }
        }
        private string _Format;

        /// <summary>
        /// The exception characters that cannot be used when a serial number is generated.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Exceptionchars
        {
            get
            {
                return _Exceptionchars;
            }
            set
            {
                if (_Exceptionchars != value)
                {
                    _Exceptionchars = value;
                }
            }
        }
        private string _Exceptionchars;

        /// <summary>
        /// The value that define the table column format, against which the transaction checks for uniqueness.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Checkobject
        {
            get
            {
                return _Checkobject;
            }
            set
            {
                if (_Checkobject != value)
                {
                    _Checkobject = value;
                }
            }
        }
        private string _Checkobject;

        /// <summary>
        /// The start serial number be used when a serial number is generated.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Startserial
        {
            get
            {
                return _Startserial;
            }
            set
            {
                if (_Startserial != value)
                {
                    _Startserial = value;
                }
            }
        }
        private string _Startserial;

        /// <summary>
        /// The end serial number be used when a serial number is generated.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Endserial
        {
            get
            {
                return _Endserial;
            }
            set
            {
                if (_Endserial != value)
                {
                    _Endserial = value;
                }
            }
        }
        private string _Endserial;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// ID 생성 규칙 정의 (Lot ID 생성 룰, 자재 ID 생성 룰 등) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Idpatternhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Idpatternhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for id-pattern id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Idpatternid
        {
            get
            {
                return _Idpatternid;
            }
            set
            {
                if (_Idpatternid != value)
                {
                    _Idpatternid = value;
                }
            }
        }
        private string _Idpatternid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Id-pattern name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Idpatternname
        {
            get
            {
                return _Idpatternname;
            }
            set
            {
                if (_Idpatternname != value)
                {
                    _Idpatternname = value;
                }
            }
        }
        private string _Idpatternname;

        /// <summary>
        /// Pattern format. ex) .[%USERPARAM][%USERPARAM][YY][MM][DD][SERNUM<4>]
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Format
        {
            get
            {
                return _Format;
            }
            set
            {
                if (_Format != value)
                {
                    _Format = value;
                }
            }
        }
        private string _Format;

        /// <summary>
        /// The exception characters that cannot be used when a serial number is generated.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Exceptionchars
        {
            get
            {
                return _Exceptionchars;
            }
            set
            {
                if (_Exceptionchars != value)
                {
                    _Exceptionchars = value;
                }
            }
        }
        private string _Exceptionchars;

        /// <summary>
        /// The value that define the table column format, against which the transaction checks for uniqueness.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Checkobject
        {
            get
            {
                return _Checkobject;
            }
            set
            {
                if (_Checkobject != value)
                {
                    _Checkobject = value;
                }
            }
        }
        private string _Checkobject;

        /// <summary>
        /// The start serial number be used when a serial number is generated.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Startserial
        {
            get
            {
                return _Startserial;
            }
            set
            {
                if (_Startserial != value)
                {
                    _Startserial = value;
                }
            }
        }
        private string _Startserial;

        /// <summary>
        /// The end serial number be used when a serial number is generated.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Endserial
        {
            get
            {
                return _Endserial;
            }
            set
            {
                if (_Endserial != value)
                {
                    _Endserial = value;
                }
            }
        }
        private string _Endserial;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Location 관리 (Site, Factory, Line, Area, 창고 등) (Ex. U-TECH / FAB-1 / PRODLINE-1 / STOCK-1)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for location id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Facility name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationname
        {
            get
            {
                return _Locationname;
            }
            set
            {
                if (_Locationname != value)
                {
                    _Locationname = value;
                }
            }
        }
        private string _Locationname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Facility class id. (ref. FOM_LOCATIONCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationclassid
        {
            get
            {
                return _Locationclassid;
            }
            set
            {
                if (_Locationclassid != value)
                {
                    _Locationclassid = value;
                }
            }
        }
        private string _Locationclassid;

        /// <summary>
        /// Type of location.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationtype
        {
            get
            {
                return _Locationtype;
            }
            set
            {
                if (_Locationtype != value)
                {
                    _Locationtype = value;
                }
            }
        }
        private string _Locationtype;

        /// <summary>
        /// Type of detail location.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detaillocationtype
        {
            get
            {
                return _Detaillocationtype;
            }
            set
            {
                if (_Detaillocationtype != value)
                {
                    _Detaillocationtype = value;
                }
            }
        }
        private string _Detaillocationtype;

        /// <summary>
        /// Super location ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentlocationid
        {
            get
            {
                return _Parentlocationid;
            }
            set
            {
                if (_Parentlocationid != value)
                {
                    _Parentlocationid = value;
                }
            }
        }
        private string _Parentlocationid;

        /// <summary>
        /// ERP Location
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Erplocation
        {
            get
            {
                return _Erplocation;
            }
            set
            {
                if (_Erplocation != value)
                {
                    _Erplocation = value;
                }
            }
        }
        private string _Erplocation;

        /// <summary>
        /// 방개차별 물류이동 담당구역 (ex: A, B)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferzone
        {
            get
            {
                return _Transferzone;
            }
            set
            {
                if (_Transferzone != value)
                {
                    _Transferzone = value;
                }
            }
        }
        private string _Transferzone;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Displaygroup
        {
            get
            {
                return _Displaygroup;
            }
            set
            {
                if (_Displaygroup != value)
                {
                    _Displaygroup = value;
                }
            }
        }
        private string _Displaygroup;

        /// <summary>
        /// Location에 이동가능한 Carrier 종류
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Representativeprocess
        {
            get
            {
                return _Representativeprocess;
            }
            set
            {
                if (_Representativeprocess != value)
                {
                    _Representativeprocess = value;
                }
            }
        }
        private string _Representativeprocess;

        /// <summary>
        /// Type of storage.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Storagetype
        {
            get
            {
                return _Storagetype;
            }
            set
            {
                if (_Storagetype != value)
                {
                    _Storagetype = value;
                }
            }
        }
        private string _Storagetype;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Legacy 인터페이스 시스템 명(WMS, MOM... ) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Legacyinterface
        {
            get
            {
                return _Legacyinterface;
            }
            set
            {
                if (_Legacyinterface != value)
                {
                    _Legacyinterface = value;
                }
            }
        }
        private string _Legacyinterface;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Location, 자재별 Carrier 수용능력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Locationcapacity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Locationcapacity : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for equipment class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Producedmaterial Type Ex) GBS
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Producttype
        {
            get
            {
                return _Producttype;
            }
            set
            {
                if (_Producttype != value)
                {
                    _Producttype = value;
                }
            }
        }
        private string _Producttype;

        /// <summary>
        /// Description of object. Ex) DedicatedCarrier (전용대차) / GeneralPalette (일반 팔레트)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// Capacity of carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Maxcarriercapacity
        {
            get
            {
                return _Maxcarriercapacity;
            }
            set
            {
                if (_Maxcarriercapacity != value)
                {
                    _Maxcarriercapacity = value;
                }
            }
        }
        private Nullable<int> _Maxcarriercapacity;

        /// <summary>
        /// Description.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Location, 자재별 Carrier 수용능력 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Locationcapacityhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Locationcapacityhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for equipment class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Producedmaterial Type Ex) Glass
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Producttype
        {
            get
            {
                return _Producttype;
            }
            set
            {
                if (_Producttype != value)
                {
                    _Producttype = value;
                }
            }
        }
        private string _Producttype;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// Capacity of carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Maxcarriercapacity
        {
            get
            {
                return _Maxcarriercapacity;
            }
            set
            {
                if (_Maxcarriercapacity != value)
                {
                    _Maxcarriercapacity = value;
                }
            }
        }
        private Nullable<int> _Maxcarriercapacity;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Locationcarriercapacity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Locationcarriercapacity : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Unique identifier for equipment class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Unique identifier for product definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Unique identifier for material definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionid
        {
            get
            {
                return _Materialdefinitionid;
            }
            set
            {
                if (_Materialdefinitionid != value)
                {
                    _Materialdefinitionid = value;
                }
            }
        }
        private string _Materialdefinitionid;

        /// <summary>
        /// Description of object. Ex) DedicatedCarrier (전용대차) / GeneralPalette (일반 팔레트)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// Capacity of carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Maxcarriercapacity
        {
            get
            {
                return _Maxcarriercapacity;
            }
            set
            {
                if (_Maxcarriercapacity != value)
                {
                    _Maxcarriercapacity = value;
                }
            }
        }
        private Nullable<int> _Maxcarriercapacity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Locationcarriercapacityhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Locationcarriercapacityhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Unique identifier for equipment class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Unique identifier for product definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Unique identifier for material definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionid
        {
            get
            {
                return _Materialdefinitionid;
            }
            set
            {
                if (_Materialdefinitionid != value)
                {
                    _Materialdefinitionid = value;
                }
            }
        }
        private string _Materialdefinitionid;

        /// <summary>
        /// Description of object. Ex) DedicatedCarrier (전용대차) / GeneralPalette (일반 팔레트)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// Capacity of carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=13, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Maxcarriercapacity
        {
            get
            {
                return _Maxcarriercapacity;
            }
            set
            {
                if (_Maxcarriercapacity != value)
                {
                    _Maxcarriercapacity = value;
                }
            }
        }
        private Nullable<int> _Maxcarriercapacity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Location 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Locationclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Locationclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for location class id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Locationclassid
        {
            get
            {
                return _Locationclassid;
            }
            set
            {
                if (_Locationclassid != value)
                {
                    _Locationclassid = value;
                }
            }
        }
        private string _Locationclassid;

        /// <summary>
        /// Location class name. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationclassname
        {
            get
            {
                return _Locationclassname;
            }
            set
            {
                if (_Locationclassname != value)
                {
                    _Locationclassname = value;
                }
            }
        }
        private string _Locationclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Location 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Locationclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Locationclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for location class id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationclassid
        {
            get
            {
                return _Locationclassid;
            }
            set
            {
                if (_Locationclassid != value)
                {
                    _Locationclassid = value;
                }
            }
        }
        private string _Locationclassid;

        /// <summary>
        /// Location class name. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationclassname
        {
            get
            {
                return _Locationclassname;
            }
            set
            {
                if (_Locationclassname != value)
                {
                    _Locationclassname = value;
                }
            }
        }
        private string _Locationclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Location 관리 (Site, Factory, Line, Area, 창고 등) (Ex. U-TECH / FAB-1 / PRODLINE-1 / STOCK-1) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Locationhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Locationhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for location id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Facility name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationname
        {
            get
            {
                return _Locationname;
            }
            set
            {
                if (_Locationname != value)
                {
                    _Locationname = value;
                }
            }
        }
        private string _Locationname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Facility class id. (ref. FOM_LOCATIONCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationclassid
        {
            get
            {
                return _Locationclassid;
            }
            set
            {
                if (_Locationclassid != value)
                {
                    _Locationclassid = value;
                }
            }
        }
        private string _Locationclassid;

        /// <summary>
        /// Type of location.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationtype
        {
            get
            {
                return _Locationtype;
            }
            set
            {
                if (_Locationtype != value)
                {
                    _Locationtype = value;
                }
            }
        }
        private string _Locationtype;

        /// <summary>
        /// Type of detail location.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detaillocationtype
        {
            get
            {
                return _Detaillocationtype;
            }
            set
            {
                if (_Detaillocationtype != value)
                {
                    _Detaillocationtype = value;
                }
            }
        }
        private string _Detaillocationtype;

        /// <summary>
        /// Super location ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentlocationid
        {
            get
            {
                return _Parentlocationid;
            }
            set
            {
                if (_Parentlocationid != value)
                {
                    _Parentlocationid = value;
                }
            }
        }
        private string _Parentlocationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Displaygroup
        {
            get
            {
                return _Displaygroup;
            }
            set
            {
                if (_Displaygroup != value)
                {
                    _Displaygroup = value;
                }
            }
        }
        private string _Displaygroup;

        /// <summary>
        /// ERP Location
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Erplocation
        {
            get
            {
                return _Erplocation;
            }
            set
            {
                if (_Erplocation != value)
                {
                    _Erplocation = value;
                }
            }
        }
        private string _Erplocation;

        /// <summary>
        /// 방개차별 물류이동 담당구역 (ex: A, B)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferzone
        {
            get
            {
                return _Transferzone;
            }
            set
            {
                if (_Transferzone != value)
                {
                    _Transferzone = value;
                }
            }
        }
        private string _Transferzone;

        /// <summary>
        /// Location에 이동가능한 Carrier 종류
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierdefinitionid
        {
            get
            {
                return _Carrierdefinitionid;
            }
            set
            {
                if (_Carrierdefinitionid != value)
                {
                    _Carrierdefinitionid = value;
                }
            }
        }
        private string _Carrierdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Representativeprocess
        {
            get
            {
                return _Representativeprocess;
            }
            set
            {
                if (_Representativeprocess != value)
                {
                    _Representativeprocess = value;
                }
            }
        }
        private string _Representativeprocess;

        /// <summary>
        /// Type of storage.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Storagetype
        {
            get
            {
                return _Storagetype;
            }
            set
            {
                if (_Storagetype != value)
                {
                    _Storagetype = value;
                }
            }
        }
        private string _Storagetype;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Legacy 인터페이스 시스템 명(WMS, MOM... ) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Legacyinterface
        {
            get
            {
                return _Legacyinterface;
            }
            set
            {
                if (_Legacyinterface != value)
                {
                    _Legacyinterface = value;
                }
            }
        }
        private string _Legacyinterface;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Current Lot Information
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lot : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Lot name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotname
        {
            get
            {
                return _Lotname;
            }
            set
            {
                if (_Lotname != value)
                {
                    _Lotname = value;
                }
            }
        }
        private string _Lotname;

        /// <summary>
        /// Type of lot. ex) PP | SS, Prodution | Engineer | Develop | NonProduction 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productiontype
        {
            get
            {
                return _Productiontype;
            }
            set
            {
                if (_Productiontype != value)
                {
                    _Productiontype = value;
                }
            }
        }
        private string _Productiontype;

        /// <summary>
        /// Detail Type of lot. ex) Sample | SourceMonitor | Dummy
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailproductiontype
        {
            get
            {
                return _Detailproductiontype;
            }
            set
            {
                if (_Detailproductiontype != value)
                {
                    _Detailproductiontype = value;
                }
            }
        }
        private string _Detailproductiontype;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Product class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productclassid
        {
            get
            {
                return _Productclassid;
            }
            set
            {
                if (_Productclassid != value)
                {
                    _Productclassid = value;
                }
            }
        }
        private string _Productclassid;

        /// <summary>
        /// Process definition id. (ref. FOM_PROCESSDEFINITION) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Sub process definition id. If sub process definition id does not exist, this is filled with top process definition id.(ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subprocessdefinitionid
        {
            get
            {
                return _Subprocessdefinitionid;
            }
            set
            {
                if (_Subprocessdefinitionid != value)
                {
                    _Subprocessdefinitionid = value;
                }
            }
        }
        private string _Subprocessdefinitionid;

        /// <summary>
        /// Process node id. (ref. FOM_PROCESSNODE) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Current equipment id that the lot id is being worked. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Recipe of current Equipment processing
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeid
        {
            get
            {
                return _Recipeid;
            }
            set
            {
                if (_Recipeid != value)
                {
                    _Recipeid = value;
                }
            }
        }
        private string _Recipeid;

        /// <summary>
        /// Port of the production Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Portid
        {
            get
            {
                return _Portid;
            }
            set
            {
                if (_Portid != value)
                {
                    _Portid = value;
                }
            }
        }
        private string _Portid;

        /// <summary>
        /// Current location of lot id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Lot Process Group ID i.e. Batch or Box etc..
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processgroupid
        {
            get
            {
                return _Processgroupid;
            }
            set
            {
                if (_Processgroupid != value)
                {
                    _Processgroupid = value;
                }
            }
        }
        private string _Processgroupid;

        /// <summary>
        /// Original quantity of lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Startproductquantity
        {
            get
            {
                return _Startproductquantity;
            }
            set
            {
                if (_Startproductquantity != value)
                {
                    _Startproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Startproductquantity;

        /// <summary>
        /// Original quantity of lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Startsubproductquantity
        {
            get
            {
                return _Startsubproductquantity;
            }
            set
            {
                if (_Startsubproductquantity != value)
                {
                    _Startsubproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Startsubproductquantity;

        /// <summary>
        /// Material Type (ex. Glass, Wafer)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Producttype
        {
            get
            {
                return _Producttype;
            }
            set
            {
                if (_Producttype != value)
                {
                    _Producttype = value;
                }
            }
        }
        private string _Producttype;

        /// <summary>
        /// False Material Type (ex. Quadrant, Cell)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subproducttype
        {
            get
            {
                return _Subproducttype;
            }
            set
            {
                if (_Subproducttype != value)
                {
                    _Subproducttype = value;
                }
            }
        }
        private string _Subproducttype;

        /// <summary>
        /// Current quantity of lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Productquantity
        {
            get
            {
                return _Productquantity;
            }
            set
            {
                if (_Productquantity != value)
                {
                    _Productquantity = value;
                }
            }
        }
        private Nullable<decimal> _Productquantity;

        /// <summary>
        /// Current quantity of subproduct
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Subproductquantity
        {
            get
            {
                return _Subproductquantity;
            }
            set
            {
                if (_Subproductquantity != value)
                {
                    _Subproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Subproductquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Defectquantity
        {
            get
            {
                return _Defectquantity;
            }
            set
            {
                if (_Defectquantity != value)
                {
                    _Defectquantity = value;
                }
            }
        }
        private Nullable<decimal> _Defectquantity;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// The datetime that the lot will be started, scheduling system or planner may  set
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Planstarttime
        {
            get
            {
                return _Planstarttime;
            }
            set
            {
                if (_Planstarttime != value)
                {
                    _Planstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Planstarttime;

        /// <summary>
        /// The date that the lot id will be manufactured completely. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Duedate
        {
            get
            {
                return _Duedate;
            }
            set
            {
                if (_Duedate != value)
                {
                    _Duedate = value;
                }
            }
        }
        private Nullable<DateTime> _Duedate;

        /// <summary>
        /// The datetime that the lot be started
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// The time that the lot state is finished.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Finishtime
        {
            get
            {
                return _Finishtime;
            }
            set
            {
                if (_Finishtime != value)
                {
                    _Finishtime = value;
                }
            }
        }
        private Nullable<DateTime> _Finishtime;

        /// <summary>
        /// The time that the lot state is shipped.  
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Shiptime
        {
            get
            {
                return _Shiptime;
            }
            set
            {
                if (_Shiptime != value)
                {
                    _Shiptime = value;
                }
            }
        }
        private Nullable<DateTime> _Shiptime;

        /// <summary>
        /// The priority of lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// Production order id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productionorderid
        {
            get
            {
                return _Productionorderid;
            }
            set
            {
                if (_Productionorderid != value)
                {
                    _Productionorderid = value;
                }
            }
        }
        private string _Productionorderid;

        /// <summary>
        /// Work order id. (ref. FOM_WORKORDER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// Vendor id. (ref. FOM_VENDOR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// Source LotID that material was taken from to start this lot.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Sourcelotid
        {
            get
            {
                return _Sourcelotid;
            }
            set
            {
                if (_Sourcelotid != value)
                {
                    _Sourcelotid = value;
                }
            }
        }
        private string _Sourcelotid;

        /// <summary>
        /// Root lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Rootlotid
        {
            get
            {
                return _Rootlotid;
            }
            set
            {
                if (_Rootlotid != value)
                {
                    _Rootlotid = value;
                }
            }
        }
        private string _Rootlotid;

        /// <summary>
        /// Parent lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentlotid
        {
            get
            {
                return _Parentlotid;
            }
            set
            {
                if (_Parentlotid != value)
                {
                    _Parentlotid = value;
                }
            }
        }
        private string _Parentlotid;

        /// <summary>
        /// Lot Comments. 삭제하거나 변경하기전까지는 변경없는 lot comment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotcomment
        {
            get
            {
                return _Lotcomment;
            }
            set
            {
                if (_Lotcomment != value)
                {
                    _Lotcomment = value;
                }
            }
        }
        private string _Lotcomment;

        /// <summary>
        /// Current state of lot id. ex) Created, Active, Terminated, Scrapped, Finished, Shipped 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Current processing state of lot id. ex) WaitForRule, ProcessingRule, WaitForSegment 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processstate
        {
            get
            {
                return _Processstate;
            }
            set
            {
                if (_Processstate != value)
                {
                    _Processstate = value;
                }
            }
        }
        private string _Processstate;

        /// <summary>
        /// HoldState
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// Rework State
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reworkstate
        {
            get
            {
                return _Reworkstate;
            }
            set
            {
                if (_Reworkstate != value)
                {
                    _Reworkstate = value;
                }
            }
        }
        private string _Reworkstate;

        /// <summary>
        /// Process of Rework Type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reworktype
        {
            get
            {
                return _Reworktype;
            }
            set
            {
                if (_Reworktype != value)
                {
                    _Reworktype = value;
                }
            }
        }
        private string _Reworktype;

        /// <summary>
        /// Rework count 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Reworkcount
        {
            get
            {
                return _Reworkcount;
            }
            set
            {
                if (_Reworkcount != value)
                {
                    _Reworkcount = value;
                }
            }
        }
        private Nullable<int> _Reworkcount;

        /// <summary>
        /// Repeat count.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repeatcount
        {
            get
            {
                return _Repeatcount;
            }
            set
            {
                if (_Repeatcount != value)
                {
                    _Repeatcount = value;
                }
            }
        }
        private Nullable<int> _Repeatcount;

        /// <summary>
        /// It is used when lot id does the reposition, rework. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Nextsubprocessdefinitionid
        {
            get
            {
                return _Nextsubprocessdefinitionid;
            }
            set
            {
                if (_Nextsubprocessdefinitionid != value)
                {
                    _Nextsubprocessdefinitionid = value;
                }
            }
        }
        private string _Nextsubprocessdefinitionid;

        /// <summary>
        /// It is used when lot id does the reposition, rework. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Nextprocesssegmentid
        {
            get
            {
                return _Nextprocesssegmentid;
            }
            set
            {
                if (_Nextprocesssegmentid != value)
                {
                    _Nextprocesssegmentid = value;
                }
            }
        }
        private string _Nextprocesssegmentid;

        /// <summary>
        /// The flag to determine whether or not the component(SubProduct) of this lot has been identified. Y | N or I | U - SubProduct has its own ProdictID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Identified
        {
            get
            {
                return _Identified;
            }
            set
            {
                if (_Identified != value)
                {
                    _Identified = value;
                }
            }
        }
        private string _Identified;

        /// <summary>
        /// The time that lot id comes into the one segment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Trackintime
        {
            get
            {
                return _Trackintime;
            }
            set
            {
                if (_Trackintime != value)
                {
                    _Trackintime = value;
                }
            }
        }
        private Nullable<DateTime> _Trackintime;

        /// <summary>
        /// The time that lot id comes out of the one segment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Trackouttime
        {
            get
            {
                return _Trackouttime;
            }
            set
            {
                if (_Trackouttime != value)
                {
                    _Trackouttime = value;
                }
            }
        }
        private Nullable<DateTime> _Trackouttime;

        /// <summary>
        /// Track In Event user
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Trackinuser
        {
            get
            {
                return _Trackinuser;
            }
            set
            {
                if (_Trackinuser != value)
                {
                    _Trackinuser = value;
                }
            }
        }
        private string _Trackinuser;

        /// <summary>
        /// Event user
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Trackoutuser
        {
            get
            {
                return _Trackoutuser;
            }
            set
            {
                if (_Trackoutuser != value)
                {
                    _Trackoutuser = value;
                }
            }
        }
        private string _Trackoutuser;

        /// <summary>
        /// The time that lot id comes into the one equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Processstarttime
        {
            get
            {
                return _Processstarttime;
            }
            set
            {
                if (_Processstarttime != value)
                {
                    _Processstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Processstarttime;

        /// <summary>
        /// The time that lot id comes out of the one equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Processendtime
        {
            get
            {
                return _Processendtime;
            }
            set
            {
                if (_Processendtime != value)
                {
                    _Processendtime = value;
                }
            }
        }
        private Nullable<DateTime> _Processendtime;

        /// <summary>
        /// The rule id that is included in the process segment id. (ref. FOM_PROCESSSEGMENTRULE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleid
        {
            get
            {
                return _Processsegmentruleid;
            }
            set
            {
                if (_Processsegmentruleid != value)
                {
                    _Processsegmentruleid = value;
                }
            }
        }
        private string _Processsegmentruleid;

        /// <summary>
        /// The sequence of rule id that is the sequence called. (ref. FOM_PROCESSSEGMENTRULECLASSREL)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Rulesequence
        {
            get
            {
                return _Rulesequence;
            }
            set
            {
                if (_Rulesequence != value)
                {
                    _Rulesequence = value;
                }
            }
        }
        private Nullable<int> _Rulesequence;

        /// <summary>
        /// carrier ID that lot contains for moving.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carriername
        {
            get
            {
                return _Carriername;
            }
            set
            {
                if (_Carriername != value)
                {
                    _Carriername = value;
                }
            }
        }
        private string _Carriername;

        /// <summary>
        /// The flag to determine whether or not to be a reserved future action.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isreservedfutureaction
        {
            get
            {
                return _Isreservedfutureaction;
            }
            set
            {
                if (_Isreservedfutureaction != value)
                {
                    _Isreservedfutureaction = value;
                }
            }
        }
        private string _Isreservedfutureaction;

        /// <summary>
        /// Customer id. (ref. FOM_CUSTOMER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Customerid
        {
            get
            {
                return _Customerid;
            }
            set
            {
                if (_Customerid != value)
                {
                    _Customerid = value;
                }
            }
        }
        private string _Customerid;

        /// <summary>
        /// The parent lot id that this lot id is merged. this state of lot id is "Terminated".
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mergelotid
        {
            get
            {
                return _Mergelotid;
            }
            set
            {
                if (_Mergelotid != value)
                {
                    _Mergelotid = value;
                }
            }
        }
        private string _Mergelotid;

        /// <summary>
        /// Receive time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receivedtime
        {
            get
            {
                return _Receivedtime;
            }
            set
            {
                if (_Receivedtime != value)
                {
                    _Receivedtime = value;
                }
            }
        }
        private Nullable<DateTime> _Receivedtime;

        /// <summary>
        /// Transfer equipment receiving the such product or materials according to the logistics movement  or process operation
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservedequipmentid
        {
            get
            {
                return _Reservedequipmentid;
            }
            set
            {
                if (_Reservedequipmentid != value)
                {
                    _Reservedequipmentid = value;
                }
            }
        }
        private string _Reservedequipmentid;

        /// <summary>
        /// Processing entry time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Reservedtime
        {
            get
            {
                return _Reservedtime;
            }
            set
            {
                if (_Reservedtime != value)
                {
                    _Reservedtime = value;
                }
            }
        }
        private Nullable<DateTime> _Reservedtime;

        /// <summary>
        /// Top Process Definition ID (No Changed on Adhoc Process)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mainprocessdefinitionid
        {
            get
            {
                return _Mainprocessdefinitionid;
            }
            set
            {
                if (_Mainprocessdefinitionid != value)
                {
                    _Mainprocessdefinitionid = value;
                }
            }
        }
        private string _Mainprocessdefinitionid;

        /// <summary>
        /// Adhoc Process Sys ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Adhocprocesssysid
        {
            get
            {
                return _Adhocprocesssysid;
            }
            set
            {
                if (_Adhocprocesssysid != value)
                {
                    _Adhocprocesssysid = value;
                }
            }
        }
        private string _Adhocprocesssysid;

        /// <summary>
        /// When Split and Merge, child lot id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Childlotid
        {
            get
            {
                return _Childlotid;
            }
            set
            {
                if (_Childlotid != value)
                {
                    _Childlotid = value;
                }
            }
        }
        private string _Childlotid;

        /// <summary>
        /// 생산 완료 후 완제품 창고로의 이동 또는 다음 공정 자재 사용됨의 구분  
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Outputproducttype
        {
            get
            {
                return _Outputproducttype;
            }
            set
            {
                if (_Outputproducttype != value)
                {
                    _Outputproducttype = value;
                }
            }
        }
        private string _Outputproducttype;

        /// <summary>
        /// 공정 진행 중 Comments.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Stepcomment
        {
            get
            {
                return _Stepcomment;
            }
            set
            {
                if (_Stepcomment != value)
                {
                    _Stepcomment = value;
                }
            }
        }
        private string _Stepcomment;

        /// <summary>
        /// Previous factory id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevfactoryid
        {
            get
            {
                return _Prevfactoryid;
            }
            set
            {
                if (_Prevfactoryid != value)
                {
                    _Prevfactoryid = value;
                }
            }
        }
        private string _Prevfactoryid;

        /// <summary>
        /// Type of lot. ex) PP | SS, Prodution | Engineer | Develop | NonProduction 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevproductiontype
        {
            get
            {
                return _Prevproductiontype;
            }
            set
            {
                if (_Prevproductiontype != value)
                {
                    _Prevproductiontype = value;
                }
            }
        }
        private string _Prevproductiontype;

        /// <summary>
        /// Previous state of lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Previous Product Type (ex. Glass, Wafer)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevproducttype
        {
            get
            {
                return _Prevproducttype;
            }
            set
            {
                if (_Prevproducttype != value)
                {
                    _Prevproducttype = value;
                }
            }
        }
        private string _Prevproducttype;

        /// <summary>
        /// Previous Product Type (ex. Quadrant, Cell)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevsubproducttype
        {
            get
            {
                return _Prevsubproducttype;
            }
            set
            {
                if (_Prevsubproducttype != value)
                {
                    _Prevsubproducttype = value;
                }
            }
        }
        private string _Prevsubproducttype;

        /// <summary>
        /// Previous qty of lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Prevproductquantity
        {
            get
            {
                return _Prevproductquantity;
            }
            set
            {
                if (_Prevproductquantity != value)
                {
                    _Prevproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Prevproductquantity;

        /// <summary>
        /// Previous sub qty of lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Prevsubproductquantity
        {
            get
            {
                return _Prevsubproductquantity;
            }
            set
            {
                if (_Prevsubproductquantity != value)
                {
                    _Prevsubproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Prevsubproductquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Prevdefectquantity
        {
            get
            {
                return _Prevdefectquantity;
            }
            set
            {
                if (_Prevdefectquantity != value)
                {
                    _Prevdefectquantity = value;
                }
            }
        }
        private Nullable<decimal> _Prevdefectquantity;

        /// <summary>
        /// Previous product definition ID of this lot. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevproductdefinitionid
        {
            get
            {
                return _Prevproductdefinitionid;
            }
            set
            {
                if (_Prevproductdefinitionid != value)
                {
                    _Prevproductdefinitionid = value;
                }
            }
        }
        private string _Prevproductdefinitionid;

        /// <summary>
        /// Previous process definition ID of this lot.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocessdefinitionid
        {
            get
            {
                return _Prevprocessdefinitionid;
            }
            set
            {
                if (_Prevprocessdefinitionid != value)
                {
                    _Prevprocessdefinitionid = value;
                }
            }
        }
        private string _Prevprocessdefinitionid;

        /// <summary>
        /// Previous sub process definition ID of lot. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevsubprocessdefinitionid
        {
            get
            {
                return _Prevsubprocessdefinitionid;
            }
            set
            {
                if (_Prevsubprocessdefinitionid != value)
                {
                    _Prevsubprocessdefinitionid = value;
                }
            }
        }
        private string _Prevsubprocessdefinitionid;

        /// <summary>
        /// Previous process node  ID of this lot.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocessnodeid
        {
            get
            {
                return _Prevprocessnodeid;
            }
            set
            {
                if (_Prevprocessnodeid != value)
                {
                    _Prevprocessnodeid = value;
                }
            }
        }
        private string _Prevprocessnodeid;

        /// <summary>
        /// Previous process segment  ID of this lot.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocesssegmentid
        {
            get
            {
                return _Prevprocesssegmentid;
            }
            set
            {
                if (_Prevprocesssegmentid != value)
                {
                    _Prevprocesssegmentid = value;
                }
            }
        }
        private string _Prevprocesssegmentid;

        /// <summary>
        /// Previous equipment  ID of this lot. was worked.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevequipmentid
        {
            get
            {
                return _Prevequipmentid;
            }
            set
            {
                if (_Prevequipmentid != value)
                {
                    _Prevequipmentid = value;
                }
            }
        }
        private string _Prevequipmentid;

        /// <summary>
        /// Previous location  ID of this lot.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Rework State
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevreworkstate
        {
            get
            {
                return _Prevreworkstate;
            }
            set
            {
                if (_Prevreworkstate != value)
                {
                    _Prevreworkstate = value;
                }
            }
        }
        private string _Prevreworkstate;

        /// <summary>
        /// Previous work order id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevworkorderid
        {
            get
            {
                return _Prevworkorderid;
            }
            set
            {
                if (_Prevworkorderid != value)
                {
                    _Prevworkorderid = value;
                }
            }
        }
        private string _Prevworkorderid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Registertime
        {
            get
            {
                return _Registertime;
            }
            set
            {
                if (_Registertime != value)
                {
                    _Registertime = value;
                }
            }
        }
        private Nullable<DateTime> _Registertime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentlotid
        {
            get
            {
                return _Equipmentlotid;
            }
            set
            {
                if (_Equipmentlotid != value)
                {
                    _Equipmentlotid = value;
                }
            }
        }
        private string _Equipmentlotid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processoperationid
        {
            get
            {
                return _Processoperationid;
            }
            set
            {
                if (_Processoperationid != value)
                {
                    _Processoperationid = value;
                }
            }
        }
        private string _Processoperationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Consumerlot
        {
            get
            {
                return _Consumerlot;
            }
            set
            {
                if (_Consumerlot != value)
                {
                    _Consumerlot = value;
                }
            }
        }
        private string _Consumerlot;

        #endregion
    }

    /// <summary>
    /// Lot의 adhoc process에 대한 정보 (Rework, 공정 삽입)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotadhocprocess")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotadhocprocess : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique SysID of AdHoc
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Lotadhocprocesssysid
        {
            get
            {
                return _Lotadhocprocesssysid;
            }
            set
            {
                if (_Lotadhocprocesssysid != value)
                {
                    _Lotadhocprocesssysid = value;
                }
            }
        }
        private string _Lotadhocprocesssysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Lot ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Depth of the same Adhoc of the Lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Adhocdepth
        {
            get
            {
                return _Adhocdepth;
            }
            set
            {
                if (_Adhocdepth != value)
                {
                    _Adhocdepth = value;
                }
            }
        }
        private int _Adhocdepth;

        /// <summary>
        /// Adhoc Process Type (Rework, SegmentInject)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Adhocprocesstype
        {
            get
            {
                return _Adhocprocesstype;
            }
            set
            {
                if (_Adhocprocesstype != value)
                {
                    _Adhocprocesstype = value;
                }
            }
        }
        private string _Adhocprocesstype;

        /// <summary>
        /// Adhoc Process Sysid of Lot when Create Adhoc (FOM_LOT.AdhocProcessSysID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setlotadhocprocesssysid
        {
            get
            {
                return _Setlotadhocprocesssysid;
            }
            set
            {
                if (_Setlotadhocprocesssysid != value)
                {
                    _Setlotadhocprocesssysid = value;
                }
            }
        }
        private string _Setlotadhocprocesssysid;

        /// <summary>
        /// Process Definition ID of Lot when Create Adhoc 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setprocessdefinitionid
        {
            get
            {
                return _Setprocessdefinitionid;
            }
            set
            {
                if (_Setprocessdefinitionid != value)
                {
                    _Setprocessdefinitionid = value;
                }
            }
        }
        private string _Setprocessdefinitionid;

        /// <summary>
        /// Sub Process Definition ID of Lot when Create Adhoc 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setsubprocessdefinitionid
        {
            get
            {
                return _Setsubprocessdefinitionid;
            }
            set
            {
                if (_Setsubprocessdefinitionid != value)
                {
                    _Setsubprocessdefinitionid = value;
                }
            }
        }
        private string _Setsubprocessdefinitionid;

        /// <summary>
        /// Process Segment ID of Lot when Create Adhoc 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setprocesssegmentid
        {
            get
            {
                return _Setprocesssegmentid;
            }
            set
            {
                if (_Setprocesssegmentid != value)
                {
                    _Setprocesssegmentid = value;
                }
            }
        }
        private string _Setprocesssegmentid;

        /// <summary>
        /// Start Process Definition ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Startprocessdefinitionid
        {
            get
            {
                return _Startprocessdefinitionid;
            }
            set
            {
                if (_Startprocessdefinitionid != value)
                {
                    _Startprocessdefinitionid = value;
                }
            }
        }
        private string _Startprocessdefinitionid;

        /// <summary>
        /// Start Sub Process Definition ID of Adhoc Process 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Startsubprocessdefinitionid
        {
            get
            {
                return _Startsubprocessdefinitionid;
            }
            set
            {
                if (_Startsubprocessdefinitionid != value)
                {
                    _Startsubprocessdefinitionid = value;
                }
            }
        }
        private string _Startsubprocessdefinitionid;

        /// <summary>
        /// Start Process Segment ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Startprocesssegmentid
        {
            get
            {
                return _Startprocesssegmentid;
            }
            set
            {
                if (_Startprocesssegmentid != value)
                {
                    _Startprocesssegmentid = value;
                }
            }
        }
        private string _Startprocesssegmentid;

        /// <summary>
        /// Finish Process Definition ID of Adhoc Process 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Finishprocessdefinitionid
        {
            get
            {
                return _Finishprocessdefinitionid;
            }
            set
            {
                if (_Finishprocessdefinitionid != value)
                {
                    _Finishprocessdefinitionid = value;
                }
            }
        }
        private string _Finishprocessdefinitionid;

        /// <summary>
        /// Finish Sub Process Definition ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Finishsubprocessdefinitionid
        {
            get
            {
                return _Finishsubprocessdefinitionid;
            }
            set
            {
                if (_Finishsubprocessdefinitionid != value)
                {
                    _Finishsubprocessdefinitionid = value;
                }
            }
        }
        private string _Finishsubprocessdefinitionid;

        /// <summary>
        /// Finish Process Segment ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Finishprocesssegmentid
        {
            get
            {
                return _Finishprocesssegmentid;
            }
            set
            {
                if (_Finishprocesssegmentid != value)
                {
                    _Finishprocesssegmentid = value;
                }
            }
        }
        private string _Finishprocesssegmentid;

        /// <summary>
        /// Return Process Definition ID of Adhoc Process 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Returnprocessdefinitionid
        {
            get
            {
                return _Returnprocessdefinitionid;
            }
            set
            {
                if (_Returnprocessdefinitionid != value)
                {
                    _Returnprocessdefinitionid = value;
                }
            }
        }
        private string _Returnprocessdefinitionid;

        /// <summary>
        /// Return Sub Process Definition ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Returnsubprocessdefinitionid
        {
            get
            {
                return _Returnsubprocessdefinitionid;
            }
            set
            {
                if (_Returnsubprocessdefinitionid != value)
                {
                    _Returnsubprocessdefinitionid = value;
                }
            }
        }
        private string _Returnsubprocessdefinitionid;

        /// <summary>
        /// Return Process Segment ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Returnprocesssegmentid
        {
            get
            {
                return _Returnprocesssegmentid;
            }
            set
            {
                if (_Returnprocesssegmentid != value)
                {
                    _Returnprocesssegmentid = value;
                }
            }
        }
        private string _Returnprocesssegmentid;

        /// <summary>
        /// Return Location of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Returnlocationid
        {
            get
            {
                return _Returnlocationid;
            }
            set
            {
                if (_Returnlocationid != value)
                {
                    _Returnlocationid = value;
                }
            }
        }
        private string _Returnlocationid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Lot의 adhoc process에 대한 정보 (Rework, 공정 삽입) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotadhocprocesshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotadhocprocesshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique SysID of AdHoc
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotadhocprocesssysid
        {
            get
            {
                return _Lotadhocprocesssysid;
            }
            set
            {
                if (_Lotadhocprocesssysid != value)
                {
                    _Lotadhocprocesssysid = value;
                }
            }
        }
        private string _Lotadhocprocesssysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Lot ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Depth of the same Adhoc of the Lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Adhocdepth
        {
            get
            {
                return _Adhocdepth;
            }
            set
            {
                if (_Adhocdepth != value)
                {
                    _Adhocdepth = value;
                }
            }
        }
        private int _Adhocdepth;

        /// <summary>
        /// Adhoc Process Type (Rework, SegmentInject)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Adhocprocesstype
        {
            get
            {
                return _Adhocprocesstype;
            }
            set
            {
                if (_Adhocprocesstype != value)
                {
                    _Adhocprocesstype = value;
                }
            }
        }
        private string _Adhocprocesstype;

        /// <summary>
        /// Adhoc Process Sysid of Lot when Create Adhoc (FOM_LOT.AdhocProcessSysID)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setlotadhocprocesssysid
        {
            get
            {
                return _Setlotadhocprocesssysid;
            }
            set
            {
                if (_Setlotadhocprocesssysid != value)
                {
                    _Setlotadhocprocesssysid = value;
                }
            }
        }
        private string _Setlotadhocprocesssysid;

        /// <summary>
        /// Process Definition ID of Lot when Create Adhoc 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setprocessdefinitionid
        {
            get
            {
                return _Setprocessdefinitionid;
            }
            set
            {
                if (_Setprocessdefinitionid != value)
                {
                    _Setprocessdefinitionid = value;
                }
            }
        }
        private string _Setprocessdefinitionid;

        /// <summary>
        /// Sub Process Definition ID of Lot when Create Adhoc 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setsubprocessdefinitionid
        {
            get
            {
                return _Setsubprocessdefinitionid;
            }
            set
            {
                if (_Setsubprocessdefinitionid != value)
                {
                    _Setsubprocessdefinitionid = value;
                }
            }
        }
        private string _Setsubprocessdefinitionid;

        /// <summary>
        /// Process Segment ID of Lot when Create Adhoc 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setprocesssegmentid
        {
            get
            {
                return _Setprocesssegmentid;
            }
            set
            {
                if (_Setprocesssegmentid != value)
                {
                    _Setprocesssegmentid = value;
                }
            }
        }
        private string _Setprocesssegmentid;

        /// <summary>
        /// Start Process Definition ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Startprocessdefinitionid
        {
            get
            {
                return _Startprocessdefinitionid;
            }
            set
            {
                if (_Startprocessdefinitionid != value)
                {
                    _Startprocessdefinitionid = value;
                }
            }
        }
        private string _Startprocessdefinitionid;

        /// <summary>
        /// Start Sub Process Definition ID of Adhoc Process 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Startsubprocessdefinitionid
        {
            get
            {
                return _Startsubprocessdefinitionid;
            }
            set
            {
                if (_Startsubprocessdefinitionid != value)
                {
                    _Startsubprocessdefinitionid = value;
                }
            }
        }
        private string _Startsubprocessdefinitionid;

        /// <summary>
        /// Start Process Segment ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Startprocesssegmentid
        {
            get
            {
                return _Startprocesssegmentid;
            }
            set
            {
                if (_Startprocesssegmentid != value)
                {
                    _Startprocesssegmentid = value;
                }
            }
        }
        private string _Startprocesssegmentid;

        /// <summary>
        /// Finish Process Definition ID of Adhoc Process 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Finishprocessdefinitionid
        {
            get
            {
                return _Finishprocessdefinitionid;
            }
            set
            {
                if (_Finishprocessdefinitionid != value)
                {
                    _Finishprocessdefinitionid = value;
                }
            }
        }
        private string _Finishprocessdefinitionid;

        /// <summary>
        /// Finish Sub Process Definition ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Finishsubprocessdefinitionid
        {
            get
            {
                return _Finishsubprocessdefinitionid;
            }
            set
            {
                if (_Finishsubprocessdefinitionid != value)
                {
                    _Finishsubprocessdefinitionid = value;
                }
            }
        }
        private string _Finishsubprocessdefinitionid;

        /// <summary>
        /// Finish Process Segment ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Finishprocesssegmentid
        {
            get
            {
                return _Finishprocesssegmentid;
            }
            set
            {
                if (_Finishprocesssegmentid != value)
                {
                    _Finishprocesssegmentid = value;
                }
            }
        }
        private string _Finishprocesssegmentid;

        /// <summary>
        /// Return Process Definition ID of Adhoc Process 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Returnprocessdefinitionid
        {
            get
            {
                return _Returnprocessdefinitionid;
            }
            set
            {
                if (_Returnprocessdefinitionid != value)
                {
                    _Returnprocessdefinitionid = value;
                }
            }
        }
        private string _Returnprocessdefinitionid;

        /// <summary>
        /// Return Sub Process Definition ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Returnsubprocessdefinitionid
        {
            get
            {
                return _Returnsubprocessdefinitionid;
            }
            set
            {
                if (_Returnsubprocessdefinitionid != value)
                {
                    _Returnsubprocessdefinitionid = value;
                }
            }
        }
        private string _Returnsubprocessdefinitionid;

        /// <summary>
        /// Return Process Segment ID of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Returnprocesssegmentid
        {
            get
            {
                return _Returnprocesssegmentid;
            }
            set
            {
                if (_Returnprocesssegmentid != value)
                {
                    _Returnprocesssegmentid = value;
                }
            }
        }
        private string _Returnprocesssegmentid;

        /// <summary>
        /// Return Location of Adhoc Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Returnlocationid
        {
            get
            {
                return _Returnlocationid;
            }
            set
            {
                if (_Returnlocationid != value)
                {
                    _Returnlocationid = value;
                }
            }
        }
        private string _Returnlocationid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 재고조정 요청
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotadjustrequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotadjustrequest : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// FACTORY-ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Record-SEQ
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Recordseq
        {
            get
            {
                return _Recordseq;
            }
            set
            {
                if (_Recordseq != value)
                {
                    _Recordseq = value;
                }
            }
        }
        private string _Recordseq;

        /// <summary>
        /// 재고LOT-ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// 품목번호(자재,반제품 등)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionid
        {
            get
            {
                return _Materialdefinitionid;
            }
            set
            {
                if (_Materialdefinitionid != value)
                {
                    _Materialdefinitionid = value;
                }
            }
        }
        private string _Materialdefinitionid;

        /// <summary>
        /// 요청일자
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Requesttime
        {
            get
            {
                return _Requesttime;
            }
            set
            {
                if (_Requesttime != value)
                {
                    _Requesttime = value;
                }
            }
        }
        private Nullable<DateTime> _Requesttime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public long Adjustorderseq
        {
            get
            {
                return _Adjustorderseq;
            }
            set
            {
                if (_Adjustorderseq != value)
                {
                    _Adjustorderseq = value;
                }
            }
        }
        private long _Adjustorderseq;

        /// <summary>
        /// 제품 자재 구분 (LOT, MATERIAL)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// 저장위치  
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// 조정전 전산재고수량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// 조정요청증감수량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Adjustdiffquantity
        {
            get
            {
                return _Adjustdiffquantity;
            }
            set
            {
                if (_Adjustdiffquantity != value)
                {
                    _Adjustdiffquantity = value;
                }
            }
        }
        private Nullable<decimal> _Adjustdiffquantity;

        /// <summary>
        /// 조정후재고수량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Adjustedquantity
        {
            get
            {
                return _Adjustedquantity;
            }
            set
            {
                if (_Adjustedquantity != value)
                {
                    _Adjustedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Adjustedquantity;

        /// <summary>
        /// 재고실사 스냅샷 수량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Snapshotquantity
        {
            get
            {
                return _Snapshotquantity;
            }
            set
            {
                if (_Snapshotquantity != value)
                {
                    _Snapshotquantity = value;
                }
            }
        }
        private Nullable<decimal> _Snapshotquantity;

        /// <summary>
        /// BOM재고 조정인지 여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2, DataSize=2, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Bomadjusttype
        {
            get
            {
                return _Bomadjusttype;
            }
            set
            {
                if (_Bomadjusttype != value)
                {
                    _Bomadjusttype = value;
                }
            }
        }
        private string _Bomadjusttype;

        /// <summary>
        /// BOM재고 조정 키
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Bomadjustkey
        {
            get
            {
                return _Bomadjustkey;
            }
            set
            {
                if (_Bomadjustkey != value)
                {
                    _Bomadjustkey = value;
                }
            }
        }
        private string _Bomadjustkey;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2, DataSize=2, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Bomadjustfromto
        {
            get
            {
                return _Bomadjustfromto;
            }
            set
            {
                if (_Bomadjustfromto != value)
                {
                    _Bomadjustfromto = value;
                }
            }
        }
        private string _Bomadjustfromto;

        /// <summary>
        /// 재고조정 전기일자
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Postdate
        {
            get
            {
                return _Postdate;
            }
            set
            {
                if (_Postdate != value)
                {
                    _Postdate = value;
                }
            }
        }
        private Nullable<DateTime> _Postdate;

        /// <summary>
        /// 결재 승인일자 (CENS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Approvaltime
        {
            get
            {
                return _Approvaltime;
            }
            set
            {
                if (_Approvaltime != value)
                {
                    _Approvaltime = value;
                }
            }
        }
        private Nullable<DateTime> _Approvaltime;

        /// <summary>
        /// 결재상태 코드 (샘플(미결재, 결재대기, 결재완료, 완료(강제))
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Approvalstate
        {
            get
            {
                return _Approvalstate;
            }
            set
            {
                if (_Approvalstate != value)
                {
                    _Approvalstate = value;
                }
            }
        }
        private string _Approvalstate;

        /// <summary>
        /// 확정상태 코드 (미확정, 확정)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Wait'")]
        [DataMemberAttribute()]
        public string Confirmstate
        {
            get
            {
                return _Confirmstate;
            }
            set
            {
                if (_Confirmstate != value)
                {
                    _Confirmstate = value;
                }
            }
        }
        private string _Confirmstate;

        /// <summary>
        /// 요청자
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requesterid
        {
            get
            {
                return _Requesterid;
            }
            set
            {
                if (_Requesterid != value)
                {
                    _Requesterid = value;
                }
            }
        }
        private string _Requesterid;

        /// <summary>
        /// 요청부서
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestdept
        {
            get
            {
                return _Requestdept;
            }
            set
            {
                if (_Requestdept != value)
                {
                    _Requestdept = value;
                }
            }
        }
        private string _Requestdept;

        /// <summary>
        /// 결재문서번호
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Documentno
        {
            get
            {
                return _Documentno;
            }
            set
            {
                if (_Documentno != value)
                {
                    _Documentno = value;
                }
            }
        }
        private string _Documentno;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Palletid
        {
            get
            {
                return _Palletid;
            }
            set
            {
                if (_Palletid != value)
                {
                    _Palletid = value;
                }
            }
        }
        private string _Palletid;

        /// <summary>
        /// 세부사유코드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailreasoncode
        {
            get
            {
                return _Detailreasoncode;
            }
            set
            {
                if (_Detailreasoncode != value)
                {
                    _Detailreasoncode = value;
                }
            }
        }
        private string _Detailreasoncode;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 조정사유코드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Lot의 carrier assign 현황// * 일단 사용 금지
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotcarrierrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotcarrierrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Carrier id. (ref. FOM_CARRIER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// Position of the slot that is in the carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public int Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    _Position = value;
                }
            }
        }
        private int _Position;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product ID (i.e. GLASS | WAFER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productid
        {
            get
            {
                return _Productid;
            }
            set
            {
                if (_Productid != value)
                {
                    _Productid = value;
                }
            }
        }
        private string _Productid;

        /// <summary>
        /// Qty of lot id to be assigned to carrier id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Assignquantity
        {
            get
            {
                return _Assignquantity;
            }
            set
            {
                if (_Assignquantity != value)
                {
                    _Assignquantity = value;
                }
            }
        }
        private Nullable<decimal> _Assignquantity;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Lot의 carrier assign 현황// * 일단 사용 금지 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotcarrierrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotcarrierrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Carrier id. (ref. FOM_CARRIER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// Position of the slot that is in the carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    _Position = value;
                }
            }
        }
        private int _Position;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product ID (i.e. GLASS | WAFER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productid
        {
            get
            {
                return _Productid;
            }
            set
            {
                if (_Productid != value)
                {
                    _Productid = value;
                }
            }
        }
        private string _Productid;

        /// <summary>
        /// Qty of lot id to be assigned to carrier id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Assignquantity
        {
            get
            {
                return _Assignquantity;
            }
            set
            {
                if (_Assignquantity != value)
                {
                    _Assignquantity = value;
                }
            }
        }
        private Nullable<decimal> _Assignquantity;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 재고실사 시 SAP에서 수불 통제 신호를 수신
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotcheckcontrol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotcheckcontrol : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// FACTORY-ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 실사기준일
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public DateTime Checkdate
        {
            get
            {
                return _Checkdate;
            }
            set
            {
                if (_Checkdate != value)
                {
                    _Checkdate = value;
                }
            }
        }
        private DateTime _Checkdate;

        /// <summary>
        /// 실사시작일시
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Checkstarttime
        {
            get
            {
                return _Checkstarttime;
            }
            set
            {
                if (_Checkstarttime != value)
                {
                    _Checkstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Checkstarttime;

        /// <summary>
        /// 실사시작종료일시
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Checkendtime
        {
            get
            {
                return _Checkendtime;
            }
            set
            {
                if (_Checkendtime != value)
                {
                    _Checkendtime = value;
                }
            }
        }
        private Nullable<DateTime> _Checkendtime;

        /// <summary>
        /// 진행여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2, DataSize=2, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Checkstatus
        {
            get
            {
                return _Checkstatus;
            }
            set
            {
                if (_Checkstatus != value)
                {
                    _Checkstatus = value;
                }
            }
        }
        private string _Checkstatus;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 재고실사 시 SAP에서 수불 통제 신호를 수신 HISTORY
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotcheckcontrolhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotcheckcontrolhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// FACTORY-ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 실사기준일
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public DateTime Checkdate
        {
            get
            {
                return _Checkdate;
            }
            set
            {
                if (_Checkdate != value)
                {
                    _Checkdate = value;
                }
            }
        }
        private DateTime _Checkdate;

        /// <summary>
        /// 실사시작일시
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Checkstarttime
        {
            get
            {
                return _Checkstarttime;
            }
            set
            {
                if (_Checkstarttime != value)
                {
                    _Checkstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Checkstarttime;

        /// <summary>
        /// 실사시작종료일시
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Checkendtime
        {
            get
            {
                return _Checkendtime;
            }
            set
            {
                if (_Checkendtime != value)
                {
                    _Checkendtime = value;
                }
            }
        }
        private Nullable<DateTime> _Checkendtime;

        /// <summary>
        /// 진행여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2, DataSize=2, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Checkstatus
        {
            get
            {
                return _Checkstatus;
            }
            set
            {
                if (_Checkstatus != value)
                {
                    _Checkstatus = value;
                }
            }
        }
        private string _Checkstatus;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 재고실사 스냅샷
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotchecksnapshot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotchecksnapshot : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// FACTORY-ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 실사스냅샷일자
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public DateTime Snapshottime
        {
            get
            {
                return _Snapshottime;
            }
            set
            {
                if (_Snapshottime != value)
                {
                    _Snapshottime = value;
                }
            }
        }
        private DateTime _Snapshottime;

        /// <summary>
        /// 재고LOT-ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// 품목번호(자재,반제품 등)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionid
        {
            get
            {
                return _Materialdefinitionid;
            }
            set
            {
                if (_Materialdefinitionid != value)
                {
                    _Materialdefinitionid = value;
                }
            }
        }
        private string _Materialdefinitionid;

        /// <summary>
        /// 저장위치  
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// 조정전 전산재고수량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// 실사종료여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2, DataSize=2, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotcheckendflag
        {
            get
            {
                return _Lotcheckendflag;
            }
            set
            {
                if (_Lotcheckendflag != value)
                {
                    _Lotcheckendflag = value;
                }
            }
        }
        private string _Lotcheckendflag;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 조정사유코드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Lot에 걸려 있는 future action 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotfutureaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotfutureaction : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for lot future action system id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Lotfutureactionsysid
        {
            get
            {
                return _Lotfutureactionsysid;
            }
            set
            {
                if (_Lotfutureactionsysid != value)
                {
                    _Lotfutureactionsysid = value;
                }
            }
        }
        private string _Lotfutureactionsysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// It is used when lot id will be splitted. It is not created before the future action is performed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Childlotid
        {
            get
            {
                return _Childlotid;
            }
            set
            {
                if (_Childlotid != value)
                {
                    _Childlotid = value;
                }
            }
        }
        private string _Childlotid;

        /// <summary>
        /// It is used when lot id will be splitted. It is the qty of child lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Childlotcurrentqty
        {
            get
            {
                return _Childlotcurrentqty;
            }
            set
            {
                if (_Childlotcurrentqty != value)
                {
                    _Childlotcurrentqty = value;
                }
            }
        }
        private Nullable<decimal> _Childlotcurrentqty;

        /// <summary>
        /// Type of future action. ex) Reposition, Hold, Split, Merge
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actiontype
        {
            get
            {
                return _Actiontype;
            }
            set
            {
                if (_Actiontype != value)
                {
                    _Actiontype = value;
                }
            }
        }
        private string _Actiontype;

        /// <summary>
        /// Current product definition id of lot id when the future action is registered.  (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setproductdefinitionid
        {
            get
            {
                return _Setproductdefinitionid;
            }
            set
            {
                if (_Setproductdefinitionid != value)
                {
                    _Setproductdefinitionid = value;
                }
            }
        }
        private string _Setproductdefinitionid;

        /// <summary>
        /// Current process definition id of lot id when the future action is registered. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setprocessdefinitionid
        {
            get
            {
                return _Setprocessdefinitionid;
            }
            set
            {
                if (_Setprocessdefinitionid != value)
                {
                    _Setprocessdefinitionid = value;
                }
            }
        }
        private string _Setprocessdefinitionid;

        /// <summary>
        /// Current process segment id of lot id when the future action is registered. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setprocesssegmentid
        {
            get
            {
                return _Setprocesssegmentid;
            }
            set
            {
                if (_Setprocesssegmentid != value)
                {
                    _Setprocesssegmentid = value;
                }
            }
        }
        private string _Setprocesssegmentid;

        /// <summary>
        /// Current sub process definition id of lot id when the future action is registered. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setsubprocessdefinitionid
        {
            get
            {
                return _Setsubprocessdefinitionid;
            }
            set
            {
                if (_Setsubprocessdefinitionid != value)
                {
                    _Setsubprocessdefinitionid = value;
                }
            }
        }
        private string _Setsubprocessdefinitionid;

        /// <summary>
        /// Code for Operation or Process Performed by the Reason code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionreasoncode
        {
            get
            {
                return _Actionreasoncode;
            }
            set
            {
                if (_Actionreasoncode != value)
                {
                    _Actionreasoncode = value;
                }
            }
        }
        private string _Actionreasoncode;

        /// <summary>
        /// A Series of Steps or Actions for a Mobile to a Particular Process, or any Rule for a given Lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionactivityoverride
        {
            get
            {
                return _Actionactivityoverride;
            }
            set
            {
                if (_Actionactivityoverride != value)
                {
                    _Actionactivityoverride = value;
                }
            }
        }
        private string _Actionactivityoverride;

        /// <summary>
        /// A series of steps where the Lot is in progress Moving to step
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actioncomments
        {
            get
            {
                return _Actioncomments;
            }
            set
            {
                if (_Actioncomments != value)
                {
                    _Actioncomments = value;
                }
            }
        }
        private string _Actioncomments;

        /// <summary>
        /// Action Description
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actiondescription
        {
            get
            {
                return _Actiondescription;
            }
            set
            {
                if (_Actiondescription != value)
                {
                    _Actiondescription = value;
                }
            }
        }
        private string _Actiondescription;

        /// <summary>
        /// The product definition id of lot id when the future action will be performed. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionproductdefinitionid
        {
            get
            {
                return _Actionproductdefinitionid;
            }
            set
            {
                if (_Actionproductdefinitionid != value)
                {
                    _Actionproductdefinitionid = value;
                }
            }
        }
        private string _Actionproductdefinitionid;

        /// <summary>
        /// The process definition id of lot id when the future action will be performed. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionprocessdefinitionid
        {
            get
            {
                return _Actionprocessdefinitionid;
            }
            set
            {
                if (_Actionprocessdefinitionid != value)
                {
                    _Actionprocessdefinitionid = value;
                }
            }
        }
        private string _Actionprocessdefinitionid;

        /// <summary>
        /// The process segment id of lot id when the future action will be performed. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionprocesssegmentid
        {
            get
            {
                return _Actionprocesssegmentid;
            }
            set
            {
                if (_Actionprocesssegmentid != value)
                {
                    _Actionprocesssegmentid = value;
                }
            }
        }
        private string _Actionprocesssegmentid;

        /// <summary>
        /// The sub process definition id of lot id when the future action will be performed. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionsubprocessdefinitionid
        {
            get
            {
                return _Actionsubprocessdefinitionid;
            }
            set
            {
                if (_Actionsubprocessdefinitionid != value)
                {
                    _Actionsubprocessdefinitionid = value;
                }
            }
        }
        private string _Actionsubprocessdefinitionid;

        /// <summary>
        /// It is used when the type of future action is "Reposition". (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destproductdefinitionid
        {
            get
            {
                return _Destproductdefinitionid;
            }
            set
            {
                if (_Destproductdefinitionid != value)
                {
                    _Destproductdefinitionid = value;
                }
            }
        }
        private string _Destproductdefinitionid;

        /// <summary>
        /// It is used when the type of future action is "Reposition". (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destprocessdefinitionid
        {
            get
            {
                return _Destprocessdefinitionid;
            }
            set
            {
                if (_Destprocessdefinitionid != value)
                {
                    _Destprocessdefinitionid = value;
                }
            }
        }
        private string _Destprocessdefinitionid;

        /// <summary>
        /// It is used when the type of future action is "Reposition". (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destprocesssegmentid
        {
            get
            {
                return _Destprocesssegmentid;
            }
            set
            {
                if (_Destprocesssegmentid != value)
                {
                    _Destprocesssegmentid = value;
                }
            }
        }
        private string _Destprocesssegmentid;

        /// <summary>
        /// It is used when the type of future action is "Reposition". (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destsubprocessdefinitionid
        {
            get
            {
                return _Destsubprocessdefinitionid;
            }
            set
            {
                if (_Destsubprocessdefinitionid != value)
                {
                    _Destsubprocessdefinitionid = value;
                }
            }
        }
        private string _Destsubprocessdefinitionid;

        /// <summary>
        /// The flag to determine whether or not to be deleted after future action is performed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isdeletefutureaction
        {
            get
            {
                return _Isdeletefutureaction;
            }
            set
            {
                if (_Isdeletefutureaction != value)
                {
                    _Isdeletefutureaction = value;
                }
            }
        }
        private string _Isdeletefutureaction;

        /// <summary>
        /// The flag to determine that the future action is happened before Track-In or after Track-Out.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isprocesssegmentstart
        {
            get
            {
                return _Isprocesssegmentstart;
            }
            set
            {
                if (_Isprocesssegmentstart != value)
                {
                    _Isprocesssegmentstart = value;
                }
            }
        }
        private string _Isprocesssegmentstart;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Lot에 걸려 있는 future action 정보 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotfutureactionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotfutureactionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for lot future action system id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotfutureactionsysid
        {
            get
            {
                return _Lotfutureactionsysid;
            }
            set
            {
                if (_Lotfutureactionsysid != value)
                {
                    _Lotfutureactionsysid = value;
                }
            }
        }
        private string _Lotfutureactionsysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// It is used when lot id will be splitted. It is not created before the future action is performed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Childlotid
        {
            get
            {
                return _Childlotid;
            }
            set
            {
                if (_Childlotid != value)
                {
                    _Childlotid = value;
                }
            }
        }
        private string _Childlotid;

        /// <summary>
        /// It is used when lot id will be splitted. It is the qty of child lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Childlotcurrentqty
        {
            get
            {
                return _Childlotcurrentqty;
            }
            set
            {
                if (_Childlotcurrentqty != value)
                {
                    _Childlotcurrentqty = value;
                }
            }
        }
        private Nullable<decimal> _Childlotcurrentqty;

        /// <summary>
        /// Type of future action. ex) Reposition, Hold, Split, Merge
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actiontype
        {
            get
            {
                return _Actiontype;
            }
            set
            {
                if (_Actiontype != value)
                {
                    _Actiontype = value;
                }
            }
        }
        private string _Actiontype;

        /// <summary>
        /// Current product definition id of lot id when the future action is registered.  (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setproductdefinitionid
        {
            get
            {
                return _Setproductdefinitionid;
            }
            set
            {
                if (_Setproductdefinitionid != value)
                {
                    _Setproductdefinitionid = value;
                }
            }
        }
        private string _Setproductdefinitionid;

        /// <summary>
        /// Current process definition id of lot id when the future action is registered. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setprocessdefinitionid
        {
            get
            {
                return _Setprocessdefinitionid;
            }
            set
            {
                if (_Setprocessdefinitionid != value)
                {
                    _Setprocessdefinitionid = value;
                }
            }
        }
        private string _Setprocessdefinitionid;

        /// <summary>
        /// Current process segment id of lot id when the future action is registered. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setprocesssegmentid
        {
            get
            {
                return _Setprocesssegmentid;
            }
            set
            {
                if (_Setprocesssegmentid != value)
                {
                    _Setprocesssegmentid = value;
                }
            }
        }
        private string _Setprocesssegmentid;

        /// <summary>
        /// Current sub process definition id of lot id when the future action is registered. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setsubprocessdefinitionid
        {
            get
            {
                return _Setsubprocessdefinitionid;
            }
            set
            {
                if (_Setsubprocessdefinitionid != value)
                {
                    _Setsubprocessdefinitionid = value;
                }
            }
        }
        private string _Setsubprocessdefinitionid;

        /// <summary>
        /// Code for Operation or Process Performed by the Reason code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionreasoncode
        {
            get
            {
                return _Actionreasoncode;
            }
            set
            {
                if (_Actionreasoncode != value)
                {
                    _Actionreasoncode = value;
                }
            }
        }
        private string _Actionreasoncode;

        /// <summary>
        /// A Series of Steps or Actions for a Mobile to a Particular Process, or any Rule for a given Lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionactivityoverride
        {
            get
            {
                return _Actionactivityoverride;
            }
            set
            {
                if (_Actionactivityoverride != value)
                {
                    _Actionactivityoverride = value;
                }
            }
        }
        private string _Actionactivityoverride;

        /// <summary>
        /// A series of steps where the Lot is in progress Moving to step
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actioncomments
        {
            get
            {
                return _Actioncomments;
            }
            set
            {
                if (_Actioncomments != value)
                {
                    _Actioncomments = value;
                }
            }
        }
        private string _Actioncomments;

        /// <summary>
        /// Action Description
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actiondescription
        {
            get
            {
                return _Actiondescription;
            }
            set
            {
                if (_Actiondescription != value)
                {
                    _Actiondescription = value;
                }
            }
        }
        private string _Actiondescription;

        /// <summary>
        /// The product definition id of lot id when the future action will be performed. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionproductdefinitionid
        {
            get
            {
                return _Actionproductdefinitionid;
            }
            set
            {
                if (_Actionproductdefinitionid != value)
                {
                    _Actionproductdefinitionid = value;
                }
            }
        }
        private string _Actionproductdefinitionid;

        /// <summary>
        /// The process definition id of lot id when the future action will be performed. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionprocessdefinitionid
        {
            get
            {
                return _Actionprocessdefinitionid;
            }
            set
            {
                if (_Actionprocessdefinitionid != value)
                {
                    _Actionprocessdefinitionid = value;
                }
            }
        }
        private string _Actionprocessdefinitionid;

        /// <summary>
        /// The process segment id of lot id when the future action will be performed. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionprocesssegmentid
        {
            get
            {
                return _Actionprocesssegmentid;
            }
            set
            {
                if (_Actionprocesssegmentid != value)
                {
                    _Actionprocesssegmentid = value;
                }
            }
        }
        private string _Actionprocesssegmentid;

        /// <summary>
        /// The sub process definition id of lot id when the future action will be performed. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actionsubprocessdefinitionid
        {
            get
            {
                return _Actionsubprocessdefinitionid;
            }
            set
            {
                if (_Actionsubprocessdefinitionid != value)
                {
                    _Actionsubprocessdefinitionid = value;
                }
            }
        }
        private string _Actionsubprocessdefinitionid;

        /// <summary>
        /// It is used when the type of future action is "Reposition". (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destproductdefinitionid
        {
            get
            {
                return _Destproductdefinitionid;
            }
            set
            {
                if (_Destproductdefinitionid != value)
                {
                    _Destproductdefinitionid = value;
                }
            }
        }
        private string _Destproductdefinitionid;

        /// <summary>
        /// It is used when the type of future action is "Reposition". (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destprocessdefinitionid
        {
            get
            {
                return _Destprocessdefinitionid;
            }
            set
            {
                if (_Destprocessdefinitionid != value)
                {
                    _Destprocessdefinitionid = value;
                }
            }
        }
        private string _Destprocessdefinitionid;

        /// <summary>
        /// It is used when the type of future action is "Reposition". (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destprocesssegmentid
        {
            get
            {
                return _Destprocesssegmentid;
            }
            set
            {
                if (_Destprocesssegmentid != value)
                {
                    _Destprocesssegmentid = value;
                }
            }
        }
        private string _Destprocesssegmentid;

        /// <summary>
        /// It is used when the type of future action is "Reposition". (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destsubprocessdefinitionid
        {
            get
            {
                return _Destsubprocessdefinitionid;
            }
            set
            {
                if (_Destsubprocessdefinitionid != value)
                {
                    _Destsubprocessdefinitionid = value;
                }
            }
        }
        private string _Destsubprocessdefinitionid;

        /// <summary>
        /// The flag to determine whether or not to be deleted after future action is performed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isdeletefutureaction
        {
            get
            {
                return _Isdeletefutureaction;
            }
            set
            {
                if (_Isdeletefutureaction != value)
                {
                    _Isdeletefutureaction = value;
                }
            }
        }
        private string _Isdeletefutureaction;

        /// <summary>
        /// The flag to determine that the future action is happened before Track-In or after Track-Out.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isprocesssegmentstart
        {
            get
            {
                return _Isprocesssegmentstart;
            }
            set
            {
                if (_Isprocesssegmentstart != value)
                {
                    _Isprocesssegmentstart = value;
                }
            }
        }
        private string _Isprocesssegmentstart;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Current Lot Information 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lothist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lothist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Lot name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotname
        {
            get
            {
                return _Lotname;
            }
            set
            {
                if (_Lotname != value)
                {
                    _Lotname = value;
                }
            }
        }
        private string _Lotname;

        /// <summary>
        /// Type of lot. ex) PP | SS, Prodution | Engineer | Develop | NonProduction 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productiontype
        {
            get
            {
                return _Productiontype;
            }
            set
            {
                if (_Productiontype != value)
                {
                    _Productiontype = value;
                }
            }
        }
        private string _Productiontype;

        /// <summary>
        /// Detail Type of lot. ex) Sample | SourceMonitor | Dummy
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailproductiontype
        {
            get
            {
                return _Detailproductiontype;
            }
            set
            {
                if (_Detailproductiontype != value)
                {
                    _Detailproductiontype = value;
                }
            }
        }
        private string _Detailproductiontype;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Product class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productclassid
        {
            get
            {
                return _Productclassid;
            }
            set
            {
                if (_Productclassid != value)
                {
                    _Productclassid = value;
                }
            }
        }
        private string _Productclassid;

        /// <summary>
        /// Process definition id. (ref. FOM_PROCESSDEFINITION) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Sub process definition id. If sub process definition id does not exist, this is filled with top process definition id.(ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subprocessdefinitionid
        {
            get
            {
                return _Subprocessdefinitionid;
            }
            set
            {
                if (_Subprocessdefinitionid != value)
                {
                    _Subprocessdefinitionid = value;
                }
            }
        }
        private string _Subprocessdefinitionid;

        /// <summary>
        /// Process node id. (ref. FOM_PROCESSNODE) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Current equipment id that the lot id is being worked. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Recipe of current Equipment processing
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeid
        {
            get
            {
                return _Recipeid;
            }
            set
            {
                if (_Recipeid != value)
                {
                    _Recipeid = value;
                }
            }
        }
        private string _Recipeid;

        /// <summary>
        /// Port of the production Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Portid
        {
            get
            {
                return _Portid;
            }
            set
            {
                if (_Portid != value)
                {
                    _Portid = value;
                }
            }
        }
        private string _Portid;

        /// <summary>
        /// Current location of lot id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Lot Process Group ID i.e. Batch or Box etc..
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processgroupid
        {
            get
            {
                return _Processgroupid;
            }
            set
            {
                if (_Processgroupid != value)
                {
                    _Processgroupid = value;
                }
            }
        }
        private string _Processgroupid;

        /// <summary>
        /// Original quantity of lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Startproductquantity
        {
            get
            {
                return _Startproductquantity;
            }
            set
            {
                if (_Startproductquantity != value)
                {
                    _Startproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Startproductquantity;

        /// <summary>
        /// Original quantity of lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Startsubproductquantity
        {
            get
            {
                return _Startsubproductquantity;
            }
            set
            {
                if (_Startsubproductquantity != value)
                {
                    _Startsubproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Startsubproductquantity;

        /// <summary>
        /// Material Type (ex. Glass, Wafer)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Producttype
        {
            get
            {
                return _Producttype;
            }
            set
            {
                if (_Producttype != value)
                {
                    _Producttype = value;
                }
            }
        }
        private string _Producttype;

        /// <summary>
        /// False Material Type (ex. Quadrant, Cell)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subproducttype
        {
            get
            {
                return _Subproducttype;
            }
            set
            {
                if (_Subproducttype != value)
                {
                    _Subproducttype = value;
                }
            }
        }
        private string _Subproducttype;

        /// <summary>
        /// Current quantity of lot
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Productquantity
        {
            get
            {
                return _Productquantity;
            }
            set
            {
                if (_Productquantity != value)
                {
                    _Productquantity = value;
                }
            }
        }
        private Nullable<decimal> _Productquantity;

        /// <summary>
        /// Current quantity of subproduct
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Subproductquantity
        {
            get
            {
                return _Subproductquantity;
            }
            set
            {
                if (_Subproductquantity != value)
                {
                    _Subproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Subproductquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Defectquantity
        {
            get
            {
                return _Defectquantity;
            }
            set
            {
                if (_Defectquantity != value)
                {
                    _Defectquantity = value;
                }
            }
        }
        private Nullable<decimal> _Defectquantity;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// The datetime that the lot will be started, scheduling system or planner may  set
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Planstarttime
        {
            get
            {
                return _Planstarttime;
            }
            set
            {
                if (_Planstarttime != value)
                {
                    _Planstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Planstarttime;

        /// <summary>
        /// The date that the lot id will be manufactured completely. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Duedate
        {
            get
            {
                return _Duedate;
            }
            set
            {
                if (_Duedate != value)
                {
                    _Duedate = value;
                }
            }
        }
        private Nullable<DateTime> _Duedate;

        /// <summary>
        /// The datetime that the lot be started
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// The time that the lot state is finished.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Finishtime
        {
            get
            {
                return _Finishtime;
            }
            set
            {
                if (_Finishtime != value)
                {
                    _Finishtime = value;
                }
            }
        }
        private Nullable<DateTime> _Finishtime;

        /// <summary>
        /// The time that the lot state is shipped.  
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Shiptime
        {
            get
            {
                return _Shiptime;
            }
            set
            {
                if (_Shiptime != value)
                {
                    _Shiptime = value;
                }
            }
        }
        private Nullable<DateTime> _Shiptime;

        /// <summary>
        /// The priority of lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// Production order id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productionorderid
        {
            get
            {
                return _Productionorderid;
            }
            set
            {
                if (_Productionorderid != value)
                {
                    _Productionorderid = value;
                }
            }
        }
        private string _Productionorderid;

        /// <summary>
        /// Work order id. (ref. FOM_WORKORDER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// Vendor id. (ref. FOM_VENDOR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// Source LotID that material was taken from to start this lot.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Sourcelotid
        {
            get
            {
                return _Sourcelotid;
            }
            set
            {
                if (_Sourcelotid != value)
                {
                    _Sourcelotid = value;
                }
            }
        }
        private string _Sourcelotid;

        /// <summary>
        /// Root lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Rootlotid
        {
            get
            {
                return _Rootlotid;
            }
            set
            {
                if (_Rootlotid != value)
                {
                    _Rootlotid = value;
                }
            }
        }
        private string _Rootlotid;

        /// <summary>
        /// Parent lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentlotid
        {
            get
            {
                return _Parentlotid;
            }
            set
            {
                if (_Parentlotid != value)
                {
                    _Parentlotid = value;
                }
            }
        }
        private string _Parentlotid;

        /// <summary>
        /// Lot Comments. 삭제하거나 변경하기전까지는 변경없는 lot comment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotcomment
        {
            get
            {
                return _Lotcomment;
            }
            set
            {
                if (_Lotcomment != value)
                {
                    _Lotcomment = value;
                }
            }
        }
        private string _Lotcomment;

        /// <summary>
        /// Current state of lot id. ex) Created, Active, Terminated, Scrapped, Finished, Shipped 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Current processing state of lot id. ex) WaitForRule, ProcessingRule, WaitForSegment 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processstate
        {
            get
            {
                return _Processstate;
            }
            set
            {
                if (_Processstate != value)
                {
                    _Processstate = value;
                }
            }
        }
        private string _Processstate;

        /// <summary>
        /// HoldState
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// Rework State
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reworkstate
        {
            get
            {
                return _Reworkstate;
            }
            set
            {
                if (_Reworkstate != value)
                {
                    _Reworkstate = value;
                }
            }
        }
        private string _Reworkstate;

        /// <summary>
        /// Process of Rework Type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reworktype
        {
            get
            {
                return _Reworktype;
            }
            set
            {
                if (_Reworktype != value)
                {
                    _Reworktype = value;
                }
            }
        }
        private string _Reworktype;

        /// <summary>
        /// Rework count 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Reworkcount
        {
            get
            {
                return _Reworkcount;
            }
            set
            {
                if (_Reworkcount != value)
                {
                    _Reworkcount = value;
                }
            }
        }
        private Nullable<int> _Reworkcount;

        /// <summary>
        /// Repeat count.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Repeatcount
        {
            get
            {
                return _Repeatcount;
            }
            set
            {
                if (_Repeatcount != value)
                {
                    _Repeatcount = value;
                }
            }
        }
        private Nullable<int> _Repeatcount;

        /// <summary>
        /// It is used when lot id does the reposition, rework. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Nextsubprocessdefinitionid
        {
            get
            {
                return _Nextsubprocessdefinitionid;
            }
            set
            {
                if (_Nextsubprocessdefinitionid != value)
                {
                    _Nextsubprocessdefinitionid = value;
                }
            }
        }
        private string _Nextsubprocessdefinitionid;

        /// <summary>
        /// It is used when lot id does the reposition, rework. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Nextprocesssegmentid
        {
            get
            {
                return _Nextprocesssegmentid;
            }
            set
            {
                if (_Nextprocesssegmentid != value)
                {
                    _Nextprocesssegmentid = value;
                }
            }
        }
        private string _Nextprocesssegmentid;

        /// <summary>
        /// The flag to determine whether or not the component(SubProduct) of this lot has been identified. Y | N or I | U - SubProduct has its own ProdictID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Identified
        {
            get
            {
                return _Identified;
            }
            set
            {
                if (_Identified != value)
                {
                    _Identified = value;
                }
            }
        }
        private string _Identified;

        /// <summary>
        /// The time that lot id comes into the one segment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Trackintime
        {
            get
            {
                return _Trackintime;
            }
            set
            {
                if (_Trackintime != value)
                {
                    _Trackintime = value;
                }
            }
        }
        private Nullable<DateTime> _Trackintime;

        /// <summary>
        /// The time that lot id comes out of the one segment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Trackouttime
        {
            get
            {
                return _Trackouttime;
            }
            set
            {
                if (_Trackouttime != value)
                {
                    _Trackouttime = value;
                }
            }
        }
        private Nullable<DateTime> _Trackouttime;

        /// <summary>
        /// Track In Event user
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Trackinuser
        {
            get
            {
                return _Trackinuser;
            }
            set
            {
                if (_Trackinuser != value)
                {
                    _Trackinuser = value;
                }
            }
        }
        private string _Trackinuser;

        /// <summary>
        /// Event user
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Trackoutuser
        {
            get
            {
                return _Trackoutuser;
            }
            set
            {
                if (_Trackoutuser != value)
                {
                    _Trackoutuser = value;
                }
            }
        }
        private string _Trackoutuser;

        /// <summary>
        /// The time that lot id comes into the one equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Processstarttime
        {
            get
            {
                return _Processstarttime;
            }
            set
            {
                if (_Processstarttime != value)
                {
                    _Processstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Processstarttime;

        /// <summary>
        /// The time that lot id comes out of the one equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Processendtime
        {
            get
            {
                return _Processendtime;
            }
            set
            {
                if (_Processendtime != value)
                {
                    _Processendtime = value;
                }
            }
        }
        private Nullable<DateTime> _Processendtime;

        /// <summary>
        /// The rule id that is included in the process segment id. (ref. FOM_PROCESSSEGMENTRULE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleid
        {
            get
            {
                return _Processsegmentruleid;
            }
            set
            {
                if (_Processsegmentruleid != value)
                {
                    _Processsegmentruleid = value;
                }
            }
        }
        private string _Processsegmentruleid;

        /// <summary>
        /// The sequence of rule id that is the sequence called. (ref. FOM_PROCESSSEGMENTRULECLASSREL)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Rulesequence
        {
            get
            {
                return _Rulesequence;
            }
            set
            {
                if (_Rulesequence != value)
                {
                    _Rulesequence = value;
                }
            }
        }
        private Nullable<int> _Rulesequence;

        /// <summary>
        /// carrier ID that lot contains for moving.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carriername
        {
            get
            {
                return _Carriername;
            }
            set
            {
                if (_Carriername != value)
                {
                    _Carriername = value;
                }
            }
        }
        private string _Carriername;

        /// <summary>
        /// The flag to determine whether or not to be a reserved future action.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isreservedfutureaction
        {
            get
            {
                return _Isreservedfutureaction;
            }
            set
            {
                if (_Isreservedfutureaction != value)
                {
                    _Isreservedfutureaction = value;
                }
            }
        }
        private string _Isreservedfutureaction;

        /// <summary>
        /// Customer id. (ref. FOM_CUSTOMER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Customerid
        {
            get
            {
                return _Customerid;
            }
            set
            {
                if (_Customerid != value)
                {
                    _Customerid = value;
                }
            }
        }
        private string _Customerid;

        /// <summary>
        /// The parent lot id that this lot id is merged. this state of lot id is "Terminated".
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mergelotid
        {
            get
            {
                return _Mergelotid;
            }
            set
            {
                if (_Mergelotid != value)
                {
                    _Mergelotid = value;
                }
            }
        }
        private string _Mergelotid;

        /// <summary>
        /// Receive time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receivedtime
        {
            get
            {
                return _Receivedtime;
            }
            set
            {
                if (_Receivedtime != value)
                {
                    _Receivedtime = value;
                }
            }
        }
        private Nullable<DateTime> _Receivedtime;

        /// <summary>
        /// Transfer equipment receiving the such product or materials according to the logistics movement  or process operation
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservedequipmentid
        {
            get
            {
                return _Reservedequipmentid;
            }
            set
            {
                if (_Reservedequipmentid != value)
                {
                    _Reservedequipmentid = value;
                }
            }
        }
        private string _Reservedequipmentid;

        /// <summary>
        /// Processing entry time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Reservedtime
        {
            get
            {
                return _Reservedtime;
            }
            set
            {
                if (_Reservedtime != value)
                {
                    _Reservedtime = value;
                }
            }
        }
        private Nullable<DateTime> _Reservedtime;

        /// <summary>
        /// Top Process Definition ID (No Changed on Adhoc Process)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mainprocessdefinitionid
        {
            get
            {
                return _Mainprocessdefinitionid;
            }
            set
            {
                if (_Mainprocessdefinitionid != value)
                {
                    _Mainprocessdefinitionid = value;
                }
            }
        }
        private string _Mainprocessdefinitionid;

        /// <summary>
        /// Adhoc Process Sys ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Adhocprocesssysid
        {
            get
            {
                return _Adhocprocesssysid;
            }
            set
            {
                if (_Adhocprocesssysid != value)
                {
                    _Adhocprocesssysid = value;
                }
            }
        }
        private string _Adhocprocesssysid;

        /// <summary>
        /// When Split and Merge, child lot id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Childlotid
        {
            get
            {
                return _Childlotid;
            }
            set
            {
                if (_Childlotid != value)
                {
                    _Childlotid = value;
                }
            }
        }
        private string _Childlotid;

        /// <summary>
        /// 생산 완료 후 완제품 창고로의 이동 또는 다음 공정 자재 사용됨의 구분  
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Outputproducttype
        {
            get
            {
                return _Outputproducttype;
            }
            set
            {
                if (_Outputproducttype != value)
                {
                    _Outputproducttype = value;
                }
            }
        }
        private string _Outputproducttype;

        /// <summary>
        /// 공정 진행 중 Comments.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Stepcomment
        {
            get
            {
                return _Stepcomment;
            }
            set
            {
                if (_Stepcomment != value)
                {
                    _Stepcomment = value;
                }
            }
        }
        private string _Stepcomment;

        /// <summary>
        /// Previous factory id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevfactoryid
        {
            get
            {
                return _Prevfactoryid;
            }
            set
            {
                if (_Prevfactoryid != value)
                {
                    _Prevfactoryid = value;
                }
            }
        }
        private string _Prevfactoryid;

        /// <summary>
        /// Type of lot. ex) PP | SS, Prodution | Engineer | Develop | NonProduction 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevproductiontype
        {
            get
            {
                return _Prevproductiontype;
            }
            set
            {
                if (_Prevproductiontype != value)
                {
                    _Prevproductiontype = value;
                }
            }
        }
        private string _Prevproductiontype;

        /// <summary>
        /// Previous state of lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Previous Product Type (ex. Glass, Wafer)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevproducttype
        {
            get
            {
                return _Prevproducttype;
            }
            set
            {
                if (_Prevproducttype != value)
                {
                    _Prevproducttype = value;
                }
            }
        }
        private string _Prevproducttype;

        /// <summary>
        /// Previous Product Type (ex. Quadrant, Cell)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevsubproducttype
        {
            get
            {
                return _Prevsubproducttype;
            }
            set
            {
                if (_Prevsubproducttype != value)
                {
                    _Prevsubproducttype = value;
                }
            }
        }
        private string _Prevsubproducttype;

        /// <summary>
        /// Previous qty of lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Prevproductquantity
        {
            get
            {
                return _Prevproductquantity;
            }
            set
            {
                if (_Prevproductquantity != value)
                {
                    _Prevproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Prevproductquantity;

        /// <summary>
        /// Previous sub qty of lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Prevsubproductquantity
        {
            get
            {
                return _Prevsubproductquantity;
            }
            set
            {
                if (_Prevsubproductquantity != value)
                {
                    _Prevsubproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Prevsubproductquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Prevdefectquantity
        {
            get
            {
                return _Prevdefectquantity;
            }
            set
            {
                if (_Prevdefectquantity != value)
                {
                    _Prevdefectquantity = value;
                }
            }
        }
        private Nullable<decimal> _Prevdefectquantity;

        /// <summary>
        /// Previous product definition ID of this lot. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevproductdefinitionid
        {
            get
            {
                return _Prevproductdefinitionid;
            }
            set
            {
                if (_Prevproductdefinitionid != value)
                {
                    _Prevproductdefinitionid = value;
                }
            }
        }
        private string _Prevproductdefinitionid;

        /// <summary>
        /// Previous process definition ID of this lot.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocessdefinitionid
        {
            get
            {
                return _Prevprocessdefinitionid;
            }
            set
            {
                if (_Prevprocessdefinitionid != value)
                {
                    _Prevprocessdefinitionid = value;
                }
            }
        }
        private string _Prevprocessdefinitionid;

        /// <summary>
        /// Previous sub process definition ID of lot. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevsubprocessdefinitionid
        {
            get
            {
                return _Prevsubprocessdefinitionid;
            }
            set
            {
                if (_Prevsubprocessdefinitionid != value)
                {
                    _Prevsubprocessdefinitionid = value;
                }
            }
        }
        private string _Prevsubprocessdefinitionid;

        /// <summary>
        /// Previous process node  ID of this lot.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocessnodeid
        {
            get
            {
                return _Prevprocessnodeid;
            }
            set
            {
                if (_Prevprocessnodeid != value)
                {
                    _Prevprocessnodeid = value;
                }
            }
        }
        private string _Prevprocessnodeid;

        /// <summary>
        /// Previous process segment  ID of this lot.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocesssegmentid
        {
            get
            {
                return _Prevprocesssegmentid;
            }
            set
            {
                if (_Prevprocesssegmentid != value)
                {
                    _Prevprocesssegmentid = value;
                }
            }
        }
        private string _Prevprocesssegmentid;

        /// <summary>
        /// Previous equipment  ID of this lot. was worked.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevequipmentid
        {
            get
            {
                return _Prevequipmentid;
            }
            set
            {
                if (_Prevequipmentid != value)
                {
                    _Prevequipmentid = value;
                }
            }
        }
        private string _Prevequipmentid;

        /// <summary>
        /// Previous location  ID of this lot.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Rework State
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevreworkstate
        {
            get
            {
                return _Prevreworkstate;
            }
            set
            {
                if (_Prevreworkstate != value)
                {
                    _Prevreworkstate = value;
                }
            }
        }
        private string _Prevreworkstate;

        /// <summary>
        /// Previous work order id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevworkorderid
        {
            get
            {
                return _Prevworkorderid;
            }
            set
            {
                if (_Prevworkorderid != value)
                {
                    _Prevworkorderid = value;
                }
            }
        }
        private string _Prevworkorderid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Registertime
        {
            get
            {
                return _Registertime;
            }
            set
            {
                if (_Registertime != value)
                {
                    _Registertime = value;
                }
            }
        }
        private Nullable<DateTime> _Registertime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentlotid
        {
            get
            {
                return _Equipmentlotid;
            }
            set
            {
                if (_Equipmentlotid != value)
                {
                    _Equipmentlotid = value;
                }
            }
        }
        private string _Equipmentlotid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processoperationid
        {
            get
            {
                return _Processoperationid;
            }
            set
            {
                if (_Processoperationid != value)
                {
                    _Processoperationid = value;
                }
            }
        }
        private string _Processoperationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Consumerlot
        {
            get
            {
                return _Consumerlot;
            }
            set
            {
                if (_Consumerlot != value)
                {
                    _Consumerlot = value;
                }
            }
        }
        private string _Consumerlot;

        #endregion
    }

    /// <summary>
    /// Lot의 걸려 있는 Hold 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lothold")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lothold : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Hold code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Holdcode
        {
            get
            {
                return _Holdcode;
            }
            set
            {
                if (_Holdcode != value)
                {
                    _Holdcode = value;
                }
            }
        }
        private string _Holdcode;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Sub process definition id. If sub process definition id does not exist, this is filled with top process definition id.(ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subprocessdefinitionid
        {
            get
            {
                return _Subprocessdefinitionid;
            }
            set
            {
                if (_Subprocessdefinitionid != value)
                {
                    _Subprocessdefinitionid = value;
                }
            }
        }
        private string _Subprocessdefinitionid;

        /// <summary>
        /// Process segment id of lot id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Product definition id of lot id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process definition id of lot id. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Release code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Releasecode
        {
            get
            {
                return _Releasecode;
            }
            set
            {
                if (_Releasecode != value)
                {
                    _Releasecode = value;
                }
            }
        }
        private string _Releasecode;

        /// <summary>
        /// Release user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Releaseuser
        {
            get
            {
                return _Releaseuser;
            }
            set
            {
                if (_Releaseuser != value)
                {
                    _Releaseuser = value;
                }
            }
        }
        private string _Releaseuser;

        /// <summary>
        /// When this alarm is happened, this lot id is held. (ref. FOM_ALARM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmid
        {
            get
            {
                return _Alarmid;
            }
            set
            {
                if (_Alarmid != value)
                {
                    _Alarmid = value;
                }
            }
        }
        private string _Alarmid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Lot의 걸려 있는 Hold 정보 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotholdhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotholdhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Hold code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdcode
        {
            get
            {
                return _Holdcode;
            }
            set
            {
                if (_Holdcode != value)
                {
                    _Holdcode = value;
                }
            }
        }
        private string _Holdcode;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Sub process definition id. If sub process definition id does not exist, this is filled with top process definition id.(ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subprocessdefinitionid
        {
            get
            {
                return _Subprocessdefinitionid;
            }
            set
            {
                if (_Subprocessdefinitionid != value)
                {
                    _Subprocessdefinitionid = value;
                }
            }
        }
        private string _Subprocessdefinitionid;

        /// <summary>
        /// Process segment id of lot id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Product definition id of lot id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process definition id of lot id. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Release code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Releasecode
        {
            get
            {
                return _Releasecode;
            }
            set
            {
                if (_Releasecode != value)
                {
                    _Releasecode = value;
                }
            }
        }
        private string _Releasecode;

        /// <summary>
        /// Release user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Releaseuser
        {
            get
            {
                return _Releaseuser;
            }
            set
            {
                if (_Releaseuser != value)
                {
                    _Releaseuser = value;
                }
            }
        }
        private string _Releaseuser;

        /// <summary>
        /// When this alarm is happened, this lot id is held. (ref. FOM_ALARM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alarmid
        {
            get
            {
                return _Alarmid;
            }
            set
            {
                if (_Alarmid != value)
                {
                    _Alarmid = value;
                }
            }
        }
        private string _Alarmid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Lot에 소모성 자재를 사용한 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotmateriallotrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotmateriallotrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Material lot id. (ref. FOM_MATERIALLOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// Sub process definition id. If sub process definition id does not exist, this is filled with top process definition id.(ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Subprocessdefinitionid
        {
            get
            {
                return _Subprocessdefinitionid;
            }
            set
            {
                if (_Subprocessdefinitionid != value)
                {
                    _Subprocessdefinitionid = value;
                }
            }
        }
        private string _Subprocessdefinitionid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Repeat count is increased when the data is duplicated in the same condition. if repeat count is 3, 3 rows exists.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public int Repeatcount
        {
            get
            {
                return _Repeatcount;
            }
            set
            {
                if (_Repeatcount != value)
                {
                    _Repeatcount = value;
                }
            }
        }
        private int _Repeatcount;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=6, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process definition id. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// The qty that is consumed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// The location where material lot is consumed. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// The equipment id where material lot is kitted or consumed. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Lot에 소모성 자재를 사용한 정보 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Lotmateriallotrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lotmateriallotrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Lot id. (ref. FOM_LOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Material lot id. (ref. FOM_MATERIALLOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// Sub process definition id. If sub process definition id does not exist, this is filled with top process definition id.(ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subprocessdefinitionid
        {
            get
            {
                return _Subprocessdefinitionid;
            }
            set
            {
                if (_Subprocessdefinitionid != value)
                {
                    _Subprocessdefinitionid = value;
                }
            }
        }
        private string _Subprocessdefinitionid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Repeat count is increased when the data is duplicated in the same condition. if repeat count is 3, 3 rows exists.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Repeatcount
        {
            get
            {
                return _Repeatcount;
            }
            set
            {
                if (_Repeatcount != value)
                {
                    _Repeatcount = value;
                }
            }
        }
        private int _Repeatcount;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process definition id. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// The qty that is consumed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// The location where material lot is consumed. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// The equipment id where material lot is kitted or consumed. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 소모성 자재 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Materialclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Materialclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for material class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Materialclassid
        {
            get
            {
                return _Materialclassid;
            }
            set
            {
                if (_Materialclassid != value)
                {
                    _Materialclassid = value;
                }
            }
        }
        private string _Materialclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Material class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialclassname
        {
            get
            {
                return _Materialclassname;
            }
            set
            {
                if (_Materialclassname != value)
                {
                    _Materialclassname = value;
                }
            }
        }
        private string _Materialclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 소모성 자재 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Materialclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Materialclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for material class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialclassid
        {
            get
            {
                return _Materialclassid;
            }
            set
            {
                if (_Materialclassid != value)
                {
                    _Materialclassid = value;
                }
            }
        }
        private string _Materialclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Material class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialclassname
        {
            get
            {
                return _Materialclassname;
            }
            set
            {
                if (_Materialclassname != value)
                {
                    _Materialclassname = value;
                }
            }
        }
        private string _Materialclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 자재 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Materialdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Materialdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for material definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionid
        {
            get
            {
                return _Materialdefinitionid;
            }
            set
            {
                if (_Materialdefinitionid != value)
                {
                    _Materialdefinitionid = value;
                }
            }
        }
        private string _Materialdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Material definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionname
        {
            get
            {
                return _Materialdefinitionname;
            }
            set
            {
                if (_Materialdefinitionname != value)
                {
                    _Materialdefinitionname = value;
                }
            }
        }
        private string _Materialdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Material class id. (ref. FOM_MATERIALCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialclassid
        {
            get
            {
                return _Materialclassid;
            }
            set
            {
                if (_Materialclassid != value)
                {
                    _Materialclassid = value;
                }
            }
        }
        private string _Materialclassid;

        /// <summary>
        /// Type of material.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 자재 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Materialdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Materialdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for material definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionid
        {
            get
            {
                return _Materialdefinitionid;
            }
            set
            {
                if (_Materialdefinitionid != value)
                {
                    _Materialdefinitionid = value;
                }
            }
        }
        private string _Materialdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Material definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionname
        {
            get
            {
                return _Materialdefinitionname;
            }
            set
            {
                if (_Materialdefinitionname != value)
                {
                    _Materialdefinitionname = value;
                }
            }
        }
        private string _Materialdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Material class id. (ref. FOM_MATERIALCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialclassid
        {
            get
            {
                return _Materialclassid;
            }
            set
            {
                if (_Materialclassid != value)
                {
                    _Materialclassid = value;
                }
            }
        }
        private string _Materialclassid;

        /// <summary>
        /// Type of material.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Material Lot Information
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Materiallot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Materiallot : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for material lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Material lot name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materiallotname
        {
            get
            {
                return _Materiallotname;
            }
            set
            {
                if (_Materiallotname != value)
                {
                    _Materiallotname = value;
                }
            }
        }
        private string _Materiallotname;

        /// <summary>
        /// Material definition id. (ref. FOM_MATERIALDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionid
        {
            get
            {
                return _Materialdefinitionid;
            }
            set
            {
                if (_Materialdefinitionid != value)
                {
                    _Materialdefinitionid = value;
                }
            }
        }
        private string _Materialdefinitionid;

        /// <summary>
        /// Material class id. (ref. FOM_MATERIALCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialclassid
        {
            get
            {
                return _Materialclassid;
            }
            set
            {
                if (_Materialclassid != value)
                {
                    _Materialclassid = value;
                }
            }
        }
        private string _Materialclassid;

        /// <summary>
        /// Type of material.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// Root parent material lot id. (ref. FOM_MATERIALLOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Rootmateriallotid
        {
            get
            {
                return _Rootmateriallotid;
            }
            set
            {
                if (_Rootmateriallotid != value)
                {
                    _Rootmateriallotid = value;
                }
            }
        }
        private string _Rootmateriallotid;

        /// <summary>
        /// Parent material lot id. (ref. FOM_MATERIALLOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentmateriallotid
        {
            get
            {
                return _Parentmateriallotid;
            }
            set
            {
                if (_Parentmateriallotid != value)
                {
                    _Parentmateriallotid = value;
                }
            }
        }
        private string _Parentmateriallotid;

        /// <summary>
        /// Current state of material lot id. ex) Created, Active, Terminated, Scrapped, Hold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Received Quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Receivedquantity
        {
            get
            {
                return _Receivedquantity;
            }
            set
            {
                if (_Receivedquantity != value)
                {
                    _Receivedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Receivedquantity;

        /// <summary>
        /// Original qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Originalquantity
        {
            get
            {
                return _Originalquantity;
            }
            set
            {
                if (_Originalquantity != value)
                {
                    _Originalquantity = value;
                }
            }
        }
        private Nullable<decimal> _Originalquantity;

        /// <summary>
        /// Current qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Current location of material lot id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Production Order ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productionorderid
        {
            get
            {
                return _Productionorderid;
            }
            set
            {
                if (_Productionorderid != value)
                {
                    _Productionorderid = value;
                }
            }
        }
        private string _Productionorderid;

        /// <summary>
        /// Work Order ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// Current equipment id that the material lot id is being worked or kitted. (ref. FOM_EQUIPMENT) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Port of the production Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Portid
        {
            get
            {
                return _Portid;
            }
            set
            {
                if (_Portid != value)
                {
                    _Portid = value;
                }
            }
        }
        private string _Portid;

        /// <summary>
        /// Vendor name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// The slot position to be assigned to the carrier. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    _Position = value;
                }
            }
        }
        private Nullable<int> _Position;

        /// <summary>
        /// ProcessState : Idle | Processing
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processstate
        {
            get
            {
                return _Processstate;
            }
            set
            {
                if (_Processstate != value)
                {
                    _Processstate = value;
                }
            }
        }
        private string _Processstate;

        /// <summary>
        /// HoldState OnHold | NotOnHold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// Received Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receivedtime
        {
            get
            {
                return _Receivedtime;
            }
            set
            {
                if (_Receivedtime != value)
                {
                    _Receivedtime = value;
                }
            }
        }
        private Nullable<DateTime> _Receivedtime;

        /// <summary>
        /// The time to be moved. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Movetime
        {
            get
            {
                return _Movetime;
            }
            set
            {
                if (_Movetime != value)
                {
                    _Movetime = value;
                }
            }
        }
        private Nullable<DateTime> _Movetime;

        /// <summary>
        /// The count that material lot is disassembled. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Reclaimcount
        {
            get
            {
                return _Reclaimcount;
            }
            set
            {
                if (_Reclaimcount != value)
                {
                    _Reclaimcount = value;
                }
            }
        }
        private Nullable<int> _Reclaimcount;

        /// <summary>
        /// Set Start Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Timerstarttime
        {
            get
            {
                return _Timerstarttime;
            }
            set
            {
                if (_Timerstarttime != value)
                {
                    _Timerstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Timerstarttime;

        /// <summary>
        /// Set End Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Timerendtime
        {
            get
            {
                return _Timerendtime;
            }
            set
            {
                if (_Timerendtime != value)
                {
                    _Timerendtime = value;
                }
            }
        }
        private Nullable<DateTime> _Timerendtime;

        /// <summary>
        /// Previous state of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Previous qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Prevquantity
        {
            get
            {
                return _Prevquantity;
            }
            set
            {
                if (_Prevquantity != value)
                {
                    _Prevquantity = value;
                }
            }
        }
        private Nullable<decimal> _Prevquantity;

        /// <summary>
        /// Previous location of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// The flag to determine whether or not to be Qty Managed
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isquantitymanaged
        {
            get
            {
                return _Isquantitymanaged;
            }
            set
            {
                if (_Isquantitymanaged != value)
                {
                    _Isquantitymanaged = value;
                }
            }
        }
        private string _Isquantitymanaged;

        /// <summary>
        /// 사용만료일
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Expiredate
        {
            get
            {
                return _Expiredate;
            }
            set
            {
                if (_Expiredate != value)
                {
                    _Expiredate = value;
                }
            }
        }
        private Nullable<DateTime> _Expiredate;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 소모성 자재의 carrier assign 현황
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Materiallotcarrierrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Materiallotcarrierrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Material lot id. (ref. FOM_MATERIALLOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// Carrier id. (ref. FOM_CARRIER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// Postion of the slot that is in the carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public int Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    _Position = value;
                }
            }
        }
        private int _Position;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Qty of material lot id to be assigned to the carrier id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Assignquantity
        {
            get
            {
                return _Assignquantity;
            }
            set
            {
                if (_Assignquantity != value)
                {
                    _Assignquantity = value;
                }
            }
        }
        private Nullable<decimal> _Assignquantity;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 소모성 자재의 carrier assign 현황 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Materiallotcarrierrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Materiallotcarrierrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Material lot id. (ref. FOM_MATERIALLOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// Carrier id. (ref. FOM_CARRIER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// Postion of the slot that is in the carrier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    _Position = value;
                }
            }
        }
        private int _Position;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Qty of material lot id to be assigned to the carrier id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Assignquantity
        {
            get
            {
                return _Assignquantity;
            }
            set
            {
                if (_Assignquantity != value)
                {
                    _Assignquantity = value;
                }
            }
        }
        private Nullable<decimal> _Assignquantity;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 소모성 자재를 영속성 자재에 할당한 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Materiallotdurablerel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Materiallotdurablerel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Material lot id. (ref. FOM_MATERIALLOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// Durable id. (ref. FOM_DURABLE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Durableid
        {
            get
            {
                return _Durableid;
            }
            set
            {
                if (_Durableid != value)
                {
                    _Durableid = value;
                }
            }
        }
        private string _Durableid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Postion of the durable that material lot id is assigned in the durable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Durableposition
        {
            get
            {
                return _Durableposition;
            }
            set
            {
                if (_Durableposition != value)
                {
                    _Durableposition = value;
                }
            }
        }
        private Nullable<int> _Durableposition;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Current location of durable id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Qty of material lot id that is assigned to the durable id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 소모성 자재를 영속성 자재에 할당한 정보 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Materiallotdurablerelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Materiallotdurablerelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Material lot id. (ref. FOM_MATERIALLOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// Durable id. (ref. FOM_DURABLE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Durableid
        {
            get
            {
                return _Durableid;
            }
            set
            {
                if (_Durableid != value)
                {
                    _Durableid = value;
                }
            }
        }
        private string _Durableid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Postion of the durable that material lot id is assigned in the durable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Durableposition
        {
            get
            {
                return _Durableposition;
            }
            set
            {
                if (_Durableposition != value)
                {
                    _Durableposition = value;
                }
            }
        }
        private Nullable<int> _Durableposition;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Current location of durable id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Qty of material lot id that is assigned to the durable id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Material Lot Information 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Materiallothist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Materiallothist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for material lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Material lot name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materiallotname
        {
            get
            {
                return _Materiallotname;
            }
            set
            {
                if (_Materiallotname != value)
                {
                    _Materiallotname = value;
                }
            }
        }
        private string _Materiallotname;

        /// <summary>
        /// Material definition id. (ref. FOM_MATERIALDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialdefinitionid
        {
            get
            {
                return _Materialdefinitionid;
            }
            set
            {
                if (_Materialdefinitionid != value)
                {
                    _Materialdefinitionid = value;
                }
            }
        }
        private string _Materialdefinitionid;

        /// <summary>
        /// Material class id. (ref. FOM_MATERIALCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialclassid
        {
            get
            {
                return _Materialclassid;
            }
            set
            {
                if (_Materialclassid != value)
                {
                    _Materialclassid = value;
                }
            }
        }
        private string _Materialclassid;

        /// <summary>
        /// Type of material.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// Root parent material lot id. (ref. FOM_MATERIALLOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Rootmateriallotid
        {
            get
            {
                return _Rootmateriallotid;
            }
            set
            {
                if (_Rootmateriallotid != value)
                {
                    _Rootmateriallotid = value;
                }
            }
        }
        private string _Rootmateriallotid;

        /// <summary>
        /// Parent material lot id. (ref. FOM_MATERIALLOT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentmateriallotid
        {
            get
            {
                return _Parentmateriallotid;
            }
            set
            {
                if (_Parentmateriallotid != value)
                {
                    _Parentmateriallotid = value;
                }
            }
        }
        private string _Parentmateriallotid;

        /// <summary>
        /// Current state of material lot id. ex) Created, Active, Terminated, Scrapped, Hold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Received Quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Receivedquantity
        {
            get
            {
                return _Receivedquantity;
            }
            set
            {
                if (_Receivedquantity != value)
                {
                    _Receivedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Receivedquantity;

        /// <summary>
        /// Original qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Originalquantity
        {
            get
            {
                return _Originalquantity;
            }
            set
            {
                if (_Originalquantity != value)
                {
                    _Originalquantity = value;
                }
            }
        }
        private Nullable<decimal> _Originalquantity;

        /// <summary>
        /// Current qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Current location of material lot id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Production Order ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productionorderid
        {
            get
            {
                return _Productionorderid;
            }
            set
            {
                if (_Productionorderid != value)
                {
                    _Productionorderid = value;
                }
            }
        }
        private string _Productionorderid;

        /// <summary>
        /// Work Order ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// Current equipment id that the material lot id is being worked or kitted. (ref. FOM_EQUIPMENT) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Port of the production Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Portid
        {
            get
            {
                return _Portid;
            }
            set
            {
                if (_Portid != value)
                {
                    _Portid = value;
                }
            }
        }
        private string _Portid;

        /// <summary>
        /// Vendor name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// The slot position to be assigned to the carrier. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    _Position = value;
                }
            }
        }
        private Nullable<int> _Position;

        /// <summary>
        /// ProcessState : Idle | Processing
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processstate
        {
            get
            {
                return _Processstate;
            }
            set
            {
                if (_Processstate != value)
                {
                    _Processstate = value;
                }
            }
        }
        private string _Processstate;

        /// <summary>
        /// HoldState OnHold | NotOnHold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// Received Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receivedtime
        {
            get
            {
                return _Receivedtime;
            }
            set
            {
                if (_Receivedtime != value)
                {
                    _Receivedtime = value;
                }
            }
        }
        private Nullable<DateTime> _Receivedtime;

        /// <summary>
        /// The time to be moved. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Movetime
        {
            get
            {
                return _Movetime;
            }
            set
            {
                if (_Movetime != value)
                {
                    _Movetime = value;
                }
            }
        }
        private Nullable<DateTime> _Movetime;

        /// <summary>
        /// The count that material lot is disassembled. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Reclaimcount
        {
            get
            {
                return _Reclaimcount;
            }
            set
            {
                if (_Reclaimcount != value)
                {
                    _Reclaimcount = value;
                }
            }
        }
        private Nullable<int> _Reclaimcount;

        /// <summary>
        /// Set Start Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Timerstarttime
        {
            get
            {
                return _Timerstarttime;
            }
            set
            {
                if (_Timerstarttime != value)
                {
                    _Timerstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Timerstarttime;

        /// <summary>
        /// Set End Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Timerendtime
        {
            get
            {
                return _Timerendtime;
            }
            set
            {
                if (_Timerendtime != value)
                {
                    _Timerendtime = value;
                }
            }
        }
        private Nullable<DateTime> _Timerendtime;

        /// <summary>
        /// Previous state of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Previous qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Prevquantity
        {
            get
            {
                return _Prevquantity;
            }
            set
            {
                if (_Prevquantity != value)
                {
                    _Prevquantity = value;
                }
            }
        }
        private Nullable<decimal> _Prevquantity;

        /// <summary>
        /// Previous location of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// The flag to determine whether or not to be Qty Managed
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isquantitymanaged
        {
            get
            {
                return _Isquantitymanaged;
            }
            set
            {
                if (_Isquantitymanaged != value)
                {
                    _Isquantitymanaged = value;
                }
            }
        }
        private string _Isquantitymanaged;

        /// <summary>
        /// 사용만료일
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Expiredate
        {
            get
            {
                return _Expiredate;
            }
            set
            {
                if (_Expiredate != value)
                {
                    _Expiredate = value;
                }
            }
        }
        private Nullable<DateTime> _Expiredate;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 모바일 앱 버전 체크를 위한 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Mobileversion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Mobileversion : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Application Code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=50, DataSize=50, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Systemdivision
        {
            get
            {
                return _Systemdivision;
            }
            set
            {
                if (_Systemdivision != value)
                {
                    _Systemdivision = value;
                }
            }
        }
        private string _Systemdivision;

        /// <summary>
        /// Hardware Code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Versiontype
        {
            get
            {
                return _Versiontype;
            }
            set
            {
                if (_Versiontype != value)
                {
                    _Versiontype = value;
                }
            }
        }
        private string _Versiontype;

        /// <summary>
        /// Version Code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Versionid
        {
            get
            {
                return _Versionid;
            }
            set
            {
                if (_Versionid != value)
                {
                    _Versionid = value;
                }
            }
        }
        private string _Versionid;

        /// <summary>
        /// Version Name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=40, DataSize=20, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Versionname
        {
            get
            {
                return _Versionname;
            }
            set
            {
                if (_Versionname != value)
                {
                    _Versionname = value;
                }
            }
        }
        private string _Versionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Creator IP
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=50, DataSize=50, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventip
        {
            get
            {
                return _Eventip;
            }
            set
            {
                if (_Eventip != value)
                {
                    _Eventip = value;
                }
            }
        }
        private string _Eventip;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Nonproductrequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Nonproductrequest : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Requestid
        {
            get
            {
                return _Requestid;
            }
            set
            {
                if (_Requestid != value)
                {
                    _Requestid = value;
                }
            }
        }
        private string _Requestid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Bwart
        {
            get
            {
                return _Bwart;
            }
            set
            {
                if (_Bwart != value)
                {
                    _Bwart = value;
                }
            }
        }
        private string _Bwart;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestdefinitionid
        {
            get
            {
                return _Requestdefinitionid;
            }
            set
            {
                if (_Requestdefinitionid != value)
                {
                    _Requestdefinitionid = value;
                }
            }
        }
        private string _Requestdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Requesttime
        {
            get
            {
                return _Requesttime;
            }
            set
            {
                if (_Requesttime != value)
                {
                    _Requesttime = value;
                }
            }
        }
        private Nullable<DateTime> _Requesttime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Requestquantity
        {
            get
            {
                return _Requestquantity;
            }
            set
            {
                if (_Requestquantity != value)
                {
                    _Requestquantity = value;
                }
            }
        }
        private Nullable<decimal> _Requestquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Eventquantity
        {
            get
            {
                return _Eventquantity;
            }
            set
            {
                if (_Eventquantity != value)
                {
                    _Eventquantity = value;
                }
            }
        }
        private Nullable<decimal> _Eventquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestorfactoryid
        {
            get
            {
                return _Requestorfactoryid;
            }
            set
            {
                if (_Requestorfactoryid != value)
                {
                    _Requestorfactoryid = value;
                }
            }
        }
        private string _Requestorfactoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestorerpplant
        {
            get
            {
                return _Requestorerpplant;
            }
            set
            {
                if (_Requestorerpplant != value)
                {
                    _Requestorerpplant = value;
                }
            }
        }
        private string _Requestorerpplant;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requesteuserid
        {
            get
            {
                return _Requesteuserid;
            }
            set
            {
                if (_Requesteuserid != value)
                {
                    _Requesteuserid = value;
                }
            }
        }
        private string _Requesteuserid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestdept
        {
            get
            {
                return _Requestdept;
            }
            set
            {
                if (_Requestdept != value)
                {
                    _Requestdept = value;
                }
            }
        }
        private string _Requestdept;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Rsnum
        {
            get
            {
                return _Rsnum;
            }
            set
            {
                if (_Rsnum != value)
                {
                    _Rsnum = value;
                }
            }
        }
        private string _Rsnum;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Documentno
        {
            get
            {
                return _Documentno;
            }
            set
            {
                if (_Documentno != value)
                {
                    _Documentno = value;
                }
            }
        }
        private string _Documentno;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Costcenter
        {
            get
            {
                return _Costcenter;
            }
            set
            {
                if (_Costcenter != value)
                {
                    _Costcenter = value;
                }
            }
        }
        private string _Costcenter;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Approvaltime
        {
            get
            {
                return _Approvaltime;
            }
            set
            {
                if (_Approvaltime != value)
                {
                    _Approvaltime = value;
                }
            }
        }
        private Nullable<DateTime> _Approvaltime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Approvalstate
        {
            get
            {
                return _Approvalstate;
            }
            set
            {
                if (_Approvalstate != value)
                {
                    _Approvalstate = value;
                }
            }
        }
        private string _Approvalstate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Confirmstate
        {
            get
            {
                return _Confirmstate;
            }
            set
            {
                if (_Confirmstate != value)
                {
                    _Confirmstate = value;
                }
            }
        }
        private string _Confirmstate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentrequestid
        {
            get
            {
                return _Parentrequestid;
            }
            set
            {
                if (_Parentrequestid != value)
                {
                    _Parentrequestid = value;
                }
            }
        }
        private string _Parentrequestid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Forcecompleted
        {
            get
            {
                return _Forcecompleted;
            }
            set
            {
                if (_Forcecompleted != value)
                {
                    _Forcecompleted = value;
                }
            }
        }
        private string _Forcecompleted;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Sourcelocationid
        {
            get
            {
                return _Sourcelocationid;
            }
            set
            {
                if (_Sourcelocationid != value)
                {
                    _Sourcelocationid = value;
                }
            }
        }
        private string _Sourcelocationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_comp_id
        {
            get
            {
                return _If_comp_id;
            }
            set
            {
                if (_If_comp_id != value)
                {
                    _If_comp_id = value;
                }
            }
        }
        private string _If_comp_id;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_sybsn_code
        {
            get
            {
                return _If_sybsn_code;
            }
            set
            {
                if (_If_sybsn_code != value)
                {
                    _If_sybsn_code = value;
                }
            }
        }
        private string _If_sybsn_code;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> If_instksample_date
        {
            get
            {
                return _If_instksample_date;
            }
            set
            {
                if (_If_instksample_date != value)
                {
                    _If_instksample_date = value;
                }
            }
        }
        private Nullable<DateTime> _If_instksample_date;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<long> If_instksample_no
        {
            get
            {
                return _If_instksample_no;
            }
            set
            {
                if (_If_instksample_no != value)
                {
                    _If_instksample_no = value;
                }
            }
        }
        private Nullable<long> _If_instksample_no;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Nonproductrequestdetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Nonproductrequestdetail : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Requestid
        {
            get
            {
                return _Requestid;
            }
            set
            {
                if (_Requestid != value)
                {
                    _Requestid = value;
                }
            }
        }
        private string _Requestid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="int", MaxLength=4, DataSize=4, Scale=0, Precision=10, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public decimal Seq
        {
            get
            {
                return _Seq;
            }
            set
            {
                if (_Seq != value)
                {
                    _Seq = value;
                }
            }
        }
        private decimal _Seq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Eventquantity
        {
            get
            {
                return _Eventquantity;
            }
            set
            {
                if (_Eventquantity != value)
                {
                    _Eventquantity = value;
                }
            }
        }
        private Nullable<decimal> _Eventquantity;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Nonproductrequestdetailhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Nonproductrequestdetailhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestid
        {
            get
            {
                return _Requestid;
            }
            set
            {
                if (_Requestid != value)
                {
                    _Requestid = value;
                }
            }
        }
        private string _Requestid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="int", MaxLength=4, DataSize=4, Scale=0, Precision=10, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public decimal Seq
        {
            get
            {
                return _Seq;
            }
            set
            {
                if (_Seq != value)
                {
                    _Seq = value;
                }
            }
        }
        private decimal _Seq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materiallotid
        {
            get
            {
                return _Materiallotid;
            }
            set
            {
                if (_Materiallotid != value)
                {
                    _Materiallotid = value;
                }
            }
        }
        private string _Materiallotid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Eventquantity
        {
            get
            {
                return _Eventquantity;
            }
            set
            {
                if (_Eventquantity != value)
                {
                    _Eventquantity = value;
                }
            }
        }
        private Nullable<decimal> _Eventquantity;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Nonproductrequesthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Nonproductrequesthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestid
        {
            get
            {
                return _Requestid;
            }
            set
            {
                if (_Requestid != value)
                {
                    _Requestid = value;
                }
            }
        }
        private string _Requestid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Bwart
        {
            get
            {
                return _Bwart;
            }
            set
            {
                if (_Bwart != value)
                {
                    _Bwart = value;
                }
            }
        }
        private string _Bwart;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestdefinitionid
        {
            get
            {
                return _Requestdefinitionid;
            }
            set
            {
                if (_Requestdefinitionid != value)
                {
                    _Requestdefinitionid = value;
                }
            }
        }
        private string _Requestdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Requesttime
        {
            get
            {
                return _Requesttime;
            }
            set
            {
                if (_Requesttime != value)
                {
                    _Requesttime = value;
                }
            }
        }
        private Nullable<DateTime> _Requesttime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Requestquantity
        {
            get
            {
                return _Requestquantity;
            }
            set
            {
                if (_Requestquantity != value)
                {
                    _Requestquantity = value;
                }
            }
        }
        private Nullable<decimal> _Requestquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Eventquantity
        {
            get
            {
                return _Eventquantity;
            }
            set
            {
                if (_Eventquantity != value)
                {
                    _Eventquantity = value;
                }
            }
        }
        private Nullable<decimal> _Eventquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestorfactoryid
        {
            get
            {
                return _Requestorfactoryid;
            }
            set
            {
                if (_Requestorfactoryid != value)
                {
                    _Requestorfactoryid = value;
                }
            }
        }
        private string _Requestorfactoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestorerpplant
        {
            get
            {
                return _Requestorerpplant;
            }
            set
            {
                if (_Requestorerpplant != value)
                {
                    _Requestorerpplant = value;
                }
            }
        }
        private string _Requestorerpplant;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requesteuserid
        {
            get
            {
                return _Requesteuserid;
            }
            set
            {
                if (_Requesteuserid != value)
                {
                    _Requesteuserid = value;
                }
            }
        }
        private string _Requesteuserid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestdept
        {
            get
            {
                return _Requestdept;
            }
            set
            {
                if (_Requestdept != value)
                {
                    _Requestdept = value;
                }
            }
        }
        private string _Requestdept;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Rsnum
        {
            get
            {
                return _Rsnum;
            }
            set
            {
                if (_Rsnum != value)
                {
                    _Rsnum = value;
                }
            }
        }
        private string _Rsnum;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Documentno
        {
            get
            {
                return _Documentno;
            }
            set
            {
                if (_Documentno != value)
                {
                    _Documentno = value;
                }
            }
        }
        private string _Documentno;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Costcenter
        {
            get
            {
                return _Costcenter;
            }
            set
            {
                if (_Costcenter != value)
                {
                    _Costcenter = value;
                }
            }
        }
        private string _Costcenter;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Approvaltime
        {
            get
            {
                return _Approvaltime;
            }
            set
            {
                if (_Approvaltime != value)
                {
                    _Approvaltime = value;
                }
            }
        }
        private Nullable<DateTime> _Approvaltime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Approvalstate
        {
            get
            {
                return _Approvalstate;
            }
            set
            {
                if (_Approvalstate != value)
                {
                    _Approvalstate = value;
                }
            }
        }
        private string _Approvalstate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Confirmstate
        {
            get
            {
                return _Confirmstate;
            }
            set
            {
                if (_Confirmstate != value)
                {
                    _Confirmstate = value;
                }
            }
        }
        private string _Confirmstate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentrequestid
        {
            get
            {
                return _Parentrequestid;
            }
            set
            {
                if (_Parentrequestid != value)
                {
                    _Parentrequestid = value;
                }
            }
        }
        private string _Parentrequestid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Forcecompleted
        {
            get
            {
                return _Forcecompleted;
            }
            set
            {
                if (_Forcecompleted != value)
                {
                    _Forcecompleted = value;
                }
            }
        }
        private string _Forcecompleted;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Sourcelocationid
        {
            get
            {
                return _Sourcelocationid;
            }
            set
            {
                if (_Sourcelocationid != value)
                {
                    _Sourcelocationid = value;
                }
            }
        }
        private string _Sourcelocationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_comp_id
        {
            get
            {
                return _If_comp_id;
            }
            set
            {
                if (_If_comp_id != value)
                {
                    _If_comp_id = value;
                }
            }
        }
        private string _If_comp_id;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_sybsn_code
        {
            get
            {
                return _If_sybsn_code;
            }
            set
            {
                if (_If_sybsn_code != value)
                {
                    _If_sybsn_code = value;
                }
            }
        }
        private string _If_sybsn_code;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> If_instksample_date
        {
            get
            {
                return _If_instksample_date;
            }
            set
            {
                if (_If_instksample_date != value)
                {
                    _If_instksample_date = value;
                }
            }
        }
        private Nullable<DateTime> _If_instksample_date;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<long> If_instksample_no
        {
            get
            {
                return _If_instksample_no;
            }
            set
            {
                if (_If_instksample_no != value)
                {
                    _If_instksample_no = value;
                }
            }
        }
        private Nullable<long> _If_instksample_no;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 게시판
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Noticeboard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Noticeboard : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// ID of this Object, auto generated 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Noticeid
        {
            get
            {
                return _Noticeid;
            }
            set
            {
                if (_Noticeid != value)
                {
                    _Noticeid = value;
                }
            }
        }
        private long _Noticeid;

        /// <summary>
        /// FACTORY-ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// category of board
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Category
        {
            get
            {
                return _Category;
            }
            set
            {
                if (_Category != value)
                {
                    _Category = value;
                }
            }
        }
        private string _Category;

        /// <summary>
        /// 공지사항 여부 - 공지 = '0', 일반 = '1'
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=18, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Isbulletin
        {
            get
            {
                return _Isbulletin;
            }
            set
            {
                if (_Isbulletin != value)
                {
                    _Isbulletin = value;
                }
            }
        }
        private Nullable<int> _Isbulletin;

        /// <summary>
        /// UserID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// UserID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    _Username = value;
                }
            }
        }
        private string _Username;

        /// <summary>
        /// Title
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=150, DataSize=150, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                return _Title;
            }
            set
            {
                if (_Title != value)
                {
                    _Title = value;
                }
            }
        }
        private string _Title;

        /// <summary>
        /// Notice content
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="ntext", MaxLength=16, DataSize=8, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Content
        {
            get
            {
                return _Content;
            }
            set
            {
                if (_Content != value)
                {
                    _Content = value;
                }
            }
        }
        private string _Content;

        /// <summary>
        /// Read count
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=18, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Readcount
        {
            get
            {
                return _Readcount;
            }
            set
            {
                if (_Readcount != value)
                {
                    _Readcount = value;
                }
            }
        }
        private Nullable<int> _Readcount;

        /// <summary>
        /// File Name, include path
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                if (_Filename != value)
                {
                    _Filename = value;
                }
            }
        }
        private string _Filename;

        /// <summary>
        /// file size
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=18, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Filesize
        {
            get
            {
                return _Filesize;
            }
            set
            {
                if (_Filesize != value)
                {
                    _Filesize = value;
                }
            }
        }
        private Nullable<int> _Filesize;

        /// <summary>
        /// comment count
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=18, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Commentcount
        {
            get
            {
                return _Commentcount;
            }
            set
            {
                if (_Commentcount != value)
                {
                    _Commentcount = value;
                }
            }
        }
        private Nullable<int> _Commentcount;

        /// <summary>
        /// Create time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private Nullable<DateTime> _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// reason code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 게시판 덧글
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Noticeboardcomment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Noticeboardcomment : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// ID of this Object, auto generated, 댓글ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Noticecommentid
        {
            get
            {
                return _Noticecommentid;
            }
            set
            {
                if (_Noticecommentid != value)
                {
                    _Noticecommentid = value;
                }
            }
        }
        private long _Noticecommentid;

        /// <summary>
        /// ID of notice ID 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public long Noticeid
        {
            get
            {
                return _Noticeid;
            }
            set
            {
                if (_Noticeid != value)
                {
                    _Noticeid = value;
                }
            }
        }
        private long _Noticeid;

        /// <summary>
        /// UserID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// UserName
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    _Username = value;
                }
            }
        }
        private string _Username;

        /// <summary>
        /// Comment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="ntext", MaxLength=16, DataSize=8, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                if (_Comment != value)
                {
                    _Comment = value;
                }
            }
        }
        private string _Comment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<long> Parentnoticecommentid
        {
            get
            {
                return _Parentnoticecommentid;
            }
            set
            {
                if (_Parentnoticecommentid != value)
                {
                    _Parentnoticecommentid = value;
                }
            }
        }
        private Nullable<long> _Parentnoticecommentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentuserid
        {
            get
            {
                return _Parentuserid;
            }
            set
            {
                if (_Parentuserid != value)
                {
                    _Parentuserid = value;
                }
            }
        }
        private string _Parentuserid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentusername
        {
            get
            {
                return _Parentusername;
            }
            set
            {
                if (_Parentusername != value)
                {
                    _Parentusername = value;
                }
            }
        }
        private string _Parentusername;

        /// <summary>
        /// File Name, include path
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                if (_Filename != value)
                {
                    _Filename = value;
                }
            }
        }
        private string _Filename;

        /// <summary>
        /// file size
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=18, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Filesize
        {
            get
            {
                return _Filesize;
            }
            set
            {
                if (_Filesize != value)
                {
                    _Filesize = value;
                }
            }
        }
        private Nullable<int> _Filesize;

        /// <summary>
        /// reply level
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=18, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Commentlevel
        {
            get
            {
                return _Commentlevel;
            }
            set
            {
                if (_Commentlevel != value)
                {
                    _Commentlevel = value;
                }
            }
        }
        private Nullable<int> _Commentlevel;

        /// <summary>
        /// reply order
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=9, DataSize=9, Scale=0, Precision=18, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Commentorder
        {
            get
            {
                return _Commentorder;
            }
            set
            {
                if (_Commentorder != value)
                {
                    _Commentorder = value;
                }
            }
        }
        private Nullable<int> _Commentorder;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 조정사유코드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Packing Box Information
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Packingbox")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Packingbox : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for material lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Packingboxid
        {
            get
            {
                return _Packingboxid;
            }
            set
            {
                if (_Packingboxid != value)
                {
                    _Packingboxid = value;
                }
            }
        }
        private string _Packingboxid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Material lot name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingboxname
        {
            get
            {
                return _Packingboxname;
            }
            set
            {
                if (_Packingboxname != value)
                {
                    _Packingboxname = value;
                }
            }
        }
        private string _Packingboxname;

        /// <summary>
        /// Material definition id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingboxdefinitionid
        {
            get
            {
                return _Packingboxdefinitionid;
            }
            set
            {
                if (_Packingboxdefinitionid != value)
                {
                    _Packingboxdefinitionid = value;
                }
            }
        }
        private string _Packingboxdefinitionid;

        /// <summary>
        /// Type of material.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingboxtype
        {
            get
            {
                return _Packingboxtype;
            }
            set
            {
                if (_Packingboxtype != value)
                {
                    _Packingboxtype = value;
                }
            }
        }
        private string _Packingboxtype;

        /// <summary>
        /// Root parent material lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Rootmateriallotid
        {
            get
            {
                return _Rootmateriallotid;
            }
            set
            {
                if (_Rootmateriallotid != value)
                {
                    _Rootmateriallotid = value;
                }
            }
        }
        private string _Rootmateriallotid;

        /// <summary>
        /// Parent material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentmateriallotid
        {
            get
            {
                return _Parentmateriallotid;
            }
            set
            {
                if (_Parentmateriallotid != value)
                {
                    _Parentmateriallotid = value;
                }
            }
        }
        private string _Parentmateriallotid;

        /// <summary>
        /// Current state of material lot id. ex) Created, Active, Terminated, Scrapped, Hold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Received Quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Receivedquantity
        {
            get
            {
                return _Receivedquantity;
            }
            set
            {
                if (_Receivedquantity != value)
                {
                    _Receivedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Receivedquantity;

        /// <summary>
        /// Original qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Originalquantity
        {
            get
            {
                return _Originalquantity;
            }
            set
            {
                if (_Originalquantity != value)
                {
                    _Originalquantity = value;
                }
            }
        }
        private Nullable<decimal> _Originalquantity;

        /// <summary>
        /// Current qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Current location of material lot id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// HoldState OnHold | NotOnHold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// Received Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receivedtime
        {
            get
            {
                return _Receivedtime;
            }
            set
            {
                if (_Receivedtime != value)
                {
                    _Receivedtime = value;
                }
            }
        }
        private Nullable<DateTime> _Receivedtime;

        /// <summary>
        /// The time to be moved. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Movetime
        {
            get
            {
                return _Movetime;
            }
            set
            {
                if (_Movetime != value)
                {
                    _Movetime = value;
                }
            }
        }
        private Nullable<DateTime> _Movetime;

        /// <summary>
        /// The count that material lot is disassembled. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Reclaimcount
        {
            get
            {
                return _Reclaimcount;
            }
            set
            {
                if (_Reclaimcount != value)
                {
                    _Reclaimcount = value;
                }
            }
        }
        private Nullable<int> _Reclaimcount;

        /// <summary>
        /// Previous state of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Previous qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Prevquantity
        {
            get
            {
                return _Prevquantity;
            }
            set
            {
                if (_Prevquantity != value)
                {
                    _Prevquantity = value;
                }
            }
        }
        private Nullable<decimal> _Prevquantity;

        /// <summary>
        /// Previous location of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// The flag to determine whether or not to be Qty Managed
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isquantitymanaged
        {
            get
            {
                return _Isquantitymanaged;
            }
            set
            {
                if (_Isquantitymanaged != value)
                {
                    _Isquantitymanaged = value;
                }
            }
        }
        private string _Isquantitymanaged;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// PackingBox 기준 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Packingboxdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Packingboxdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for durable definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Packingboxdefinitionid
        {
            get
            {
                return _Packingboxdefinitionid;
            }
            set
            {
                if (_Packingboxdefinitionid != value)
                {
                    _Packingboxdefinitionid = value;
                }
            }
        }
        private string _Packingboxdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Durable definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingboxdefinitionname
        {
            get
            {
                return _Packingboxdefinitionname;
            }
            set
            {
                if (_Packingboxdefinitionname != value)
                {
                    _Packingboxdefinitionname = value;
                }
            }
        }
        private string _Packingboxdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// BOX type : SMALLBOX | CARTON | MEDIUMBOX | PALLET
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingboxtype
        {
            get
            {
                return _Packingboxtype;
            }
            set
            {
                if (_Packingboxtype != value)
                {
                    _Packingboxtype = value;
                }
            }
        }
        private string _Packingboxtype;

        /// <summary>
        /// Detail box type : INNERBOX | OUTERBOX
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailpackingboxtype
        {
            get
            {
                return _Detailpackingboxtype;
            }
            set
            {
                if (_Detailpackingboxtype != value)
                {
                    _Detailpackingboxtype = value;
                }
            }
        }
        private string _Detailpackingboxtype;

        /// <summary>
        /// Color
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Colortype
        {
            get
            {
                return _Colortype;
            }
            set
            {
                if (_Colortype != value)
                {
                    _Colortype = value;
                }
            }
        }
        private string _Colortype;

        /// <summary>
        /// Length
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                if (_Length != value)
                {
                    _Length = value;
                }
            }
        }
        private Nullable<decimal> _Length;

        /// <summary>
        /// Width
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                if (_Width != value)
                {
                    _Width = value;
                }
            }
        }
        private Nullable<decimal> _Width;

        /// <summary>
        /// Height
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                if (_Height != value)
                {
                    _Height = value;
                }
            }
        }
        private Nullable<decimal> _Height;

        /// <summary>
        /// Weight
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                if (_Weight != value)
                {
                    _Weight = value;
                }
            }
        }
        private Nullable<decimal> _Weight;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// PackingBox 기준 정보 HISTORY
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Packingboxdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Packingboxdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for durable definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Packingboxdefinitionid
        {
            get
            {
                return _Packingboxdefinitionid;
            }
            set
            {
                if (_Packingboxdefinitionid != value)
                {
                    _Packingboxdefinitionid = value;
                }
            }
        }
        private string _Packingboxdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Durable definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingboxdefinitionname
        {
            get
            {
                return _Packingboxdefinitionname;
            }
            set
            {
                if (_Packingboxdefinitionname != value)
                {
                    _Packingboxdefinitionname = value;
                }
            }
        }
        private string _Packingboxdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// BOX type : SMALLBOX | CARTON | MEDIUMBOX | PALLET
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingboxtype
        {
            get
            {
                return _Packingboxtype;
            }
            set
            {
                if (_Packingboxtype != value)
                {
                    _Packingboxtype = value;
                }
            }
        }
        private string _Packingboxtype;

        /// <summary>
        /// Detail box type : INNERBOX | OUTERBOX
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailpackingboxtype
        {
            get
            {
                return _Detailpackingboxtype;
            }
            set
            {
                if (_Detailpackingboxtype != value)
                {
                    _Detailpackingboxtype = value;
                }
            }
        }
        private string _Detailpackingboxtype;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Colortype
        {
            get
            {
                return _Colortype;
            }
            set
            {
                if (_Colortype != value)
                {
                    _Colortype = value;
                }
            }
        }
        private string _Colortype;

        /// <summary>
        /// LEGNTH
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                if (_Length != value)
                {
                    _Length = value;
                }
            }
        }
        private Nullable<decimal> _Length;

        /// <summary>
        /// WIDTH
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                if (_Width != value)
                {
                    _Width = value;
                }
            }
        }
        private Nullable<decimal> _Width;

        /// <summary>
        /// HEIGHT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                if (_Height != value)
                {
                    _Height = value;
                }
            }
        }
        private Nullable<decimal> _Height;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                if (_Weight != value)
                {
                    _Weight = value;
                }
            }
        }
        private Nullable<decimal> _Weight;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Material Lot Information 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Packingboxhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Packingboxhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for material lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Packingboxid
        {
            get
            {
                return _Packingboxid;
            }
            set
            {
                if (_Packingboxid != value)
                {
                    _Packingboxid = value;
                }
            }
        }
        private string _Packingboxid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Material lot name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingboxname
        {
            get
            {
                return _Packingboxname;
            }
            set
            {
                if (_Packingboxname != value)
                {
                    _Packingboxname = value;
                }
            }
        }
        private string _Packingboxname;

        /// <summary>
        /// Material definition id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingboxdefinitionid
        {
            get
            {
                return _Packingboxdefinitionid;
            }
            set
            {
                if (_Packingboxdefinitionid != value)
                {
                    _Packingboxdefinitionid = value;
                }
            }
        }
        private string _Packingboxdefinitionid;

        /// <summary>
        /// Type of material.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Packingboxtype
        {
            get
            {
                return _Packingboxtype;
            }
            set
            {
                if (_Packingboxtype != value)
                {
                    _Packingboxtype = value;
                }
            }
        }
        private string _Packingboxtype;

        /// <summary>
        /// Root parent material lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Rootmateriallotid
        {
            get
            {
                return _Rootmateriallotid;
            }
            set
            {
                if (_Rootmateriallotid != value)
                {
                    _Rootmateriallotid = value;
                }
            }
        }
        private string _Rootmateriallotid;

        /// <summary>
        /// Parent material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentmateriallotid
        {
            get
            {
                return _Parentmateriallotid;
            }
            set
            {
                if (_Parentmateriallotid != value)
                {
                    _Parentmateriallotid = value;
                }
            }
        }
        private string _Parentmateriallotid;

        /// <summary>
        /// Current state of material lot id. ex) Created, Active, Terminated, Scrapped, Hold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Received Quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Receivedquantity
        {
            get
            {
                return _Receivedquantity;
            }
            set
            {
                if (_Receivedquantity != value)
                {
                    _Receivedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Receivedquantity;

        /// <summary>
        /// Original qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Originalquantity
        {
            get
            {
                return _Originalquantity;
            }
            set
            {
                if (_Originalquantity != value)
                {
                    _Originalquantity = value;
                }
            }
        }
        private Nullable<decimal> _Originalquantity;

        /// <summary>
        /// Current qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Current location of material lot id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// HoldState OnHold | NotOnHold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// Received Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receivedtime
        {
            get
            {
                return _Receivedtime;
            }
            set
            {
                if (_Receivedtime != value)
                {
                    _Receivedtime = value;
                }
            }
        }
        private Nullable<DateTime> _Receivedtime;

        /// <summary>
        /// The time to be moved. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Movetime
        {
            get
            {
                return _Movetime;
            }
            set
            {
                if (_Movetime != value)
                {
                    _Movetime = value;
                }
            }
        }
        private Nullable<DateTime> _Movetime;

        /// <summary>
        /// The count that material lot is disassembled. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Reclaimcount
        {
            get
            {
                return _Reclaimcount;
            }
            set
            {
                if (_Reclaimcount != value)
                {
                    _Reclaimcount = value;
                }
            }
        }
        private Nullable<int> _Reclaimcount;

        /// <summary>
        /// Previous state of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Previous qty of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Prevquantity
        {
            get
            {
                return _Prevquantity;
            }
            set
            {
                if (_Prevquantity != value)
                {
                    _Prevquantity = value;
                }
            }
        }
        private Nullable<decimal> _Prevquantity;

        /// <summary>
        /// Previous location of material lot id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// The flag to determine whether or not to be Qty Managed
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isquantitymanaged
        {
            get
            {
                return _Isquantitymanaged;
            }
            set
            {
                if (_Isquantitymanaged != value)
                {
                    _Isquantitymanaged = value;
                }
            }
        }
        private string _Isquantitymanaged;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// person id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Personid
        {
            get
            {
                return _Personid;
            }
            set
            {
                if (_Personid != value)
                {
                    _Personid = value;
                }
            }
        }
        private string _Personid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// person name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Personname
        {
            get
            {
                return _Personname;
            }
            set
            {
                if (_Personname != value)
                {
                    _Personname = value;
                }
            }
        }
        private string _Personname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 작업자 작업 종류
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Personnelclassid
        {
            get
            {
                return _Personnelclassid;
            }
            set
            {
                if (_Personnelclassid != value)
                {
                    _Personnelclassid = value;
                }
            }
        }
        private string _Personnelclassid;

        /// <summary>
        /// 작업반 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewid
        {
            get
            {
                return _Workcrewid;
            }
            set
            {
                if (_Workcrewid != value)
                {
                    _Workcrewid = value;
                }
            }
        }
        private string _Workcrewid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자별 Location 할당 기준 데이터
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Personassign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personassign : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 작업자 ID : 사번
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=80, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Personid
        {
            get
            {
                return _Personid;
            }
            set
            {
                if (_Personid != value)
                {
                    _Personid = value;
                }
            }
        }
        private string _Personid;

        /// <summary>
        /// Location factory identifier
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Worker Group : GA ( Group A ), GB (Group B ) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workergroup
        {
            get
            {
                return _Workergroup;
            }
            set
            {
                if (_Workergroup != value)
                {
                    _Workergroup = value;
                }
            }
        }
        private string _Workergroup;

        /// <summary>
        /// Personnel capability ID : 조립, 검사/포장
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=80, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Capabilityid
        {
            get
            {
                return _Capabilityid;
            }
            set
            {
                if (_Capabilityid != value)
                {
                    _Capabilityid = value;
                }
            }
        }
        private string _Capabilityid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자별 Location 할당 기준 데이터  history 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Personassignhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personassignhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 작업자 ID : 사번
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=80, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Personid
        {
            get
            {
                return _Personid;
            }
            set
            {
                if (_Personid != value)
                {
                    _Personid = value;
                }
            }
        }
        private string _Personid;

        /// <summary>
        /// Location factory identifier
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Worker Group : GA ( Group A ), GB (Group B ) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workergroup
        {
            get
            {
                return _Workergroup;
            }
            set
            {
                if (_Workergroup != value)
                {
                    _Workergroup = value;
                }
            }
        }
        private string _Workergroup;

        /// <summary>
        /// Personnel capability ID : 조립, 검사/포장
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=80, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilityid
        {
            get
            {
                return _Capabilityid;
            }
            set
            {
                if (_Capabilityid != value)
                {
                    _Capabilityid = value;
                }
            }
        }
        private string _Capabilityid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자 HIST
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Personhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for person id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Personid
        {
            get
            {
                return _Personid;
            }
            set
            {
                if (_Personid != value)
                {
                    _Personid = value;
                }
            }
        }
        private string _Personid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Facility name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Personname
        {
            get
            {
                return _Personname;
            }
            set
            {
                if (_Personname != value)
                {
                    _Personname = value;
                }
            }
        }
        private string _Personname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 작업자 작업 종류
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Personnelclassid
        {
            get
            {
                return _Personnelclassid;
            }
            set
            {
                if (_Personnelclassid != value)
                {
                    _Personnelclassid = value;
                }
            }
        }
        private string _Personnelclassid;

        /// <summary>
        /// 작업반 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewid
        {
            get
            {
                return _Workcrewid;
            }
            set
            {
                if (_Workcrewid != value)
                {
                    _Workcrewid = value;
                }
            }
        }
        private string _Workcrewid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자 Capability 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Personnelcapability")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personnelcapability : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for object id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Personid
        {
            get
            {
                return _Personid;
            }
            set
            {
                if (_Personid != value)
                {
                    _Personid = value;
                }
            }
        }
        private string _Personid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// CAPABILITY적용 단위ID : ex. Equipment, Location
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Capabilityapplyid
        {
            get
            {
                return _Capabilityapplyid;
            }
            set
            {
                if (_Capabilityapplyid != value)
                {
                    _Capabilityapplyid = value;
                }
            }
        }
        private string _Capabilityapplyid;

        /// <summary>
        /// Personnel capability ID : 조립, 검사, 물류
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Capabilityid
        {
            get
            {
                return _Capabilityid;
            }
            set
            {
                if (_Capabilityid != value)
                {
                    _Capabilityid = value;
                }
            }
        }
        private string _Capabilityid;

        /// <summary>
        /// Personnel capability property ID :
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilitypropertyid
        {
            get
            {
                return _Capabilitypropertyid;
            }
            set
            {
                if (_Capabilitypropertyid != value)
                {
                    _Capabilitypropertyid = value;
                }
            }
        }
        private string _Capabilitypropertyid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// The value, set of values, or range of the property.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private string _Quantity;

        /// <summary>
        /// The starting time associated with the personnel capability. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// The ending time associated with the personnel capability
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private Nullable<DateTime> _Endtime;

        /// <summary>
        /// 누적작업시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Cumulativeworktime
        {
            get
            {
                return _Cumulativeworktime;
            }
            set
            {
                if (_Cumulativeworktime != value)
                {
                    _Cumulativeworktime = value;
                }
            }
        }
        private Nullable<decimal> _Cumulativeworktime;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자 Capability 정보 HIST
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Personnelcapabilityhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personnelcapabilityhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for object id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Personid
        {
            get
            {
                return _Personid;
            }
            set
            {
                if (_Personid != value)
                {
                    _Personid = value;
                }
            }
        }
        private string _Personid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// CAPABILITY적용 단위ID : ex. Equipment, Location
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilityapplyid
        {
            get
            {
                return _Capabilityapplyid;
            }
            set
            {
                if (_Capabilityapplyid != value)
                {
                    _Capabilityapplyid = value;
                }
            }
        }
        private string _Capabilityapplyid;

        /// <summary>
        /// Personnel capability ID : 조립, 검사
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilityid
        {
            get
            {
                return _Capabilityid;
            }
            set
            {
                if (_Capabilityid != value)
                {
                    _Capabilityid = value;
                }
            }
        }
        private string _Capabilityid;

        /// <summary>
        /// Personnel capability property ID :
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilitypropertyid
        {
            get
            {
                return _Capabilitypropertyid;
            }
            set
            {
                if (_Capabilitypropertyid != value)
                {
                    _Capabilitypropertyid = value;
                }
            }
        }
        private string _Capabilitypropertyid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// The value, set of values, or range of the property.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private string _Quantity;

        /// <summary>
        /// The starting time associated with the personnel capability. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// The ending time associated with the personnel capability
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private Nullable<DateTime> _Endtime;

        /// <summary>
        /// 누적작업시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Cumulativeworktime
        {
            get
            {
                return _Cumulativeworktime;
            }
            set
            {
                if (_Cumulativeworktime != value)
                {
                    _Cumulativeworktime = value;
                }
            }
        }
        private Nullable<decimal> _Cumulativeworktime;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Personnelclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personnelclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for location class id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Personnelclassid
        {
            get
            {
                return _Personnelclassid;
            }
            set
            {
                if (_Personnelclassid != value)
                {
                    _Personnelclassid = value;
                }
            }
        }
        private string _Personnelclassid;

        /// <summary>
        /// Location class name. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Personnelclassname
        {
            get
            {
                return _Personnelclassname;
            }
            set
            {
                if (_Personnelclassname != value)
                {
                    _Personnelclassname = value;
                }
            }
        }
        private string _Personnelclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자 분류 HIST
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Personnelclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personnelclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for location class id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Personnelclassid
        {
            get
            {
                return _Personnelclassid;
            }
            set
            {
                if (_Personnelclassid != value)
                {
                    _Personnelclassid = value;
                }
            }
        }
        private string _Personnelclassid;

        /// <summary>
        /// Location class name. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Personnelclassname
        {
            get
            {
                return _Personnelclassname;
            }
            set
            {
                if (_Personnelclassname != value)
                {
                    _Personnelclassname = value;
                }
            }
        }
        private string _Personnelclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자별 작업 계획 및 대체(실적)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Personplan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personplan : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Unique identifier for object id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Personid
        {
            get
            {
                return _Personid;
            }
            set
            {
                if (_Personid != value)
                {
                    _Personid = value;
                }
            }
        }
        private string _Personid;

        /// <summary>
        /// A factory date [YYYYMMDD]
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// A factory shift
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryshift
        {
            get
            {
                return _Factoryshift;
            }
            set
            {
                if (_Factoryshift != value)
                {
                    _Factoryshift = value;
                }
            }
        }
        private string _Factoryshift;

        /// <summary>
        /// 할돵된 LOCATION ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// WORKWORDERID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=6, Default="'-'")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// 작업자 역할 ( 조립,  검사/포장)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=7, Default="")]
        [DataMemberAttribute()]
        public string Capabilityid
        {
            get
            {
                return _Capabilityid;
            }
            set
            {
                if (_Capabilityid != value)
                {
                    _Capabilityid = value;
                }
            }
        }
        private string _Capabilityid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// 작업반 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewid
        {
            get
            {
                return _Workcrewid;
            }
            set
            {
                if (_Workcrewid != value)
                {
                    _Workcrewid = value;
                }
            }
        }
        private string _Workcrewid;

        /// <summary>
        /// 작업자가 설비에 할당된 비율
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Workrate
        {
            get
            {
                return _Workrate;
            }
            set
            {
                if (_Workrate != value)
                {
                    _Workrate = value;
                }
            }
        }
        private Nullable<decimal> _Workrate;

        /// <summary>
        /// 작업 시작 시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// 작업 종료 시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private Nullable<DateTime> _Endtime;

        /// <summary>
        /// 진행상태 Plan/Actual
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Confirmstate
        {
            get
            {
                return _Confirmstate;
            }
            set
            {
                if (_Confirmstate != value)
                {
                    _Confirmstate = value;
                }
            }
        }
        private string _Confirmstate;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code. 계획 | 대체| 지원  Scheduled | Substitude | 지원
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자별 작업 계획 및 대체 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Personplanhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personplanhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Unique identifier for object id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Personid
        {
            get
            {
                return _Personid;
            }
            set
            {
                if (_Personid != value)
                {
                    _Personid = value;
                }
            }
        }
        private string _Personid;

        /// <summary>
        /// A factory date [YYYYMMDD]
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// A factory shift
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryshift
        {
            get
            {
                return _Factoryshift;
            }
            set
            {
                if (_Factoryshift != value)
                {
                    _Factoryshift = value;
                }
            }
        }
        private string _Factoryshift;

        /// <summary>
        /// 할돵된 LOCATION ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// WORKORDERID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'-'")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// 작업자 역할 ( 조립,  검사/포장)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Capabilityid
        {
            get
            {
                return _Capabilityid;
            }
            set
            {
                if (_Capabilityid != value)
                {
                    _Capabilityid = value;
                }
            }
        }
        private string _Capabilityid;

        /// <summary>
        /// 작업반 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewid
        {
            get
            {
                return _Workcrewid;
            }
            set
            {
                if (_Workcrewid != value)
                {
                    _Workcrewid = value;
                }
            }
        }
        private string _Workcrewid;

        /// <summary>
        /// 작업자가 설비에 할당된 비율
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Workrate
        {
            get
            {
                return _Workrate;
            }
            set
            {
                if (_Workrate != value)
                {
                    _Workrate = value;
                }
            }
        }
        private Nullable<decimal> _Workrate;

        /// <summary>
        /// 작업 시작 시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// 작업 종료 시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private Nullable<DateTime> _Endtime;

        /// <summary>
        /// 작업자 작업 시작  CONFIRM 여부 Y/N
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Confirmstate
        {
            get
            {
                return _Confirmstate;
            }
            set
            {
                if (_Confirmstate != value)
                {
                    _Confirmstate = value;
                }
            }
        }
        private string _Confirmstate;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code. 계획 | 대체| 지원  Scheduled | Substitude | 지원
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업자 상태 (비가동) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Personstate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personstate : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for object id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Personid
        {
            get
            {
                return _Personid;
            }
            set
            {
                if (_Personid != value)
                {
                    _Personid = value;
                }
            }
        }
        private string _Personid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// A factory date [YYYYMMDD]
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// A factory shift
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryshift
        {
            get
            {
                return _Factoryshift;
            }
            set
            {
                if (_Factoryshift != value)
                {
                    _Factoryshift = value;
                }
            }
        }
        private string _Factoryshift;

        /// <summary>
        /// 작업반
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewid
        {
            get
            {
                return _Workcrewid;
            }
            set
            {
                if (_Workcrewid != value)
                {
                    _Workcrewid = value;
                }
            }
        }
        private string _Workcrewid;

        /// <summary>
        /// 작업 할당된 라인
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// WORKORDERID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// 비가동시작시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// 비가동완료시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private Nullable<DateTime> _Endtime;

        /// <summary>
        /// 작업자가 설비에 할당된 비율
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Workrate
        {
            get
            {
                return _Workrate;
            }
            set
            {
                if (_Workrate != value)
                {
                    _Workrate = value;
                }
            }
        }
        private Nullable<decimal> _Workrate;

        /// <summary>
        /// 비가동코드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// 귀책구분
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Responsibletype
        {
            get
            {
                return _Responsibletype;
            }
            set
            {
                if (_Responsibletype != value)
                {
                    _Responsibletype = value;
                }
            }
        }
        private string _Responsibletype;

        /// <summary>
        /// 귀책처
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Responsible
        {
            get
            {
                return _Responsible;
            }
            set
            {
                if (_Responsible != value)
                {
                    _Responsible = value;
                }
            }
        }
        private string _Responsible;

        /// <summary>
        /// 원인품목
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Causematerialdefinitionid
        {
            get
            {
                return _Causematerialdefinitionid;
            }
            set
            {
                if (_Causematerialdefinitionid != value)
                {
                    _Causematerialdefinitionid = value;
                }
            }
        }
        private string _Causematerialdefinitionid;

        /// <summary>
        /// 조치내용
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Actiondetails
        {
            get
            {
                return _Actiondetails;
            }
            set
            {
                if (_Actiondetails != value)
                {
                    _Actiondetails = value;
                }
            }
        }
        private string _Actiondetails;

        /// <summary>
        /// 관리자  CONFIRM 여부 Y/N
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Confirm
        {
            get
            {
                return _Confirm;
            }
            set
            {
                if (_Confirm != value)
                {
                    _Confirm = value;
                }
            }
        }
        private string _Confirm;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emsbmreqno
        {
            get
            {
                return _Emsbmreqno;
            }
            set
            {
                if (_Emsbmreqno != value)
                {
                    _Emsbmreqno = value;
                }
            }
        }
        private string _Emsbmreqno;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비의 Port
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Port")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Port : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Port of the production Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Portid
        {
            get
            {
                return _Portid;
            }
            set
            {
                if (_Portid != value)
                {
                    _Portid = value;
                }
            }
        }
        private string _Portid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Current state. (ref. FOM_STATE) ex) UP|DOWN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous State
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// StateModel of Port
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statemodel
        {
            get
            {
                return _Statemodel;
            }
            set
            {
                if (_Statemodel != value)
                {
                    _Statemodel = value;
                }
            }
        }
        private string _Statemodel;

        /// <summary>
        /// Mode of access to the port of the factory - Auto | Manual
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Accessmode
        {
            get
            {
                return _Accessmode;
            }
            set
            {
                if (_Accessmode != value)
                {
                    _Accessmode = value;
                }
            }
        }
        private string _Accessmode;

        /// <summary>
        /// The port type of production equipment - Input | Output | InOutput
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Porttype
        {
            get
            {
                return _Porttype;
            }
            set
            {
                if (_Porttype != value)
                {
                    _Porttype = value;
                }
            }
        }
        private string _Porttype;

        /// <summary>
        /// Port Transfer State Ex) Processing, ReadyToLoad, ReadyToProcess, ReadyToUnload, ReservedToLoad, ReservedToUnload
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferstate
        {
            get
            {
                return _Transferstate;
            }
            set
            {
                if (_Transferstate != value)
                {
                    _Transferstate = value;
                }
            }
        }
        private string _Transferstate;

        /// <summary>
        /// Carrier ID at port
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비의 Port Definition
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Portdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Portdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Port of the production Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Portid
        {
            get
            {
                return _Portid;
            }
            set
            {
                if (_Portid != value)
                {
                    _Portid = value;
                }
            }
        }
        private string _Portid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// The model number of a particular facility Port
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Model
        {
            get
            {
                return _Model;
            }
            set
            {
                if (_Model != value)
                {
                    _Model = value;
                }
            }
        }
        private string _Model;

        /// <summary>
        /// Serial number of equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Serialno
        {
            get
            {
                return _Serialno;
            }
            set
            {
                if (_Serialno != value)
                {
                    _Serialno = value;
                }
            }
        }
        private string _Serialno;

        /// <summary>
        /// Vendor id. (ref. FOM_VENDOR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// Port location of the equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Previous Port location of the equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비의 Port Definition 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Portdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Portdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Port of the production Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Portid
        {
            get
            {
                return _Portid;
            }
            set
            {
                if (_Portid != value)
                {
                    _Portid = value;
                }
            }
        }
        private string _Portid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// The model number of a particular facility Port
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Model
        {
            get
            {
                return _Model;
            }
            set
            {
                if (_Model != value)
                {
                    _Model = value;
                }
            }
        }
        private string _Model;

        /// <summary>
        /// Serial number of equipment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Serialno
        {
            get
            {
                return _Serialno;
            }
            set
            {
                if (_Serialno != value)
                {
                    _Serialno = value;
                }
            }
        }
        private string _Serialno;

        /// <summary>
        /// Vendor id. (ref. FOM_VENDOR)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Vendorid
        {
            get
            {
                return _Vendorid;
            }
            set
            {
                if (_Vendorid != value)
                {
                    _Vendorid = value;
                }
            }
        }
        private string _Vendorid;

        /// <summary>
        /// Port location of the equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Previous Port location of the equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlocationid
        {
            get
            {
                return _Prevlocationid;
            }
            set
            {
                if (_Prevlocationid != value)
                {
                    _Prevlocationid = value;
                }
            }
        }
        private string _Prevlocationid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비의 Port 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Porthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Porthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Port of the production Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Portid
        {
            get
            {
                return _Portid;
            }
            set
            {
                if (_Portid != value)
                {
                    _Portid = value;
                }
            }
        }
        private string _Portid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Current state. (ref. FOM_STATE) ex) UP|DOWN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous State
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// StateModel of Port
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statemodel
        {
            get
            {
                return _Statemodel;
            }
            set
            {
                if (_Statemodel != value)
                {
                    _Statemodel = value;
                }
            }
        }
        private string _Statemodel;

        /// <summary>
        /// Mode of access to the port of the factory - Auto | Manual
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Accessmode
        {
            get
            {
                return _Accessmode;
            }
            set
            {
                if (_Accessmode != value)
                {
                    _Accessmode = value;
                }
            }
        }
        private string _Accessmode;

        /// <summary>
        /// The port type of production equipment - Input | Output | InOutput
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Porttype
        {
            get
            {
                return _Porttype;
            }
            set
            {
                if (_Porttype != value)
                {
                    _Porttype = value;
                }
            }
        }
        private string _Porttype;

        /// <summary>
        /// Port Transfer State Ex) Processing, ReadyToLoad, ReadyToProcess, ReadyToUnload, ReservedToLoad, ReservedToUnload
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferstate
        {
            get
            {
                return _Transferstate;
            }
            set
            {
                if (_Transferstate != value)
                {
                    _Transferstate = value;
                }
            }
        }
        private string _Transferstate;

        /// <summary>
        /// Carrier ID at port
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 flow 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for process definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionname
        {
            get
            {
                return _Processdefinitionname;
            }
            set
            {
                if (_Processdefinitionname != value)
                {
                    _Processdefinitionname = value;
                }
            }
        }
        private string _Processdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of process.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processtype
        {
            get
            {
                return _Processtype;
            }
            set
            {
                if (_Processtype != value)
                {
                    _Processtype = value;
                }
            }
        }
        private string _Processtype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 flow 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for process definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionname
        {
            get
            {
                return _Processdefinitionname;
            }
            set
            {
                if (_Processdefinitionname != value)
                {
                    _Processdefinitionname = value;
                }
            }
        }
        private string _Processdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of process.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processtype
        {
            get
            {
                return _Processtype;
            }
            set
            {
                if (_Processtype != value)
                {
                    _Processtype = value;
                }
            }
        }
        private string _Processtype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 현재 생성된 Batch; Batch or Box or Pallet
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processgroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processgroup : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for batch id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Processgroupid
        {
            get
            {
                return _Processgroupid;
            }
            set
            {
                if (_Processgroupid != value)
                {
                    _Processgroupid = value;
                }
            }
        }
        private string _Processgroupid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Batch name. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processgroupname
        {
            get
            {
                return _Processgroupname;
            }
            set
            {
                if (_Processgroupname != value)
                {
                    _Processgroupname = value;
                }
            }
        }
        private string _Processgroupname;

        /// <summary>
        /// Type of batch. - Batch | Box | Pallet
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processgrouptype
        {
            get
            {
                return _Processgrouptype;
            }
            set
            {
                if (_Processgrouptype != value)
                {
                    _Processgrouptype = value;
                }
            }
        }
        private string _Processgrouptype;

        /// <summary>
        /// Parent ProcessGroupID, ProcessGroup has nested ProcessGroup
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentprocessgroupid
        {
            get
            {
                return _Parentprocessgroupid;
            }
            set
            {
                if (_Parentprocessgroupid != value)
                {
                    _Parentprocessgroupid = value;
                }
            }
        }
        private string _Parentprocessgroupid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Productquantity
        {
            get
            {
                return _Productquantity;
            }
            set
            {
                if (_Productquantity != value)
                {
                    _Productquantity = value;
                }
            }
        }
        private Nullable<decimal> _Productquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Barcodeid
        {
            get
            {
                return _Barcodeid;
            }
            set
            {
                if (_Barcodeid != value)
                {
                    _Barcodeid = value;
                }
            }
        }
        private string _Barcodeid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=8000, DataSize=8000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Zebraprintcode
        {
            get
            {
                return _Zebraprintcode;
            }
            set
            {
                if (_Zebraprintcode != value)
                {
                    _Zebraprintcode = value;
                }
            }
        }
        private string _Zebraprintcode;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="char", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Lotsupplement
        {
            get
            {
                return _Lotsupplement;
            }
            set
            {
                if (_Lotsupplement != value)
                {
                    _Lotsupplement = value;
                }
            }
        }
        private string _Lotsupplement;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 현재 생성된 Batch; Batch or Box or Pallet 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processgrouphist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processgrouphist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for batch id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processgroupid
        {
            get
            {
                return _Processgroupid;
            }
            set
            {
                if (_Processgroupid != value)
                {
                    _Processgroupid = value;
                }
            }
        }
        private string _Processgroupid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Batch name. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processgroupname
        {
            get
            {
                return _Processgroupname;
            }
            set
            {
                if (_Processgroupname != value)
                {
                    _Processgroupname = value;
                }
            }
        }
        private string _Processgroupname;

        /// <summary>
        /// Type of batch. - Batch | Box | Pallet
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processgrouptype
        {
            get
            {
                return _Processgrouptype;
            }
            set
            {
                if (_Processgrouptype != value)
                {
                    _Processgrouptype = value;
                }
            }
        }
        private string _Processgrouptype;

        /// <summary>
        /// Parent ProcessGroupID, ProcessGroup has nested ProcessGroup
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentprocessgroupid
        {
            get
            {
                return _Parentprocessgroupid;
            }
            set
            {
                if (_Parentprocessgroupid != value)
                {
                    _Parentprocessgroupid = value;
                }
            }
        }
        private string _Parentprocessgroupid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Productquantity
        {
            get
            {
                return _Productquantity;
            }
            set
            {
                if (_Productquantity != value)
                {
                    _Productquantity = value;
                }
            }
        }
        private Nullable<decimal> _Productquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Barcodeid
        {
            get
            {
                return _Barcodeid;
            }
            set
            {
                if (_Barcodeid != value)
                {
                    _Barcodeid = value;
                }
            }
        }
        private string _Barcodeid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=8000, DataSize=8000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Zebraprintcode
        {
            get
            {
                return _Zebraprintcode;
            }
            set
            {
                if (_Zebraprintcode != value)
                {
                    _Zebraprintcode = value;
                }
            }
        }
        private string _Zebraprintcode;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="char", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Lotsupplement
        {
            get
            {
                return _Lotsupplement;
            }
            set
            {
                if (_Lotsupplement != value)
                {
                    _Lotsupplement = value;
                }
            }
        }
        private string _Lotsupplement;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 node 정의 (Sub flow 또는 공정에 대한 참조)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processnode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processnode : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for process node id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process node name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodename
        {
            get
            {
                return _Processnodename;
            }
            set
            {
                if (_Processnodename != value)
                {
                    _Processnodename = value;
                }
            }
        }
        private string _Processnodename;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Process definition id. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Type of process node. ex) S : Segment, P : Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodetype
        {
            get
            {
                return _Processnodetype;
            }
            set
            {
                if (_Processnodetype != value)
                {
                    _Processnodetype = value;
                }
            }
        }
        private string _Processnodetype;

        /// <summary>
        /// Sub Process definition id. ex) if PROCESSNODETYPE = P then exists else null. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subprocessdefinitionid
        {
            get
            {
                return _Subprocessdefinitionid;
            }
            set
            {
                if (_Subprocessdefinitionid != value)
                {
                    _Subprocessdefinitionid = value;
                }
            }
        }
        private string _Subprocessdefinitionid;

        /// <summary>
        /// Process segment id. ex) if PROCESSNODETYPE = P then null else exists. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// The flag to determine whether or not to be a start node.  ex) if start node then Y else N.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isstartnode
        {
            get
            {
                return _Isstartnode;
            }
            set
            {
                if (_Isstartnode != value)
                {
                    _Isstartnode = value;
                }
            }
        }
        private string _Isstartnode;

        /// <summary>
        /// The flag to determine whether or not to be a end node.  ex) if end node then Y else N.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isendnode
        {
            get
            {
                return _Isendnode;
            }
            set
            {
                if (_Isendnode != value)
                {
                    _Isendnode = value;
                }
            }
        }
        private string _Isendnode;

        /// <summary>
        /// ProcessNode Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Processnodesequence
        {
            get
            {
                return _Processnodesequence;
            }
            set
            {
                if (_Processnodesequence != value)
                {
                    _Processnodesequence = value;
                }
            }
        }
        private Nullable<int> _Processnodesequence;

        /// <summary>
        /// X-Coordinate of the process Progress Display Factory Modeler
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> X
        {
            get
            {
                return _X;
            }
            set
            {
                if (_X != value)
                {
                    _X = value;
                }
            }
        }
        private Nullable<decimal> _X;

        /// <summary>
        /// Y-Coordinate of the process Progress Display Factory Modeler
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Y
        {
            get
            {
                return _Y;
            }
            set
            {
                if (_Y != value)
                {
                    _Y = value;
                }
            }
        }
        private Nullable<decimal> _Y;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 node 정의 (Sub flow 또는 공정에 대한 참조) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processnodehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processnodehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for process node id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process node name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodename
        {
            get
            {
                return _Processnodename;
            }
            set
            {
                if (_Processnodename != value)
                {
                    _Processnodename = value;
                }
            }
        }
        private string _Processnodename;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Process definition id. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Type of process node. ex) S : Segment, P : Process
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodetype
        {
            get
            {
                return _Processnodetype;
            }
            set
            {
                if (_Processnodetype != value)
                {
                    _Processnodetype = value;
                }
            }
        }
        private string _Processnodetype;

        /// <summary>
        /// Sub Process definition id. ex) if PROCESSNODETYPE = P then exists else null. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subprocessdefinitionid
        {
            get
            {
                return _Subprocessdefinitionid;
            }
            set
            {
                if (_Subprocessdefinitionid != value)
                {
                    _Subprocessdefinitionid = value;
                }
            }
        }
        private string _Subprocessdefinitionid;

        /// <summary>
        /// Process segment id. ex) if PROCESSNODETYPE = P then null else exists. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// The flag to determine whether or not to be a start node.  ex) if start node then Y else N.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isstartnode
        {
            get
            {
                return _Isstartnode;
            }
            set
            {
                if (_Isstartnode != value)
                {
                    _Isstartnode = value;
                }
            }
        }
        private string _Isstartnode;

        /// <summary>
        /// The flag to determine whether or not to be a end node.  ex) if end node then Y else N.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isendnode
        {
            get
            {
                return _Isendnode;
            }
            set
            {
                if (_Isendnode != value)
                {
                    _Isendnode = value;
                }
            }
        }
        private string _Isendnode;

        /// <summary>
        /// ProcessNode Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Processnodesequence
        {
            get
            {
                return _Processnodesequence;
            }
            set
            {
                if (_Processnodesequence != value)
                {
                    _Processnodesequence = value;
                }
            }
        }
        private Nullable<int> _Processnodesequence;

        /// <summary>
        /// X-Coordinate of the process Progress Display Factory Modeler
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> X
        {
            get
            {
                return _X;
            }
            set
            {
                if (_X != value)
                {
                    _X = value;
                }
            }
        }
        private Nullable<decimal> _X;

        /// <summary>
        /// Y-Coordinate of the process Progress Display Factory Modeler
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Y
        {
            get
            {
                return _Y;
            }
            set
            {
                if (_Y != value)
                {
                    _Y = value;
                }
            }
        }
        private Nullable<decimal> _Y;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 단위 작업 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processoperation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processoperation : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for process segment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Processoperationid
        {
            get
            {
                return _Processoperationid;
            }
            set
            {
                if (_Processoperationid != value)
                {
                    _Processoperationid = value;
                }
            }
        }
        private string _Processoperationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process segment name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processoperationname
        {
            get
            {
                return _Processoperationname;
            }
            set
            {
                if (_Processoperationname != value)
                {
                    _Processoperationname = value;
                }
            }
        }
        private string _Processoperationname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of segment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Operationtype
        {
            get
            {
                return _Operationtype;
            }
            set
            {
                if (_Operationtype != value)
                {
                    _Operationtype = value;
                }
            }
        }
        private string _Operationtype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 단위 작업 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processoperationhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processoperationhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for process segment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Processoperationid
        {
            get
            {
                return _Processoperationid;
            }
            set
            {
                if (_Processoperationid != value)
                {
                    _Processoperationid = value;
                }
            }
        }
        private string _Processoperationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process segment name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processoperationname
        {
            get
            {
                return _Processoperationname;
            }
            set
            {
                if (_Processoperationname != value)
                {
                    _Processoperationname = value;
                }
            }
        }
        private string _Processoperationname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of segment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Operationtype
        {
            get
            {
                return _Operationtype;
            }
            set
            {
                if (_Operationtype != value)
                {
                    _Operationtype = value;
                }
            }
        }
        private string _Operationtype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 node간의 연결 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processpath")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processpath : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for process path id. ex) PASS, PASS2, PASS3
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Processpathid
        {
            get
            {
                return _Processpathid;
            }
            set
            {
                if (_Processpathid != value)
                {
                    _Processpathid = value;
                }
            }
        }
        private string _Processpathid;

        /// <summary>
        /// Process node id. (ref. FOM_PROCESSNODE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process path name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processpathname
        {
            get
            {
                return _Processpathname;
            }
            set
            {
                if (_Processpathname != value)
                {
                    _Processpathname = value;
                }
            }
        }
        private string _Processpathname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Next process node id. (ref. FOM_PROCESSNODE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Nextprocessnodeid
        {
            get
            {
                return _Nextprocessnodeid;
            }
            set
            {
                if (_Nextprocessnodeid != value)
                {
                    _Nextprocessnodeid = value;
                }
            }
        }
        private string _Nextprocessnodeid;

        /// <summary>
        /// The priority of multi-path.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// The flag to determine whether or not to be dispatched automatically. ex) if Y then auto dispatched.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isautodispatch
        {
            get
            {
                return _Isautodispatch;
            }
            set
            {
                if (_Isautodispatch != value)
                {
                    _Isautodispatch = value;
                }
            }
        }
        private string _Isautodispatch;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 node간의 연결 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processpathhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processpathhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for process path id. ex) PASS, PASS2, PASS3
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processpathid
        {
            get
            {
                return _Processpathid;
            }
            set
            {
                if (_Processpathid != value)
                {
                    _Processpathid = value;
                }
            }
        }
        private string _Processpathid;

        /// <summary>
        /// Process node id. (ref. FOM_PROCESSNODE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process path name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processpathname
        {
            get
            {
                return _Processpathname;
            }
            set
            {
                if (_Processpathname != value)
                {
                    _Processpathname = value;
                }
            }
        }
        private string _Processpathname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Next process node id. (ref. FOM_PROCESSNODE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Nextprocessnodeid
        {
            get
            {
                return _Nextprocessnodeid;
            }
            set
            {
                if (_Nextprocessnodeid != value)
                {
                    _Nextprocessnodeid = value;
                }
            }
        }
        private string _Nextprocessnodeid;

        /// <summary>
        /// The priority of multi-path.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// The flag to determine whether or not to be dispatched automatically. ex) if Y then auto dispatched.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isautodispatch
        {
            get
            {
                return _Isautodispatch;
            }
            set
            {
                if (_Isautodispatch != value)
                {
                    _Isautodispatch = value;
                }
            }
        }
        private string _Isautodispatch;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processsegment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processsegment : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for process segment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process segment name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentname
        {
            get
            {
                return _Processsegmentname;
            }
            set
            {
                if (_Processsegmentname != value)
                {
                    _Processsegmentname = value;
                }
            }
        }
        private string _Processsegmentname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Process segment rule class id. (ref. FOM_PROCESSSEGMENTRULECLASS) 공정구분 - ASSY..
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleclassid
        {
            get
            {
                return _Processsegmentruleclassid;
            }
            set
            {
                if (_Processsegmentruleclassid != value)
                {
                    _Processsegmentruleclassid = value;
                }
            }
        }
        private string _Processsegmentruleclassid;

        /// <summary>
        /// Type of segment. PROCESS | BANK
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Segmenttype
        {
            get
            {
                return _Segmenttype;
            }
            set
            {
                if (_Segmenttype != value)
                {
                    _Segmenttype = value;
                }
            }
        }
        private string _Segmenttype;

        /// <summary>
        /// This is a mapping code of ERP.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Erpcodeid
        {
            get
            {
                return _Erpcodeid;
            }
            set
            {
                if (_Erpcodeid != value)
                {
                    _Erpcodeid = value;
                }
            }
        }
        private string _Erpcodeid;

        /// <summary>
        /// The flag to determine whether or not to be interfaced with ERP.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Iserpinterface
        {
            get
            {
                return _Iserpinterface;
            }
            set
            {
                if (_Iserpinterface != value)
                {
                    _Iserpinterface = value;
                }
            }
        }
        private string _Iserpinterface;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processsegmenthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processsegmenthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for process segment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process segment name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentname
        {
            get
            {
                return _Processsegmentname;
            }
            set
            {
                if (_Processsegmentname != value)
                {
                    _Processsegmentname = value;
                }
            }
        }
        private string _Processsegmentname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Process segment rule class id. (ref. FOM_PROCESSSEGMENTRULECLASS) 공정구분 - ASSY..
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleclassid
        {
            get
            {
                return _Processsegmentruleclassid;
            }
            set
            {
                if (_Processsegmentruleclassid != value)
                {
                    _Processsegmentruleclassid = value;
                }
            }
        }
        private string _Processsegmentruleclassid;

        /// <summary>
        /// Type of segment. PROCESS | BANK
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Segmenttype
        {
            get
            {
                return _Segmenttype;
            }
            set
            {
                if (_Segmenttype != value)
                {
                    _Segmenttype = value;
                }
            }
        }
        private string _Segmenttype;

        /// <summary>
        /// This is a mapping code of ERP.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Erpcodeid
        {
            get
            {
                return _Erpcodeid;
            }
            set
            {
                if (_Erpcodeid != value)
                {
                    _Erpcodeid = value;
                }
            }
        }
        private string _Erpcodeid;

        /// <summary>
        /// The flag to determine whether or not to be interfaced with ERP.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Iserpinterface
        {
            get
            {
                return _Iserpinterface;
            }
            set
            {
                if (_Iserpinterface != value)
                {
                    _Iserpinterface = value;
                }
            }
        }
        private string _Iserpinterface;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 rule 정의 (TrackIn / TrackOut 등)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processsegmentrule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processsegmentrule : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for process segment rule id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleid
        {
            get
            {
                return _Processsegmentruleid;
            }
            set
            {
                if (_Processsegmentruleid != value)
                {
                    _Processsegmentruleid = value;
                }
            }
        }
        private string _Processsegmentruleid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process segment rule id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentrulename
        {
            get
            {
                return _Processsegmentrulename;
            }
            set
            {
                if (_Processsegmentrulename != value)
                {
                    _Processsegmentrulename = value;
                }
            }
        }
        private string _Processsegmentrulename;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// System rule Id EX) TrackIn/TrackOut
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Systemruleid
        {
            get
            {
                return _Systemruleid;
            }
            set
            {
                if (_Systemruleid != value)
                {
                    _Systemruleid = value;
                }
            }
        }
        private string _Systemruleid;

        /// <summary>
        /// The flag to determine whether or not to be Mandatory ex) if Y then autorun DispatchWorkLot 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Ismandatory
        {
            get
            {
                return _Ismandatory;
            }
            set
            {
                if (_Ismandatory != value)
                {
                    _Ismandatory = value;
                }
            }
        }
        private string _Ismandatory;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 rule의 분류 (Ex. Normal - Trackin / TrackOut)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processsegmentrulecls")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processsegmentrulecls : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for process segment rule class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleclsid
        {
            get
            {
                return _Processsegmentruleclsid;
            }
            set
            {
                if (_Processsegmentruleclsid != value)
                {
                    _Processsegmentruleclsid = value;
                }
            }
        }
        private string _Processsegmentruleclsid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process segment rule class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleclsname
        {
            get
            {
                return _Processsegmentruleclsname;
            }
            set
            {
                if (_Processsegmentruleclsname != value)
                {
                    _Processsegmentruleclsname = value;
                }
            }
        }
        private string _Processsegmentruleclsname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 rule의 분류 (Ex. Normal - Trackin / TrackOut) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processsegmentruleclshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processsegmentruleclshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for process segment rule class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleclsid
        {
            get
            {
                return _Processsegmentruleclsid;
            }
            set
            {
                if (_Processsegmentruleclsid != value)
                {
                    _Processsegmentruleclsid = value;
                }
            }
        }
        private string _Processsegmentruleclsid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process segment rule class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleclsname
        {
            get
            {
                return _Processsegmentruleclsname;
            }
            set
            {
                if (_Processsegmentruleclsname != value)
                {
                    _Processsegmentruleclsname = value;
                }
            }
        }
        private string _Processsegmentruleclsname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 rule과 분류 관계
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processsegmentruleclsrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processsegmentruleclsrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Process segment rule class id. (ref. FOM_PROCESSSEGMENTRULECLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleclsid
        {
            get
            {
                return _Processsegmentruleclsid;
            }
            set
            {
                if (_Processsegmentruleclsid != value)
                {
                    _Processsegmentruleclsid = value;
                }
            }
        }
        private string _Processsegmentruleclsid;

        /// <summary>
        /// Process segment rule id. (ref. FOM_PROCESSSEGMENTRULE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleid
        {
            get
            {
                return _Processsegmentruleid;
            }
            set
            {
                if (_Processsegmentruleid != value)
                {
                    _Processsegmentruleid = value;
                }
            }
        }
        private string _Processsegmentruleid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process segment rule class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleclsname
        {
            get
            {
                return _Processsegmentruleclsname;
            }
            set
            {
                if (_Processsegmentruleclsname != value)
                {
                    _Processsegmentruleclsname = value;
                }
            }
        }
        private string _Processsegmentruleclsname;

        /// <summary>
        /// Sequence of rule id to be called by UI or EC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Rulepriority
        {
            get
            {
                return _Rulepriority;
            }
            set
            {
                if (_Rulepriority != value)
                {
                    _Rulepriority = value;
                }
            }
        }
        private Nullable<int> _Rulepriority;

        /// <summary>
        /// The flag to determine whether or not to be a start rule id.  ex) if start rule id then Y else N.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isstart
        {
            get
            {
                return _Isstart;
            }
            set
            {
                if (_Isstart != value)
                {
                    _Isstart = value;
                }
            }
        }
        private string _Isstart;

        /// <summary>
        /// The flag to determine whether or not to be a end rule id.  ex) if end rule id then Y else N.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isend
        {
            get
            {
                return _Isend;
            }
            set
            {
                if (_Isend != value)
                {
                    _Isend = value;
                }
            }
        }
        private string _Isend;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processsegmentruleclsrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processsegmentruleclsrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleclsid
        {
            get
            {
                return _Processsegmentruleclsid;
            }
            set
            {
                if (_Processsegmentruleclsid != value)
                {
                    _Processsegmentruleclsid = value;
                }
            }
        }
        private string _Processsegmentruleclsid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleid
        {
            get
            {
                return _Processsegmentruleid;
            }
            set
            {
                if (_Processsegmentruleid != value)
                {
                    _Processsegmentruleid = value;
                }
            }
        }
        private string _Processsegmentruleid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleclsname
        {
            get
            {
                return _Processsegmentruleclsname;
            }
            set
            {
                if (_Processsegmentruleclsname != value)
                {
                    _Processsegmentruleclsname = value;
                }
            }
        }
        private string _Processsegmentruleclsname;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Rulepriority
        {
            get
            {
                return _Rulepriority;
            }
            set
            {
                if (_Rulepriority != value)
                {
                    _Rulepriority = value;
                }
            }
        }
        private Nullable<int> _Rulepriority;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isstart
        {
            get
            {
                return _Isstart;
            }
            set
            {
                if (_Isstart != value)
                {
                    _Isstart = value;
                }
            }
        }
        private string _Isstart;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isend
        {
            get
            {
                return _Isend;
            }
            set
            {
                if (_Isend != value)
                {
                    _Isend = value;
                }
            }
        }
        private string _Isend;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 rule 정의 (TrackIn / TrackOut 등) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Processsegmentrulehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Processsegmentrulehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for process segment rule id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentruleid
        {
            get
            {
                return _Processsegmentruleid;
            }
            set
            {
                if (_Processsegmentruleid != value)
                {
                    _Processsegmentruleid = value;
                }
            }
        }
        private string _Processsegmentruleid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Process segment rule id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentrulename
        {
            get
            {
                return _Processsegmentrulename;
            }
            set
            {
                if (_Processsegmentrulename != value)
                {
                    _Processsegmentrulename = value;
                }
            }
        }
        private string _Processsegmentrulename;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// System rule Id EX) TrackIn/TrackOut
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Systemruleid
        {
            get
            {
                return _Systemruleid;
            }
            set
            {
                if (_Systemruleid != value)
                {
                    _Systemruleid = value;
                }
            }
        }
        private string _Systemruleid;

        /// <summary>
        /// The flag to determine whether or not to be Mandatory ex) if Y then autorun DispatchWorkLot 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Ismandatory
        {
            get
            {
                return _Ismandatory;
            }
            set
            {
                if (_Ismandatory != value)
                {
                    _Ismandatory = value;
                }
            }
        }
        private string _Ismandatory;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Produce Material ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productid
        {
            get
            {
                return _Productid;
            }
            set
            {
                if (_Productid != value)
                {
                    _Productid = value;
                }
            }
        }
        private string _Productid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Produce Material Name 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productname
        {
            get
            {
                return _Productname;
            }
            set
            {
                if (_Productname != value)
                {
                    _Productname = value;
                }
            }
        }
        private string _Productname;

        /// <summary>
        /// Lot ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Type of lot. ex) PP | SS, Prodution | Engineer | Develop | NonProduction 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productiontype
        {
            get
            {
                return _Productiontype;
            }
            set
            {
                if (_Productiontype != value)
                {
                    _Productiontype = value;
                }
            }
        }
        private string _Productiontype;

        /// <summary>
        /// Detail Type of lot. ex) Sample | SourceMonitor | Dummy
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailproductiontype
        {
            get
            {
                return _Detailproductiontype;
            }
            set
            {
                if (_Detailproductiontype != value)
                {
                    _Detailproductiontype = value;
                }
            }
        }
        private string _Detailproductiontype;

        /// <summary>
        /// Product definition id of lot id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Previous Process Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Previous Sub Process Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subprocessdefinitionid
        {
            get
            {
                return _Subprocessdefinitionid;
            }
            set
            {
                if (_Subprocessdefinitionid != value)
                {
                    _Subprocessdefinitionid = value;
                }
            }
        }
        private string _Subprocessdefinitionid;

        /// <summary>
        /// Previous Process node ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Previous Process Segment ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Location of production planning materials
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Batch id. (ref. FOM_PROCESSGROUP)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processgroupid
        {
            get
            {
                return _Processgroupid;
            }
            set
            {
                if (_Processgroupid != value)
                {
                    _Processgroupid = value;
                }
            }
        }
        private string _Processgroupid;

        /// <summary>
        /// Root Produced Material ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Rootprodutid
        {
            get
            {
                return _Rootprodutid;
            }
            set
            {
                if (_Rootprodutid != value)
                {
                    _Rootprodutid = value;
                }
            }
        }
        private string _Rootprodutid;

        /// <summary>
        /// Carrier id. (ref. FOM_CARRIER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// Carrier Slot No
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    _Position = value;
                }
            }
        }
        private Nullable<int> _Position;

        /// <summary>
        /// Matyerial Type of Product.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Producttype
        {
            get
            {
                return _Producttype;
            }
            set
            {
                if (_Producttype != value)
                {
                    _Producttype = value;
                }
            }
        }
        private string _Producttype;

        /// <summary>
        /// Material Type of sub product.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subproducttype
        {
            get
            {
                return _Subproducttype;
            }
            set
            {
                if (_Subproducttype != value)
                {
                    _Subproducttype = value;
                }
            }
        }
        private string _Subproducttype;

        /// <summary>
        /// Sub Material Original Quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Subproductoriginalquantity
        {
            get
            {
                return _Subproductoriginalquantity;
            }
            set
            {
                if (_Subproductoriginalquantity != value)
                {
                    _Subproductoriginalquantity = value;
                }
            }
        }
        private Nullable<decimal> _Subproductoriginalquantity;

        /// <summary>
        /// Sub Material Quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Subproductquantity
        {
            get
            {
                return _Subproductquantity;
            }
            set
            {
                if (_Subproductquantity != value)
                {
                    _Subproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Subproductquantity;

        /// <summary>
        /// The date that the lot id will be manufactured completely.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Duedate
        {
            get
            {
                return _Duedate;
            }
            set
            {
                if (_Duedate != value)
                {
                    _Duedate = value;
                }
            }
        }
        private Nullable<DateTime> _Duedate;

        /// <summary>
        /// The priority of Material. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// Current state of work order. ex) Created, Active, Terminated, Hold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// The Progress of the Process for the Material
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processingstate
        {
            get
            {
                return _Processingstate;
            }
            set
            {
                if (_Processingstate != value)
                {
                    _Processingstate = value;
                }
            }
        }
        private string _Processingstate;

        /// <summary>
        /// The flag to determine whether or not to be held. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// The flag to determine whether or not to be reworked.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reworkstate
        {
            get
            {
                return _Reworkstate;
            }
            set
            {
                if (_Reworkstate != value)
                {
                    _Reworkstate = value;
                }
            }
        }
        private string _Reworkstate;

        /// <summary>
        /// Track In Transaction for Event Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Trackintime
        {
            get
            {
                return _Trackintime;
            }
            set
            {
                if (_Trackintime != value)
                {
                    _Trackintime = value;
                }
            }
        }
        private Nullable<DateTime> _Trackintime;

        /// <summary>
        /// Transaction for Event User
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Trackinuser
        {
            get
            {
                return _Trackinuser;
            }
            set
            {
                if (_Trackinuser != value)
                {
                    _Trackinuser = value;
                }
            }
        }
        private string _Trackinuser;

        /// <summary>
        /// The time that lot id comes out of the one segment. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Trackouttime
        {
            get
            {
                return _Trackouttime;
            }
            set
            {
                if (_Trackouttime != value)
                {
                    _Trackouttime = value;
                }
            }
        }
        private Nullable<DateTime> _Trackouttime;

        /// <summary>
        /// Event user
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Trackoutuser
        {
            get
            {
                return _Trackoutuser;
            }
            set
            {
                if (_Trackoutuser != value)
                {
                    _Trackoutuser = value;
                }
            }
        }
        private string _Trackoutuser;

        /// <summary>
        /// Process Start Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Processstarttime
        {
            get
            {
                return _Processstarttime;
            }
            set
            {
                if (_Processstarttime != value)
                {
                    _Processstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Processstarttime;

        /// <summary>
        /// Process End Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Processendtime
        {
            get
            {
                return _Processendtime;
            }
            set
            {
                if (_Processendtime != value)
                {
                    _Processendtime = value;
                }
            }
        }
        private Nullable<DateTime> _Processendtime;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Equipment Recipe Id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeid
        {
            get
            {
                return _Recipeid;
            }
            set
            {
                if (_Recipeid != value)
                {
                    _Recipeid = value;
                }
            }
        }
        private string _Recipeid;

        /// <summary>
        /// Process ReProgress Count of Recieved Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Totreworkcount
        {
            get
            {
                return _Totreworkcount;
            }
            set
            {
                if (_Totreworkcount != value)
                {
                    _Totreworkcount = value;
                }
            }
        }
        private Nullable<int> _Totreworkcount;

        /// <summary>
        /// Process ReProgress Count
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Reworkcount
        {
            get
            {
                return _Reworkcount;
            }
            set
            {
                if (_Reworkcount != value)
                {
                    _Reworkcount = value;
                }
            }
        }
        private Nullable<int> _Reworkcount;

        /// <summary>
        /// Process of Rework Type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reworktype
        {
            get
            {
                return _Reworktype;
            }
            set
            {
                if (_Reworktype != value)
                {
                    _Reworktype = value;
                }
            }
        }
        private string _Reworktype;

        /// <summary>
        /// Production order id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productionorderid
        {
            get
            {
                return _Productionorderid;
            }
            set
            {
                if (_Productionorderid != value)
                {
                    _Productionorderid = value;
                }
            }
        }
        private string _Productionorderid;

        /// <summary>
        /// Unique identifier for work order id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// Start Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// Finished Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Finishtime
        {
            get
            {
                return _Finishtime;
            }
            set
            {
                if (_Finishtime != value)
                {
                    _Finishtime = value;
                }
            }
        }
        private Nullable<DateTime> _Finishtime;

        /// <summary>
        /// Shipped Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Shiptime
        {
            get
            {
                return _Shiptime;
            }
            set
            {
                if (_Shiptime != value)
                {
                    _Shiptime = value;
                }
            }
        }
        private Nullable<DateTime> _Shiptime;

        /// <summary>
        /// Previous Lot ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlotid
        {
            get
            {
                return _Prevlotid;
            }
            set
            {
                if (_Prevlotid != value)
                {
                    _Prevlotid = value;
                }
            }
        }
        private string _Prevlotid;

        /// <summary>
        /// Previous Product Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevproductdefinitionid
        {
            get
            {
                return _Prevproductdefinitionid;
            }
            set
            {
                if (_Prevproductdefinitionid != value)
                {
                    _Prevproductdefinitionid = value;
                }
            }
        }
        private string _Prevproductdefinitionid;

        /// <summary>
        /// Previous Carrier ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevcarrierid
        {
            get
            {
                return _Prevcarrierid;
            }
            set
            {
                if (_Prevcarrierid != value)
                {
                    _Prevcarrierid = value;
                }
            }
        }
        private string _Prevcarrierid;

        /// <summary>
        /// Previous Slot NO
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Prevposition
        {
            get
            {
                return _Prevposition;
            }
            set
            {
                if (_Prevposition != value)
                {
                    _Prevposition = value;
                }
            }
        }
        private Nullable<int> _Prevposition;

        /// <summary>
        /// Previous Equipment ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevequipmentid
        {
            get
            {
                return _Prevequipmentid;
            }
            set
            {
                if (_Prevequipmentid != value)
                {
                    _Prevequipmentid = value;
                }
            }
        }
        private string _Prevequipmentid;

        /// <summary>
        /// Previous Process Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocessdefinitionid
        {
            get
            {
                return _Prevprocessdefinitionid;
            }
            set
            {
                if (_Prevprocessdefinitionid != value)
                {
                    _Prevprocessdefinitionid = value;
                }
            }
        }
        private string _Prevprocessdefinitionid;

        /// <summary>
        /// Previous Sub Process Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevsubprocessdefinitionid
        {
            get
            {
                return _Prevsubprocessdefinitionid;
            }
            set
            {
                if (_Prevsubprocessdefinitionid != value)
                {
                    _Prevsubprocessdefinitionid = value;
                }
            }
        }
        private string _Prevsubprocessdefinitionid;

        /// <summary>
        /// Previous Process Node ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocessnodeid
        {
            get
            {
                return _Prevprocessnodeid;
            }
            set
            {
                if (_Prevprocessnodeid != value)
                {
                    _Prevprocessnodeid = value;
                }
            }
        }
        private string _Prevprocessnodeid;

        /// <summary>
        /// Previous Process Segment ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocesssegmentid
        {
            get
            {
                return _Prevprocesssegmentid;
            }
            set
            {
                if (_Prevprocesssegmentid != value)
                {
                    _Prevprocesssegmentid = value;
                }
            }
        }
        private string _Prevprocesssegmentid;

        /// <summary>
        /// Previous WorkOrder ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevworkorderid
        {
            get
            {
                return _Prevworkorderid;
            }
            set
            {
                if (_Prevworkorderid != value)
                {
                    _Prevworkorderid = value;
                }
            }
        }
        private string _Prevworkorderid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 제품 코드 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Productclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Productclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for product class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productclassid
        {
            get
            {
                return _Productclassid;
            }
            set
            {
                if (_Productclassid != value)
                {
                    _Productclassid = value;
                }
            }
        }
        private string _Productclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productclassname
        {
            get
            {
                return _Productclassname;
            }
            set
            {
                if (_Productclassname != value)
                {
                    _Productclassname = value;
                }
            }
        }
        private string _Productclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Parent product class id. (ref. FOM_PRODUCTCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentid
        {
            get
            {
                return _Parentid;
            }
            set
            {
                if (_Parentid != value)
                {
                    _Parentid = value;
                }
            }
        }
        private string _Parentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ismainmaterial
        {
            get
            {
                return _Ismainmaterial;
            }
            set
            {
                if (_Ismainmaterial != value)
                {
                    _Ismainmaterial = value;
                }
            }
        }
        private string _Ismainmaterial;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="smallint", MaxLength=2, DataSize=2, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<Int16> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<Int16> _Priority;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 제품 코드 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Productclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Productclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for product class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productclassid
        {
            get
            {
                return _Productclassid;
            }
            set
            {
                if (_Productclassid != value)
                {
                    _Productclassid = value;
                }
            }
        }
        private string _Productclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productclassname
        {
            get
            {
                return _Productclassname;
            }
            set
            {
                if (_Productclassname != value)
                {
                    _Productclassname = value;
                }
            }
        }
        private string _Productclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Parent product class id. (ref. FOM_PRODUCTCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentid
        {
            get
            {
                return _Parentid;
            }
            set
            {
                if (_Parentid != value)
                {
                    _Parentid = value;
                }
            }
        }
        private string _Parentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ismainmaterial
        {
            get
            {
                return _Ismainmaterial;
            }
            set
            {
                if (_Ismainmaterial != value)
                {
                    _Ismainmaterial = value;
                }
            }
        }
        private string _Ismainmaterial;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="smallint", MaxLength=2, DataSize=2, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<Int16> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<Int16> _Priority;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 제품 정의 (제품 코드 정의)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Productdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Productdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for product definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionname
        {
            get
            {
                return _Productdefinitionname;
            }
            set
            {
                if (_Productdefinitionname != value)
                {
                    _Productdefinitionname = value;
                }
            }
        }
        private string _Productdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Product class id. (ref. FOM_PRODUCTCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productclassid
        {
            get
            {
                return _Productclassid;
            }
            set
            {
                if (_Productclassid != value)
                {
                    _Productclassid = value;
                }
            }
        }
        private string _Productclassid;

        /// <summary>
        /// Producedmaterial Type Ex) Glass
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Producttype
        {
            get
            {
                return _Producttype;
            }
            set
            {
                if (_Producttype != value)
                {
                    _Producttype = value;
                }
            }
        }
        private string _Producttype;

        /// <summary>
        /// Sub ProducedMaterial Type Ex) Quadrant
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subproducttype
        {
            get
            {
                return _Subproducttype;
            }
            set
            {
                if (_Subproducttype != value)
                {
                    _Subproducttype = value;
                }
            }
        }
        private string _Subproducttype;

        /// <summary>
        /// Default Type of production(Lot). ex) Production | Development | Engineer | Dummy | NonProduction
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productiontype
        {
            get
            {
                return _Productiontype;
            }
            set
            {
                if (_Productiontype != value)
                {
                    _Productiontype = value;
                }
            }
        }
        private string _Productiontype;

        /// <summary>
        /// Detail Production(Lot) Type - SideDummy | FillDummy | Monitor
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailproductiontype
        {
            get
            {
                return _Detailproductiontype;
            }
            set
            {
                if (_Detailproductiontype != value)
                {
                    _Detailproductiontype = value;
                }
            }
        }
        private string _Detailproductiontype;

        /// <summary>
        /// Quantity of Main Product default quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Quantity of Sub Product default quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Subquantity
        {
            get
            {
                return _Subquantity;
            }
            set
            {
                if (_Subquantity != value)
                {
                    _Subquantity = value;
                }
            }
        }
        private Nullable<decimal> _Subquantity;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Type of product definition.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitiontype
        {
            get
            {
                return _Productdefinitiontype;
            }
            set
            {
                if (_Productdefinitiontype != value)
                {
                    _Productdefinitiontype = value;
                }
            }
        }
        private string _Productdefinitiontype;

        /// <summary>
        /// Process Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Multiple(Possible) Process Definition Flag Y | N Default Null
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Hasmultiprocessdefinition
        {
            get
            {
                return _Hasmultiprocessdefinition;
            }
            set
            {
                if (_Hasmultiprocessdefinition != value)
                {
                    _Hasmultiprocessdefinition = value;
                }
            }
        }
        private string _Hasmultiprocessdefinition;

        /// <summary>
        /// CAD plan drawing ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Drawingid
        {
            get
            {
                return _Drawingid;
            }
            set
            {
                if (_Drawingid != value)
                {
                    _Drawingid = value;
                }
            }
        }
        private string _Drawingid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Evaluationclasscode
        {
            get
            {
                return _Evaluationclasscode;
            }
            set
            {
                if (_Evaluationclasscode != value)
                {
                    _Evaluationclasscode = value;
                }
            }
        }
        private string _Evaluationclasscode;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 자재 입고시 기본 입고위치
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaultstoragelocation
        {
            get
            {
                return _Defaultstoragelocation;
            }
            set
            {
                if (_Defaultstoragelocation != value)
                {
                    _Defaultstoragelocation = value;
                }
            }
        }
        private string _Defaultstoragelocation;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="char", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ismainmaterial
        {
            get
            {
                return _Ismainmaterial;
            }
            set
            {
                if (_Ismainmaterial != value)
                {
                    _Ismainmaterial = value;
                }
            }
        }
        private string _Ismainmaterial;

        #endregion
    }

    /// <summary>
    /// 제품 정의 (제품 코드 정의) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Productdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Productdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for product definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionname
        {
            get
            {
                return _Productdefinitionname;
            }
            set
            {
                if (_Productdefinitionname != value)
                {
                    _Productdefinitionname = value;
                }
            }
        }
        private string _Productdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Product class id. (ref. FOM_PRODUCTCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productclassid
        {
            get
            {
                return _Productclassid;
            }
            set
            {
                if (_Productclassid != value)
                {
                    _Productclassid = value;
                }
            }
        }
        private string _Productclassid;

        /// <summary>
        /// Producedmaterial Type Ex) Glass
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Producttype
        {
            get
            {
                return _Producttype;
            }
            set
            {
                if (_Producttype != value)
                {
                    _Producttype = value;
                }
            }
        }
        private string _Producttype;

        /// <summary>
        /// Sub ProducedMaterial Type Ex) Quadrant
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subproducttype
        {
            get
            {
                return _Subproducttype;
            }
            set
            {
                if (_Subproducttype != value)
                {
                    _Subproducttype = value;
                }
            }
        }
        private string _Subproducttype;

        /// <summary>
        /// Default Type of production(Lot). ex) Production | Development | Engineer | Dummy | NonProduction
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productiontype
        {
            get
            {
                return _Productiontype;
            }
            set
            {
                if (_Productiontype != value)
                {
                    _Productiontype = value;
                }
            }
        }
        private string _Productiontype;

        /// <summary>
        /// Detail Production(Lot) Type - SideDummy | FillDummy | Monitor
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailproductiontype
        {
            get
            {
                return _Detailproductiontype;
            }
            set
            {
                if (_Detailproductiontype != value)
                {
                    _Detailproductiontype = value;
                }
            }
        }
        private string _Detailproductiontype;

        /// <summary>
        /// Quantity of Main Product default quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Quantity of Sub Product default quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Subquantity
        {
            get
            {
                return _Subquantity;
            }
            set
            {
                if (_Subquantity != value)
                {
                    _Subquantity = value;
                }
            }
        }
        private Nullable<decimal> _Subquantity;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Type of product definition.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitiontype
        {
            get
            {
                return _Productdefinitiontype;
            }
            set
            {
                if (_Productdefinitiontype != value)
                {
                    _Productdefinitiontype = value;
                }
            }
        }
        private string _Productdefinitiontype;

        /// <summary>
        /// Process Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Multiple(Possible) Process Definition Flag Y | N Default Null
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Hasmultiprocessdefinition
        {
            get
            {
                return _Hasmultiprocessdefinition;
            }
            set
            {
                if (_Hasmultiprocessdefinition != value)
                {
                    _Hasmultiprocessdefinition = value;
                }
            }
        }
        private string _Hasmultiprocessdefinition;

        /// <summary>
        /// CAD plan drawing ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Drawingid
        {
            get
            {
                return _Drawingid;
            }
            set
            {
                if (_Drawingid != value)
                {
                    _Drawingid = value;
                }
            }
        }
        private string _Drawingid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Evaluationclasscode
        {
            get
            {
                return _Evaluationclasscode;
            }
            set
            {
                if (_Evaluationclasscode != value)
                {
                    _Evaluationclasscode = value;
                }
            }
        }
        private string _Evaluationclasscode;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 자재 입고시 기본 입고위치
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Defaultstoragelocation
        {
            get
            {
                return _Defaultstoragelocation;
            }
            set
            {
                if (_Defaultstoragelocation != value)
                {
                    _Defaultstoragelocation = value;
                }
            }
        }
        private string _Defaultstoragelocation;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="char", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ismainmaterial
        {
            get
            {
                return _Ismainmaterial;
            }
            set
            {
                if (_Ismainmaterial != value)
                {
                    _Ismainmaterial = value;
                }
            }
        }
        private string _Ismainmaterial;

        #endregion
    }

    /// <summary>
    /// 제품그룹별 캐리어별 기준수량 관리
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Productgroupcarrierrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Productgroupcarrierrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION) - LEFT 7자리
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Productgroup
        {
            get
            {
                return _Productgroup;
            }
            set
            {
                if (_Productgroup != value)
                {
                    _Productgroup = value;
                }
            }
        }
        private string _Productgroup;

        /// <summary>
        /// 에이징 기준 투입수량_01
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Agingquantity01
        {
            get
            {
                return _Agingquantity01;
            }
            set
            {
                if (_Agingquantity01 != value)
                {
                    _Agingquantity01 = value;
                }
            }
        }
        private Nullable<int> _Agingquantity01;

        /// <summary>
        /// 에이징 기준 투입수량_02
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Agingquantity02
        {
            get
            {
                return _Agingquantity02;
            }
            set
            {
                if (_Agingquantity02 != value)
                {
                    _Agingquantity02 = value;
                }
            }
        }
        private Nullable<int> _Agingquantity02;

        /// <summary>
        /// 에이징 기준 투입수량_03
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Agingquantity03
        {
            get
            {
                return _Agingquantity03;
            }
            set
            {
                if (_Agingquantity03 != value)
                {
                    _Agingquantity03 = value;
                }
            }
        }
        private Nullable<int> _Agingquantity03;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 제품그룹별 캐리어별 기준수량 관리 이력 테이블
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Productgroupcarrierrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Productgroupcarrierrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION) - LEFT 7자리
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Productgroup
        {
            get
            {
                return _Productgroup;
            }
            set
            {
                if (_Productgroup != value)
                {
                    _Productgroup = value;
                }
            }
        }
        private string _Productgroup;

        /// <summary>
        /// 에이징 기준 투입수량_01
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Agingquantity01
        {
            get
            {
                return _Agingquantity01;
            }
            set
            {
                if (_Agingquantity01 != value)
                {
                    _Agingquantity01 = value;
                }
            }
        }
        private Nullable<int> _Agingquantity01;

        /// <summary>
        /// 에이징 기준 투입수량_02
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Agingquantity02
        {
            get
            {
                return _Agingquantity02;
            }
            set
            {
                if (_Agingquantity02 != value)
                {
                    _Agingquantity02 = value;
                }
            }
        }
        private Nullable<int> _Agingquantity02;

        /// <summary>
        /// 에이징 기준 투입수량_03
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Agingquantity03
        {
            get
            {
                return _Agingquantity03;
            }
            set
            {
                if (_Agingquantity03 != value)
                {
                    _Agingquantity03 = value;
                }
            }
        }
        private Nullable<int> _Agingquantity03;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    ///  이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Producthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Producthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Produce Material ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productid
        {
            get
            {
                return _Productid;
            }
            set
            {
                if (_Productid != value)
                {
                    _Productid = value;
                }
            }
        }
        private string _Productid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Produce Material Name 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productname
        {
            get
            {
                return _Productname;
            }
            set
            {
                if (_Productname != value)
                {
                    _Productname = value;
                }
            }
        }
        private string _Productname;

        /// <summary>
        /// Lot ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Type of lot. ex) PP | SS, Prodution | Engineer | Develop | NonProduction 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productiontype
        {
            get
            {
                return _Productiontype;
            }
            set
            {
                if (_Productiontype != value)
                {
                    _Productiontype = value;
                }
            }
        }
        private string _Productiontype;

        /// <summary>
        /// Detail Type of lot. ex) Sample | SourceMonitor | Dummy
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Detailproductiontype
        {
            get
            {
                return _Detailproductiontype;
            }
            set
            {
                if (_Detailproductiontype != value)
                {
                    _Detailproductiontype = value;
                }
            }
        }
        private string _Detailproductiontype;

        /// <summary>
        /// Product definition id of lot id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Previous Process Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Previous Sub Process Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subprocessdefinitionid
        {
            get
            {
                return _Subprocessdefinitionid;
            }
            set
            {
                if (_Subprocessdefinitionid != value)
                {
                    _Subprocessdefinitionid = value;
                }
            }
        }
        private string _Subprocessdefinitionid;

        /// <summary>
        /// Previous Process node ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Previous Process Segment ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Location of production planning materials
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Batch id. (ref. FOM_PROCESSGROUP)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processgroupid
        {
            get
            {
                return _Processgroupid;
            }
            set
            {
                if (_Processgroupid != value)
                {
                    _Processgroupid = value;
                }
            }
        }
        private string _Processgroupid;

        /// <summary>
        /// Root Produced Material ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Rootprodutid
        {
            get
            {
                return _Rootprodutid;
            }
            set
            {
                if (_Rootprodutid != value)
                {
                    _Rootprodutid = value;
                }
            }
        }
        private string _Rootprodutid;

        /// <summary>
        /// Carrier id. (ref. FOM_CARRIER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// Carrier Slot No
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    _Position = value;
                }
            }
        }
        private Nullable<int> _Position;

        /// <summary>
        /// Matyerial Type of Product.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Producttype
        {
            get
            {
                return _Producttype;
            }
            set
            {
                if (_Producttype != value)
                {
                    _Producttype = value;
                }
            }
        }
        private string _Producttype;

        /// <summary>
        /// Material Type of sub product.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Subproducttype
        {
            get
            {
                return _Subproducttype;
            }
            set
            {
                if (_Subproducttype != value)
                {
                    _Subproducttype = value;
                }
            }
        }
        private string _Subproducttype;

        /// <summary>
        /// Sub Material Original Quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Subproductoriginalquantity
        {
            get
            {
                return _Subproductoriginalquantity;
            }
            set
            {
                if (_Subproductoriginalquantity != value)
                {
                    _Subproductoriginalquantity = value;
                }
            }
        }
        private Nullable<decimal> _Subproductoriginalquantity;

        /// <summary>
        /// Sub Material Quantity
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Subproductquantity
        {
            get
            {
                return _Subproductquantity;
            }
            set
            {
                if (_Subproductquantity != value)
                {
                    _Subproductquantity = value;
                }
            }
        }
        private Nullable<decimal> _Subproductquantity;

        /// <summary>
        /// The date that the lot id will be manufactured completely.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Duedate
        {
            get
            {
                return _Duedate;
            }
            set
            {
                if (_Duedate != value)
                {
                    _Duedate = value;
                }
            }
        }
        private Nullable<DateTime> _Duedate;

        /// <summary>
        /// The priority of Material. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// Current state of work order. ex) Created, Active, Terminated, Hold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// The Progress of the Process for the Material
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processingstate
        {
            get
            {
                return _Processingstate;
            }
            set
            {
                if (_Processingstate != value)
                {
                    _Processingstate = value;
                }
            }
        }
        private string _Processingstate;

        /// <summary>
        /// The flag to determine whether or not to be held. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// The flag to determine whether or not to be reworked.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reworkstate
        {
            get
            {
                return _Reworkstate;
            }
            set
            {
                if (_Reworkstate != value)
                {
                    _Reworkstate = value;
                }
            }
        }
        private string _Reworkstate;

        /// <summary>
        /// Track In Transaction for Event Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Trackintime
        {
            get
            {
                return _Trackintime;
            }
            set
            {
                if (_Trackintime != value)
                {
                    _Trackintime = value;
                }
            }
        }
        private Nullable<DateTime> _Trackintime;

        /// <summary>
        /// Transaction for Event User
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Trackinuser
        {
            get
            {
                return _Trackinuser;
            }
            set
            {
                if (_Trackinuser != value)
                {
                    _Trackinuser = value;
                }
            }
        }
        private string _Trackinuser;

        /// <summary>
        /// The time that lot id comes out of the one segment. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Trackouttime
        {
            get
            {
                return _Trackouttime;
            }
            set
            {
                if (_Trackouttime != value)
                {
                    _Trackouttime = value;
                }
            }
        }
        private Nullable<DateTime> _Trackouttime;

        /// <summary>
        /// Event user
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Trackoutuser
        {
            get
            {
                return _Trackoutuser;
            }
            set
            {
                if (_Trackoutuser != value)
                {
                    _Trackoutuser = value;
                }
            }
        }
        private string _Trackoutuser;

        /// <summary>
        /// Process Start Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Processstarttime
        {
            get
            {
                return _Processstarttime;
            }
            set
            {
                if (_Processstarttime != value)
                {
                    _Processstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Processstarttime;

        /// <summary>
        /// Process End Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Processendtime
        {
            get
            {
                return _Processendtime;
            }
            set
            {
                if (_Processendtime != value)
                {
                    _Processendtime = value;
                }
            }
        }
        private Nullable<DateTime> _Processendtime;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Equipment Recipe Id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeid
        {
            get
            {
                return _Recipeid;
            }
            set
            {
                if (_Recipeid != value)
                {
                    _Recipeid = value;
                }
            }
        }
        private string _Recipeid;

        /// <summary>
        /// Process ReProgress Count of Recieved Equipment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Totreworkcount
        {
            get
            {
                return _Totreworkcount;
            }
            set
            {
                if (_Totreworkcount != value)
                {
                    _Totreworkcount = value;
                }
            }
        }
        private Nullable<int> _Totreworkcount;

        /// <summary>
        /// Process ReProgress Count
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Reworkcount
        {
            get
            {
                return _Reworkcount;
            }
            set
            {
                if (_Reworkcount != value)
                {
                    _Reworkcount = value;
                }
            }
        }
        private Nullable<int> _Reworkcount;

        /// <summary>
        /// Process of Rework Type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reworktype
        {
            get
            {
                return _Reworktype;
            }
            set
            {
                if (_Reworktype != value)
                {
                    _Reworktype = value;
                }
            }
        }
        private string _Reworktype;

        /// <summary>
        /// Production order id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productionorderid
        {
            get
            {
                return _Productionorderid;
            }
            set
            {
                if (_Productionorderid != value)
                {
                    _Productionorderid = value;
                }
            }
        }
        private string _Productionorderid;

        /// <summary>
        /// Unique identifier for work order id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// Start Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// Finished Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Finishtime
        {
            get
            {
                return _Finishtime;
            }
            set
            {
                if (_Finishtime != value)
                {
                    _Finishtime = value;
                }
            }
        }
        private Nullable<DateTime> _Finishtime;

        /// <summary>
        /// Shipped Time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Shiptime
        {
            get
            {
                return _Shiptime;
            }
            set
            {
                if (_Shiptime != value)
                {
                    _Shiptime = value;
                }
            }
        }
        private Nullable<DateTime> _Shiptime;

        /// <summary>
        /// Previous Lot ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevlotid
        {
            get
            {
                return _Prevlotid;
            }
            set
            {
                if (_Prevlotid != value)
                {
                    _Prevlotid = value;
                }
            }
        }
        private string _Prevlotid;

        /// <summary>
        /// Previous Product Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevproductdefinitionid
        {
            get
            {
                return _Prevproductdefinitionid;
            }
            set
            {
                if (_Prevproductdefinitionid != value)
                {
                    _Prevproductdefinitionid = value;
                }
            }
        }
        private string _Prevproductdefinitionid;

        /// <summary>
        /// Previous Carrier ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevcarrierid
        {
            get
            {
                return _Prevcarrierid;
            }
            set
            {
                if (_Prevcarrierid != value)
                {
                    _Prevcarrierid = value;
                }
            }
        }
        private string _Prevcarrierid;

        /// <summary>
        /// Previous Slot NO
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Prevposition
        {
            get
            {
                return _Prevposition;
            }
            set
            {
                if (_Prevposition != value)
                {
                    _Prevposition = value;
                }
            }
        }
        private Nullable<int> _Prevposition;

        /// <summary>
        /// Previous Equipment ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevequipmentid
        {
            get
            {
                return _Prevequipmentid;
            }
            set
            {
                if (_Prevequipmentid != value)
                {
                    _Prevequipmentid = value;
                }
            }
        }
        private string _Prevequipmentid;

        /// <summary>
        /// Previous Process Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocessdefinitionid
        {
            get
            {
                return _Prevprocessdefinitionid;
            }
            set
            {
                if (_Prevprocessdefinitionid != value)
                {
                    _Prevprocessdefinitionid = value;
                }
            }
        }
        private string _Prevprocessdefinitionid;

        /// <summary>
        /// Previous Sub Process Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevsubprocessdefinitionid
        {
            get
            {
                return _Prevsubprocessdefinitionid;
            }
            set
            {
                if (_Prevsubprocessdefinitionid != value)
                {
                    _Prevsubprocessdefinitionid = value;
                }
            }
        }
        private string _Prevsubprocessdefinitionid;

        /// <summary>
        /// Previous Process Node ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocessnodeid
        {
            get
            {
                return _Prevprocessnodeid;
            }
            set
            {
                if (_Prevprocessnodeid != value)
                {
                    _Prevprocessnodeid = value;
                }
            }
        }
        private string _Prevprocessnodeid;

        /// <summary>
        /// Previous Process Segment ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevprocesssegmentid
        {
            get
            {
                return _Prevprocesssegmentid;
            }
            set
            {
                if (_Prevprocesssegmentid != value)
                {
                    _Prevprocesssegmentid = value;
                }
            }
        }
        private string _Prevprocesssegmentid;

        /// <summary>
        /// Previous WorkOrder ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevworkorderid
        {
            get
            {
                return _Prevworkorderid;
            }
            set
            {
                if (_Prevworkorderid != value)
                {
                    _Prevworkorderid = value;
                }
            }
        }
        private string _Prevworkorderid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 제품을 생산하기 위한 flow 정보 - ProductDefinition에 Multiple ProcessDefinition이 필요한 경우에만 사용 ; Ref. ProductDefinition.hasMultiProcessDefinition 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Productprocessrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Productprocessrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process definition id. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Default of Production processdefition.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isdefault
        {
            get
            {
                return _Isdefault;
            }
            set
            {
                if (_Isdefault != value)
                {
                    _Isdefault = value;
                }
            }
        }
        private string _Isdefault;

        /// <summary>
        /// SEQUENCE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                if (_Sequence != value)
                {
                    _Sequence = value;
                }
            }
        }
        private Nullable<int> _Sequence;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 제품을 생산하기 위한 flow 정보 - ProductDefinition에 Multiple ProcessDefinition이 필요한 경우에만 사용 ; Ref. ProductDefinition.hasMultiProcessDefinition  이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Productprocessrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Productprocessrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process definition id. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Default of Production processdefition.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isdefault
        {
            get
            {
                return _Isdefault;
            }
            set
            {
                if (_Isdefault != value)
                {
                    _Isdefault = value;
                }
            }
        }
        private string _Isdefault;

        /// <summary>
        /// SEQUENCE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                if (_Sequence != value)
                {
                    _Sequence = value;
                }
            }
        }
        private Nullable<int> _Sequence;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 재고조정 시 표준원가 및 평가클래스 존재 여부 체크를 위한 SAP 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Productstandardpriceinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Productstandardpriceinfo : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 사업장코드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 품목번호
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// 표준원가
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Unitprice
        {
            get
            {
                return _Unitprice;
            }
            set
            {
                if (_Unitprice != value)
                {
                    _Unitprice = value;
                }
            }
        }
        private Nullable<decimal> _Unitprice;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Product Rule 종류 및 관련 테이블 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruledefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruledefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of product rule. ex) MBOM, OUTBOX, EQUIPMENT, DATACOLLECTION, DISPATCHING, JUDGE, QTIME, YIELD, RECIPE, EIN, SEGMENTSPEC, SPC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Pruletype
        {
            get
            {
                return _Pruletype;
            }
            set
            {
                if (_Pruletype != value)
                {
                    _Pruletype = value;
                }
            }
        }
        private string _Pruletype;

        /// <summary>
        /// Product rule definition table name (ex. FOM_PRULEDEFINITIONPS, FOM_PRULEDEFINITIONPSE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pruledefinitiontable
        {
            get
            {
                return _Pruledefinitiontable;
            }
            set
            {
                if (_Pruledefinitiontable != value)
                {
                    _Pruledefinitiontable = value;
                }
            }
        }
        private string _Pruledefinitiontable;

        /// <summary>
        /// Product rule table name (ex. FOM_PRULEEQUIPMENT, FOM_PRULEMBOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pruletable
        {
            get
            {
                return _Pruletable;
            }
            set
            {
                if (_Pruletable != value)
                {
                    _Pruletable = value;
                }
            }
        }
        private string _Pruletable;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Product Rule 종류 및 관련 테이블 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruledefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruledefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of product rule. ex) MBOM, OUTBOX, EQUIPMENT, DATACOLLECTION, DISPATCHING, JUDGE, QTIME, YIELD, RECIPE, EIN, SEGMENTSPEC, SPC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Pruletype
        {
            get
            {
                return _Pruletype;
            }
            set
            {
                if (_Pruletype != value)
                {
                    _Pruletype = value;
                }
            }
        }
        private string _Pruletype;

        /// <summary>
        /// Product rule definition table name (ex. FOM_PRULEDEFINITIONPS, FOM_PRULEDEFINITIONPSE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pruledefinitiontable
        {
            get
            {
                return _Pruledefinitiontable;
            }
            set
            {
                if (_Pruledefinitiontable != value)
                {
                    _Pruledefinitiontable = value;
                }
            }
        }
        private string _Pruledefinitiontable;

        /// <summary>
        /// Product rule table name (ex. FOM_PRULEEQUIPMENT, FOM_PRULEMBOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pruletable
        {
            get
            {
                return _Pruletable;
            }
            set
            {
                if (_Pruletable != value)
                {
                    _Pruletable = value;
                }
            }
        }
        private string _Pruletable;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정, 설비 등에서 생산 진행시 필요한 rule 정의 (제품을 Key로 하는 rule)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruledefinitionp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruledefinitionp : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of product rule. ex) OUTBOX
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Pruletype
        {
            get
            {
                return _Pruletype;
            }
            set
            {
                if (_Pruletype != value)
                {
                    _Pruletype = value;
                }
            }
        }
        private string _Pruletype;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Unique identifier for product rule system id. PRULE tables refer this id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 등에서 생산 진행시 필요한 rule 정의 (제품을 Key로 하는 rule) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruledefinitionphist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruledefinitionphist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of product rule. ex) DATACOLLECTION, DISPATCHING, JUDGE, QTIME, YIELD, RECIPE, EIN, SEGMENTSPEC, SPC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pruletype
        {
            get
            {
                return _Pruletype;
            }
            set
            {
                if (_Pruletype != value)
                {
                    _Pruletype = value;
                }
            }
        }
        private string _Pruletype;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Unique identifier for product rule system id. PRULE tables refer this id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정, 설비 등에서 생산 진행시 필요한 rule 정의 (제품, 라우팅, 공정, 설비를 Key로 하는 rule)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruledefinitionppse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruledefinitionppse : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of product rule. ex) DATACOLLECTION, DISPATCHING, JUDGE, QTIME, YIELD, RECIPE, EIN, SEGMENTSPEC, SPC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Pruletype
        {
            get
            {
                return _Pruletype;
            }
            set
            {
                if (_Pruletype != value)
                {
                    _Pruletype = value;
                }
            }
        }
        private string _Pruletype;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process definition id. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Process node id. (ref. FOM_PROCESSNODE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=6, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Unique identifier for product rule system id. PRULE tables refer this id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정, 설비 등에서 생산 진행시 필요한 rule 정의 (제품, 라우팅, 공정, 설비를 Key로 하는 rule) History
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruledefinitionppsehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruledefinitionppsehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of product rule. ex) DATACOLLECTION, DISPATCHING, JUDGE, QTIME, YIELD, RECIPE, EIN, SEGMENTSPEC, SPC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pruletype
        {
            get
            {
                return _Pruletype;
            }
            set
            {
                if (_Pruletype != value)
                {
                    _Pruletype = value;
                }
            }
        }
        private string _Pruletype;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process definition id. (ref. FOM_PROCESSDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processdefinitionid
        {
            get
            {
                return _Processdefinitionid;
            }
            set
            {
                if (_Processdefinitionid != value)
                {
                    _Processdefinitionid = value;
                }
            }
        }
        private string _Processdefinitionid;

        /// <summary>
        /// Process node id. (ref. FOM_PROCESSNODE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Unique identifier for product rule system id. PRULE tables refer this id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정, 설비 등에서 생산 진행시 필요한 rule 정의 (제품, 공정을 Key로 하는 rule)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruledefinitionps")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruledefinitionps : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of product rule. ex) DATACOLLECTION, DISPATCHING, JUDGE, QTIME, YIELD, RECIPE, EIN, SEGMENTSPEC, SPC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Pruletype
        {
            get
            {
                return _Pruletype;
            }
            set
            {
                if (_Pruletype != value)
                {
                    _Pruletype = value;
                }
            }
        }
        private string _Pruletype;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process node id. (ref. FOM_PROCESSNODE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Unique identifier for product rule system id. PRULE tables refer this id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정, 설비 등에서 생산 진행시 필요한 rule 정의 (제품, 공정, 설비를 Key로 하는 rule)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruledefinitionpse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruledefinitionpse : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of product rule. ex) DATACOLLECTION, DISPATCHING, JUDGE, QTIME, YIELD, RECIPE, EIN, SEGMENTSPEC, SPC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Pruletype
        {
            get
            {
                return _Pruletype;
            }
            set
            {
                if (_Pruletype != value)
                {
                    _Pruletype = value;
                }
            }
        }
        private string _Pruletype;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process node id. (ref. FOM_PROCESSNODE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Unique identifier for product rule system id. PRULE tables refer this id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정, 설비 등에서 생산 진행시 필요한 rule 정의 (제품, 공정, 설비를 Key로 하는 rule) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruledefinitionpsehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruledefinitionpsehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of product rule. ex) DATACOLLECTION, DISPATCHING, JUDGE, QTIME, YIELD, RECIPE, EIN, SEGMENTSPEC, SPC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pruletype
        {
            get
            {
                return _Pruletype;
            }
            set
            {
                if (_Pruletype != value)
                {
                    _Pruletype = value;
                }
            }
        }
        private string _Pruletype;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process node id. (ref. FOM_PROCESSNODE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Unique identifier for product rule system id. PRULE tables refer this id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정, 설비 등에서 생산 진행시 필요한 rule 정의 (제품, 공정을 Key로 하는 rule) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruledefinitionpshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruledefinitionpshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of product rule. ex) DATACOLLECTION, DISPATCHING, JUDGE, QTIME, YIELD, RECIPE, EIN, SEGMENTSPEC, SPC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pruletype
        {
            get
            {
                return _Pruletype;
            }
            set
            {
                if (_Pruletype != value)
                {
                    _Pruletype = value;
                }
            }
        }
        private string _Pruletype;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Process node id. (ref. FOM_PROCESSNODE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processnodeid
        {
            get
            {
                return _Processnodeid;
            }
            set
            {
                if (_Processnodeid != value)
                {
                    _Processnodeid = value;
                }
            }
        }
        private string _Processnodeid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Unique identifier for product rule system id. PRULE tables refer this id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 진행 설비 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruleequipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruleequipment : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRULEDEFINITIONPS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 진행 설비 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruleequipmenthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruleequipmenthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRULEDEFINITIONPS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 BOM 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Prulembom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prulembom : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRULEDEFINITIONPSE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Material or Product Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Itemdefinitionid
        {
            get
            {
                return _Itemdefinitionid;
            }
            set
            {
                if (_Itemdefinitionid != value)
                {
                    _Itemdefinitionid = value;
                }
            }
        }
        private string _Itemdefinitionid;

        /// <summary>
        /// ProcessOperationID (FOM_PROCESSOPERATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Processoperationid
        {
            get
            {
                return _Processoperationid;
            }
            set
            {
                if (_Processoperationid != value)
                {
                    _Processoperationid = value;
                }
            }
        }
        private string _Processoperationid;

        /// <summary>
        /// Type of bom. (PRODUCT/MATERIAL)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Itemtype
        {
            get
            {
                return _Itemtype;
            }
            set
            {
                if (_Itemtype != value)
                {
                    _Itemtype = value;
                }
            }
        }
        private string _Itemtype;

        /// <summary>
        /// Alternative Material grade
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alternativegrade
        {
            get
            {
                return _Alternativegrade;
            }
            set
            {
                if (_Alternativegrade != value)
                {
                    _Alternativegrade = value;
                }
            }
        }
        private string _Alternativegrade;

        /// <summary>
        /// Qty of mbom.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Mbomquantity
        {
            get
            {
                return _Mbomquantity;
            }
            set
            {
                if (_Mbomquantity != value)
                {
                    _Mbomquantity = value;
                }
            }
        }
        private Nullable<decimal> _Mbomquantity;

        /// <summary>
        /// Unit of mbom qty.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mbomuomid
        {
            get
            {
                return _Mbomuomid;
            }
            set
            {
                if (_Mbomuomid != value)
                {
                    _Mbomuomid = value;
                }
            }
        }
        private string _Mbomuomid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정 BOM 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Prulembomhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prulembomhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRULEDEFINITIONPSE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Material or Product Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Itemdefinitionid
        {
            get
            {
                return _Itemdefinitionid;
            }
            set
            {
                if (_Itemdefinitionid != value)
                {
                    _Itemdefinitionid = value;
                }
            }
        }
        private string _Itemdefinitionid;

        /// <summary>
        /// ProcessOperationID (FOM_PROCESSOPERATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Processoperationid
        {
            get
            {
                return _Processoperationid;
            }
            set
            {
                if (_Processoperationid != value)
                {
                    _Processoperationid = value;
                }
            }
        }
        private string _Processoperationid;

        /// <summary>
        /// Type of bom. (PRODUCT/MATERIAL)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Itemtype
        {
            get
            {
                return _Itemtype;
            }
            set
            {
                if (_Itemtype != value)
                {
                    _Itemtype = value;
                }
            }
        }
        private string _Itemtype;

        /// <summary>
        /// Alternative Material grade
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Alternativegrade
        {
            get
            {
                return _Alternativegrade;
            }
            set
            {
                if (_Alternativegrade != value)
                {
                    _Alternativegrade = value;
                }
            }
        }
        private string _Alternativegrade;

        /// <summary>
        /// Qty of mbom.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Mbomquantity
        {
            get
            {
                return _Mbomquantity;
            }
            set
            {
                if (_Mbomquantity != value)
                {
                    _Mbomquantity = value;
                }
            }
        }
        private Nullable<decimal> _Mbomquantity;

        /// <summary>
        /// Unit of mbom qty.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mbomuomid
        {
            get
            {
                return _Mbomuomid;
            }
            set
            {
                if (_Mbomuomid != value)
                {
                    _Mbomuomid = value;
                }
            }
        }
        private string _Mbomuomid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정별 OPERATION  및 순서 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruleoperation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruleoperation : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRULEDEFINITIONPSE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// ProcessOperationID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Processoperationid
        {
            get
            {
                return _Processoperationid;
            }
            set
            {
                if (_Processoperationid != value)
                {
                    _Processoperationid = value;
                }
            }
        }
        private string _Processoperationid;

        /// <summary>
        /// Sequence of operation in ProcessSegment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Instructionnumber
        {
            get
            {
                return _Instructionnumber;
            }
            set
            {
                if (_Instructionnumber != value)
                {
                    _Instructionnumber = value;
                }
            }
        }
        private string _Instructionnumber;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정별 OPERATION  및 순서 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruleoperationhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruleoperationhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRULEDEFINITIONPSE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// ProcessOperationID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Processoperationid
        {
            get
            {
                return _Processoperationid;
            }
            set
            {
                if (_Processoperationid != value)
                {
                    _Processoperationid = value;
                }
            }
        }
        private string _Processoperationid;

        /// <summary>
        /// Sequence of operation in ProcessSegment
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Instructionnumber
        {
            get
            {
                return _Instructionnumber;
            }
            set
            {
                if (_Instructionnumber != value)
                {
                    _Instructionnumber = value;
                }
            }
        }
        private string _Instructionnumber;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 제품별 출하 BOX/PALLET 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Prulepackingbox")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prulepackingbox : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRULEDEFINITIONP)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Program Id (SAP의 Program Id, 차종의 개념)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Companyid
        {
            get
            {
                return _Companyid;
            }
            set
            {
                if (_Companyid != value)
                {
                    _Companyid = value;
                }
            }
        }
        private string _Companyid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Default quantity of this Box
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Outer box identifier (FOM_PACKINGBOXDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Outerboxdefinitionid
        {
            get
            {
                return _Outerboxdefinitionid;
            }
            set
            {
                if (_Outerboxdefinitionid != value)
                {
                    _Outerboxdefinitionid = value;
                }
            }
        }
        private string _Outerboxdefinitionid;

        /// <summary>
        /// Inner box identifier (FOM_PACKINGBOXDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Innerboxdefinitionid
        {
            get
            {
                return _Innerboxdefinitionid;
            }
            set
            {
                if (_Innerboxdefinitionid != value)
                {
                    _Innerboxdefinitionid = value;
                }
            }
        }
        private string _Innerboxdefinitionid;

        /// <summary>
        /// Inner Box 내에 상품적입량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Innerboxdensity
        {
            get
            {
                return _Innerboxdensity;
            }
            set
            {
                if (_Innerboxdensity != value)
                {
                    _Innerboxdensity = value;
                }
            }
        }
        private Nullable<decimal> _Innerboxdensity;

        /// <summary>
        /// 층별 box 개수
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Boxcountperlayer
        {
            get
            {
                return _Boxcountperlayer;
            }
            set
            {
                if (_Boxcountperlayer != value)
                {
                    _Boxcountperlayer = value;
                }
            }
        }
        private Nullable<decimal> _Boxcountperlayer;

        /// <summary>
        /// Box 층 개수
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Layers
        {
            get
            {
                return _Layers;
            }
            set
            {
                if (_Layers != value)
                {
                    _Layers = value;
                }
            }
        }
        private Nullable<decimal> _Layers;

        /// <summary>
        /// Super Box ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentpackingboxdefinitionid
        {
            get
            {
                return _Parentpackingboxdefinitionid;
            }
            set
            {
                if (_Parentpackingboxdefinitionid != value)
                {
                    _Parentpackingboxdefinitionid = value;
                }
            }
        }
        private string _Parentpackingboxdefinitionid;

        /// <summary>
        /// Custom Usage , 차종 등..
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usage
        {
            get
            {
                return _Usage;
            }
            set
            {
                if (_Usage != value)
                {
                    _Usage = value;
                }
            }
        }
        private string _Usage;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                if (_Comment != value)
                {
                    _Comment = value;
                }
            }
        }
        private string _Comment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Filesysid
        {
            get
            {
                return _Filesysid;
            }
            set
            {
                if (_Filesysid != value)
                {
                    _Filesysid = value;
                }
            }
        }
        private string _Filesysid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 제품별 출하 BOX/PALLET 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Prulepackingboxhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prulepackingboxhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRULEDEFINITIONP)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Program Id (SAP의 Program Id, 차종의 개념)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyid
        {
            get
            {
                return _Companyid;
            }
            set
            {
                if (_Companyid != value)
                {
                    _Companyid = value;
                }
            }
        }
        private string _Companyid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Default quantity of this Box
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    _Quantity = value;
                }
            }
        }
        private Nullable<decimal> _Quantity;

        /// <summary>
        /// Outer box identifier (FOM_PACKINGBOXDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Outerboxdefinitionid
        {
            get
            {
                return _Outerboxdefinitionid;
            }
            set
            {
                if (_Outerboxdefinitionid != value)
                {
                    _Outerboxdefinitionid = value;
                }
            }
        }
        private string _Outerboxdefinitionid;

        /// <summary>
        /// Inner box identifier (FOM_PACKINGBOXDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Innerboxdefinitionid
        {
            get
            {
                return _Innerboxdefinitionid;
            }
            set
            {
                if (_Innerboxdefinitionid != value)
                {
                    _Innerboxdefinitionid = value;
                }
            }
        }
        private string _Innerboxdefinitionid;

        /// <summary>
        /// Inner Box 내에 상품적입량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Innerboxdensity
        {
            get
            {
                return _Innerboxdensity;
            }
            set
            {
                if (_Innerboxdensity != value)
                {
                    _Innerboxdensity = value;
                }
            }
        }
        private Nullable<decimal> _Innerboxdensity;

        /// <summary>
        /// 층별 box 개수
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Boxcountperlayer
        {
            get
            {
                return _Boxcountperlayer;
            }
            set
            {
                if (_Boxcountperlayer != value)
                {
                    _Boxcountperlayer = value;
                }
            }
        }
        private Nullable<decimal> _Boxcountperlayer;

        /// <summary>
        /// Box 층 개수
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Layers
        {
            get
            {
                return _Layers;
            }
            set
            {
                if (_Layers != value)
                {
                    _Layers = value;
                }
            }
        }
        private Nullable<decimal> _Layers;

        /// <summary>
        /// Super Box ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentpackingboxdefinitionid
        {
            get
            {
                return _Parentpackingboxdefinitionid;
            }
            set
            {
                if (_Parentpackingboxdefinitionid != value)
                {
                    _Parentpackingboxdefinitionid = value;
                }
            }
        }
        private string _Parentpackingboxdefinitionid;

        /// <summary>
        /// Custom Usage , 차종 등..
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usage
        {
            get
            {
                return _Usage;
            }
            set
            {
                if (_Usage != value)
                {
                    _Usage = value;
                }
            }
        }
        private string _Usage;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                if (_Comment != value)
                {
                    _Comment = value;
                }
            }
        }
        private string _Comment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Filesysid
        {
            get
            {
                return _Filesysid;
            }
            set
            {
                if (_Filesysid != value)
                {
                    _Filesysid = value;
                }
            }
        }
        private string _Filesysid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Q-Time 설정 (A 공정,설비에서 B 공정,설비 진행까지 필요한 최소 / 최대시간 설정)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Pruleqtime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pruleqtime : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRULEDEFINITIONPS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// To process node id. (ref. FOM_PROCESSNODE) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Toprocessnodeid
        {
            get
            {
                return _Toprocessnodeid;
            }
            set
            {
                if (_Toprocessnodeid != value)
                {
                    _Toprocessnodeid = value;
                }
            }
        }
        private string _Toprocessnodeid;

        /// <summary>
        /// To process segment id. (ref. FOM_PROCESSSEGMENT) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Toprocesssegmentid
        {
            get
            {
                return _Toprocesssegmentid;
            }
            set
            {
                if (_Toprocesssegmentid != value)
                {
                    _Toprocesssegmentid = value;
                }
            }
        }
        private string _Toprocesssegmentid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Toequipmentid
        {
            get
            {
                return _Toequipmentid;
            }
            set
            {
                if (_Toequipmentid != value)
                {
                    _Toequipmentid = value;
                }
            }
        }
        private string _Toequipmentid;

        /// <summary>
        /// Type of queue time. (ex. GreaterEqual, Greater, LessEqual, Less)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Qtimetype
        {
            get
            {
                return _Qtimetype;
            }
            set
            {
                if (_Qtimetype != value)
                {
                    _Qtimetype = value;
                }
            }
        }
        private string _Qtimetype;

        /// <summary>
        /// Unit of queue time. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Qtimeunit
        {
            get
            {
                return _Qtimeunit;
            }
            set
            {
                if (_Qtimeunit != value)
                {
                    _Qtimeunit = value;
                }
            }
        }
        private string _Qtimeunit;

        /// <summary>
        /// Error specification of queue time. ex) 1, 60
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Qtimeerrorspec
        {
            get
            {
                return _Qtimeerrorspec;
            }
            set
            {
                if (_Qtimeerrorspec != value)
                {
                    _Qtimeerrorspec = value;
                }
            }
        }
        private Nullable<int> _Qtimeerrorspec;

        /// <summary>
        /// Warning specification of queue time. ex) 1, 20
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Qtimewarningspec
        {
            get
            {
                return _Qtimewarningspec;
            }
            set
            {
                if (_Qtimewarningspec != value)
                {
                    _Qtimewarningspec = value;
                }
            }
        }
        private Nullable<int> _Qtimewarningspec;

        /// <summary>
        /// The date that the set of queue time is applied.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Applieddate
        {
            get
            {
                return _Applieddate;
            }
            set
            {
                if (_Applieddate != value)
                {
                    _Applieddate = value;
                }
            }
        }
        private DateTime _Applieddate;

        /// <summary>
        /// The date that the set of queue time is applied.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Expiredate
        {
            get
            {
                return _Expiredate;
            }
            set
            {
                if (_Expiredate != value)
                {
                    _Expiredate = value;
                }
            }
        }
        private Nullable<DateTime> _Expiredate;

        /// <summary>
        /// The flag to determine whether or not to be forever.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isforever
        {
            get
            {
                return _Isforever;
            }
            set
            {
                if (_Isforever != value)
                {
                    _Isforever = value;
                }
            }
        }
        private string _Isforever;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Sampling에 대한 설정 (이 공정에서는 1,3,5 번째 lot에 대해 sampling 한다)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Prulesample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prulesample : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRULEDEFINITIONPS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Type of sample. ex) LOT, LOTINQTY
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Sampletype
        {
            get
            {
                return _Sampletype;
            }
            set
            {
                if (_Sampletype != value)
                {
                    _Sampletype = value;
                }
            }
        }
        private string _Sampletype;

        /// <summary>
        /// Next process path id. (ref. FOM_PROCESSNODE, FOM_PROCESSPATH)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Nextprocesspath
        {
            get
            {
                return _Nextprocesspath;
            }
            set
            {
                if (_Nextprocesspath != value)
                {
                    _Nextprocesspath = value;
                }
            }
        }
        private string _Nextprocesspath;

        /// <summary>
        /// The count of interval
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Interval
        {
            get
            {
                return _Interval;
            }
            set
            {
                if (_Interval != value)
                {
                    _Interval = value;
                }
            }
        }
        private Nullable<int> _Interval;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Reason 코드 분류 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Reasonclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reasonclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for reason class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Reasonclassid
        {
            get
            {
                return _Reasonclassid;
            }
            set
            {
                if (_Reasonclassid != value)
                {
                    _Reasonclassid = value;
                }
            }
        }
        private string _Reasonclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Reason class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasonclassname
        {
            get
            {
                return _Reasonclassname;
            }
            set
            {
                if (_Reasonclassname != value)
                {
                    _Reasonclassname = value;
                }
            }
        }
        private string _Reasonclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Reason 코드 분류 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Reasonclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reasonclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for reason class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasonclassid
        {
            get
            {
                return _Reasonclassid;
            }
            set
            {
                if (_Reasonclassid != value)
                {
                    _Reasonclassid = value;
                }
            }
        }
        private string _Reasonclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Reason class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasonclassname
        {
            get
            {
                return _Reasonclassname;
            }
            set
            {
                if (_Reasonclassname != value)
                {
                    _Reasonclassname = value;
                }
            }
        }
        private string _Reasonclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 코드 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Reasoncode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reasoncode : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for code id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Reasoncodeid
        {
            get
            {
                return _Reasoncodeid;
            }
            set
            {
                if (_Reasoncodeid != value)
                {
                    _Reasoncodeid = value;
                }
            }
        }
        private string _Reasoncodeid;

        /// <summary>
        /// Code class id. (ref. FOM_CODE_NEWCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Reasonclassid
        {
            get
            {
                return _Reasonclassid;
            }
            set
            {
                if (_Reasonclassid != value)
                {
                    _Reasonclassid = value;
                }
            }
        }
        private string _Reasonclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Code name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncodename
        {
            get
            {
                return _Reasoncodename;
            }
            set
            {
                if (_Reasoncodename != value)
                {
                    _Reasoncodename = value;
                }
            }
        }
        private string _Reasoncodename;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Parent code id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentreasoncodeid
        {
            get
            {
                return _Parentreasoncodeid;
            }
            set
            {
                if (_Parentreasoncodeid != value)
                {
                    _Parentreasoncodeid = value;
                }
            }
        }
        private string _Parentreasoncodeid;

        /// <summary>
        /// Level of reason code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Level
        {
            get
            {
                return _Level;
            }
            set
            {
                if (_Level != value)
                {
                    _Level = value;
                }
            }
        }
        private Nullable<int> _Level;

        /// <summary>
        /// Ordering in selection (for UI Modeling)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 코드 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Reasoncodehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reasoncodehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for code id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncodeid
        {
            get
            {
                return _Reasoncodeid;
            }
            set
            {
                if (_Reasoncodeid != value)
                {
                    _Reasoncodeid = value;
                }
            }
        }
        private string _Reasoncodeid;

        /// <summary>
        /// Code class id. (ref. FOM_CODE_NEWCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasonclassid
        {
            get
            {
                return _Reasonclassid;
            }
            set
            {
                if (_Reasonclassid != value)
                {
                    _Reasonclassid = value;
                }
            }
        }
        private string _Reasonclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Code name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncodename
        {
            get
            {
                return _Reasoncodename;
            }
            set
            {
                if (_Reasoncodename != value)
                {
                    _Reasoncodename = value;
                }
            }
        }
        private string _Reasoncodename;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Parent code id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentreasoncodeid
        {
            get
            {
                return _Parentreasoncodeid;
            }
            set
            {
                if (_Parentreasoncodeid != value)
                {
                    _Parentreasoncodeid = value;
                }
            }
        }
        private string _Parentreasoncodeid;

        /// <summary>
        /// Level of reason code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Level
        {
            get
            {
                return _Level;
            }
            set
            {
                if (_Level != value)
                {
                    _Level = value;
                }
            }
        }
        private Nullable<int> _Level;

        /// <summary>
        /// Ordering in selection (for UI Modeling)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Recipe 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Recipeclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recipeclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for Recipe class id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Recipeclassid
        {
            get
            {
                return _Recipeclassid;
            }
            set
            {
                if (_Recipeclassid != value)
                {
                    _Recipeclassid = value;
                }
            }
        }
        private string _Recipeclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Recipe class name. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeclassname
        {
            get
            {
                return _Recipeclassname;
            }
            set
            {
                if (_Recipeclassname != value)
                {
                    _Recipeclassname = value;
                }
            }
        }
        private string _Recipeclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of Recipe class. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeclasstype
        {
            get
            {
                return _Recipeclasstype;
            }
            set
            {
                if (_Recipeclasstype != value)
                {
                    _Recipeclasstype = value;
                }
            }
        }
        private string _Recipeclasstype;

        /// <summary>
        /// Product rule system id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Recipe 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Recipeclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recipeclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for Recipe class id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeclassid
        {
            get
            {
                return _Recipeclassid;
            }
            set
            {
                if (_Recipeclassid != value)
                {
                    _Recipeclassid = value;
                }
            }
        }
        private string _Recipeclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Recipe class name. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeclassname
        {
            get
            {
                return _Recipeclassname;
            }
            set
            {
                if (_Recipeclassname != value)
                {
                    _Recipeclassname = value;
                }
            }
        }
        private string _Recipeclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of Recipe class. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeclasstype
        {
            get
            {
                return _Recipeclasstype;
            }
            set
            {
                if (_Recipeclasstype != value)
                {
                    _Recipeclasstype = value;
                }
            }
        }
        private string _Recipeclasstype;

        /// <summary>
        /// Product rule system id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Recipe 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Recipedefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recipedefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for Recipe definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Recipedefinitionid
        {
            get
            {
                return _Recipedefinitionid;
            }
            set
            {
                if (_Recipedefinitionid != value)
                {
                    _Recipedefinitionid = value;
                }
            }
        }
        private string _Recipedefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Recipe 정의 이름
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipedefinitionname
        {
            get
            {
                return _Recipedefinitionname;
            }
            set
            {
                if (_Recipedefinitionname != value)
                {
                    _Recipedefinitionname = value;
                }
            }
        }
        private string _Recipedefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Recipe class id. (ref. FOM_RECIPECLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeclassid
        {
            get
            {
                return _Recipeclassid;
            }
            set
            {
                if (_Recipeclassid != value)
                {
                    _Recipeclassid = value;
                }
            }
        }
        private string _Recipeclassid;

        /// <summary>
        /// Recipe definition type.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipedefinitiontype
        {
            get
            {
                return _Recipedefinitiontype;
            }
            set
            {
                if (_Recipedefinitiontype != value)
                {
                    _Recipedefinitiontype = value;
                }
            }
        }
        private string _Recipedefinitiontype;

        /// <summary>
        /// Product rule system id (ref.FOM_PRODUCTRULE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Recipe 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Recipedefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recipedefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for Recipe definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipedefinitionid
        {
            get
            {
                return _Recipedefinitionid;
            }
            set
            {
                if (_Recipedefinitionid != value)
                {
                    _Recipedefinitionid = value;
                }
            }
        }
        private string _Recipedefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Recipe 정의 이름
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipedefinitionname
        {
            get
            {
                return _Recipedefinitionname;
            }
            set
            {
                if (_Recipedefinitionname != value)
                {
                    _Recipedefinitionname = value;
                }
            }
        }
        private string _Recipedefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Recipe class id. (ref. FOM_RECIPECLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeclassid
        {
            get
            {
                return _Recipeclassid;
            }
            set
            {
                if (_Recipeclassid != value)
                {
                    _Recipeclassid = value;
                }
            }
        }
        private string _Recipeclassid;

        /// <summary>
        /// Recipe definition type.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipedefinitiontype
        {
            get
            {
                return _Recipedefinitiontype;
            }
            set
            {
                if (_Recipedefinitiontype != value)
                {
                    _Recipedefinitiontype = value;
                }
            }
        }
        private string _Recipedefinitiontype;

        /// <summary>
        /// Product rule system id (ref.FOM_PRODUCTRULE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Recipe의 parameter정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Recipeparameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recipeparameter : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Recipe Parameter ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Recipeparameterid
        {
            get
            {
                return _Recipeparameterid;
            }
            set
            {
                if (_Recipeparameterid != value)
                {
                    _Recipeparameterid = value;
                }
            }
        }
        private string _Recipeparameterid;

        /// <summary>
        /// Recipe Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Recipedefinitionid
        {
            get
            {
                return _Recipedefinitionid;
            }
            set
            {
                if (_Recipedefinitionid != value)
                {
                    _Recipedefinitionid = value;
                }
            }
        }
        private string _Recipedefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Recipe parameter name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeparametername
        {
            get
            {
                return _Recipeparametername;
            }
            set
            {
                if (_Recipeparametername != value)
                {
                    _Recipeparametername = value;
                }
            }
        }
        private string _Recipeparametername;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Recipe Class ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeclassid
        {
            get
            {
                return _Recipeclassid;
            }
            set
            {
                if (_Recipeclassid != value)
                {
                    _Recipeclassid = value;
                }
            }
        }
        private string _Recipeclassid;

        /// <summary>
        /// Data Type ex) Int, Float, String
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Datatype
        {
            get
            {
                return _Datatype;
            }
            set
            {
                if (_Datatype != value)
                {
                    _Datatype = value;
                }
            }
        }
        private string _Datatype;

        /// <summary>
        /// Validation Type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Validationtype
        {
            get
            {
                return _Validationtype;
            }
            set
            {
                if (_Validationtype != value)
                {
                    _Validationtype = value;
                }
            }
        }
        private string _Validationtype;

        /// <summary>
        /// Target
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Target
        {
            get
            {
                return _Target;
            }
            set
            {
                if (_Target != value)
                {
                    _Target = value;
                }
            }
        }
        private string _Target;

        /// <summary>
        /// Minimum Limit
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lowerlimit
        {
            get
            {
                return _Lowerlimit;
            }
            set
            {
                if (_Lowerlimit != value)
                {
                    _Lowerlimit = value;
                }
            }
        }
        private string _Lowerlimit;

        /// <summary>
        /// Maximum Limit
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Upperlimit
        {
            get
            {
                return _Upperlimit;
            }
            set
            {
                if (_Upperlimit != value)
                {
                    _Upperlimit = value;
                }
            }
        }
        private string _Upperlimit;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Recipe의 parameter정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Recipeparameterhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recipeparameterhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Recipe Parameter ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeparameterid
        {
            get
            {
                return _Recipeparameterid;
            }
            set
            {
                if (_Recipeparameterid != value)
                {
                    _Recipeparameterid = value;
                }
            }
        }
        private string _Recipeparameterid;

        /// <summary>
        /// Recipe Definition ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipedefinitionid
        {
            get
            {
                return _Recipedefinitionid;
            }
            set
            {
                if (_Recipedefinitionid != value)
                {
                    _Recipedefinitionid = value;
                }
            }
        }
        private string _Recipedefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Recipe parameter name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeparametername
        {
            get
            {
                return _Recipeparametername;
            }
            set
            {
                if (_Recipeparametername != value)
                {
                    _Recipeparametername = value;
                }
            }
        }
        private string _Recipeparametername;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Recipe Class ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Recipeclassid
        {
            get
            {
                return _Recipeclassid;
            }
            set
            {
                if (_Recipeclassid != value)
                {
                    _Recipeclassid = value;
                }
            }
        }
        private string _Recipeclassid;

        /// <summary>
        /// Data Type ex) Int, Float, String
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Datatype
        {
            get
            {
                return _Datatype;
            }
            set
            {
                if (_Datatype != value)
                {
                    _Datatype = value;
                }
            }
        }
        private string _Datatype;

        /// <summary>
        /// Validation Type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Validationtype
        {
            get
            {
                return _Validationtype;
            }
            set
            {
                if (_Validationtype != value)
                {
                    _Validationtype = value;
                }
            }
        }
        private string _Validationtype;

        /// <summary>
        /// Target
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Target
        {
            get
            {
                return _Target;
            }
            set
            {
                if (_Target != value)
                {
                    _Target = value;
                }
            }
        }
        private string _Target;

        /// <summary>
        /// Minimum Limit
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lowerlimit
        {
            get
            {
                return _Lowerlimit;
            }
            set
            {
                if (_Lowerlimit != value)
                {
                    _Lowerlimit = value;
                }
            }
        }
        private string _Lowerlimit;

        /// <summary>
        /// Maximum Limit
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Upperlimit
        {
            get
            {
                return _Upperlimit;
            }
            set
            {
                if (_Upperlimit != value)
                {
                    _Upperlimit = value;
                }
            }
        }
        private string _Upperlimit;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 현재 sampling 상태
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Sample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sample : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRODUCTRULE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// It is used when the type of sample is LOT. It is changed to zero after one sampling be performed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Currentlotcount
        {
            get
            {
                return _Currentlotcount;
            }
            set
            {
                if (_Currentlotcount != value)
                {
                    _Currentlotcount = value;
                }
            }
        }
        private Nullable<int> _Currentlotcount;

        /// <summary>
        /// It is used when the type of sample is LOT.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Totlotcount
        {
            get
            {
                return _Totlotcount;
            }
            set
            {
                if (_Totlotcount != value)
                {
                    _Totlotcount = value;
                }
            }
        }
        private Nullable<int> _Totlotcount;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 현재 sampling 상태 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Samplehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Samplehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for product rule system id. (ref. FOM_PRODUCTRULE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productrulesysid
        {
            get
            {
                return _Productrulesysid;
            }
            set
            {
                if (_Productrulesysid != value)
                {
                    _Productrulesysid = value;
                }
            }
        }
        private string _Productrulesysid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// It is used when the type of sample is LOT. It is changed to zero after one sampling be performed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Currentlotcount
        {
            get
            {
                return _Currentlotcount;
            }
            set
            {
                if (_Currentlotcount != value)
                {
                    _Currentlotcount = value;
                }
            }
        }
        private Nullable<int> _Currentlotcount;

        /// <summary>
        /// It is used when the type of sample is LOT.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Totlotcount
        {
            get
            {
                return _Totlotcount;
            }
            set
            {
                if (_Totlotcount != value)
                {
                    _Totlotcount = value;
                }
            }
        }
        private Nullable<int> _Totlotcount;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Scheqpoffcalendar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scheqpoffcalendar : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Shiftid
        {
            get
            {
                return _Shiftid;
            }
            set
            {
                if (_Shiftid != value)
                {
                    _Shiftid = value;
                }
            }
        }
        private string _Shiftid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public DateTime Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private DateTime _Starttime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=6, Default="")]
        [DataMemberAttribute()]
        public DateTime Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private DateTime _Endtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=500, DataSize=500, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Offtimereasondescription
        {
            get
            {
                return _Offtimereasondescription;
            }
            set
            {
                if (_Offtimereasondescription != value)
                {
                    _Offtimereasondescription = value;
                }
            }
        }
        private string _Offtimereasondescription;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_ioiactionflag
        {
            get
            {
                return _If_ioiactionflag;
            }
            set
            {
                if (_If_ioiactionflag != value)
                {
                    _If_ioiactionflag = value;
                }
            }
        }
        private string _If_ioiactionflag;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=7, Default="")]
        [DataMemberAttribute()]
        public long Create_seq
        {
            get
            {
                return _Create_seq;
            }
            set
            {
                if (_Create_seq != value)
                {
                    _Create_seq = value;
                }
            }
        }
        private long _Create_seq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Create_time
        {
            get
            {
                return _Create_time;
            }
            set
            {
                if (_Create_time != value)
                {
                    _Create_time = value;
                }
            }
        }
        private DateTime _Create_time;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receive_time_
        {
            get
            {
                return _Receive_time_;
            }
            set
            {
                if (_Receive_time_ != value)
                {
                    _Receive_time_ = value;
                }
            }
        }
        private Nullable<DateTime> _Receive_time_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_flag_
        {
            get
            {
                return _Receive_flag_;
            }
            set
            {
                if (_Receive_flag_ != value)
                {
                    _Receive_flag_ = value;
                }
            }
        }
        private string _Receive_flag_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_msg_
        {
            get
            {
                return _Receive_msg_;
            }
            set
            {
                if (_Receive_msg_ != value)
                {
                    _Receive_msg_ = value;
                }
            }
        }
        private string _Receive_msg_;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Scheqpoffcalendarhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scheqpoffcalendarhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shiftid
        {
            get
            {
                return _Shiftid;
            }
            set
            {
                if (_Shiftid != value)
                {
                    _Shiftid = value;
                }
            }
        }
        private string _Shiftid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private DateTime _Starttime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private DateTime _Endtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=500, DataSize=500, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Offtimereasondescription
        {
            get
            {
                return _Offtimereasondescription;
            }
            set
            {
                if (_Offtimereasondescription != value)
                {
                    _Offtimereasondescription = value;
                }
            }
        }
        private string _Offtimereasondescription;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_ioiactionflag
        {
            get
            {
                return _If_ioiactionflag;
            }
            set
            {
                if (_If_ioiactionflag != value)
                {
                    _If_ioiactionflag = value;
                }
            }
        }
        private string _If_ioiactionflag;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public long Create_seq
        {
            get
            {
                return _Create_seq;
            }
            set
            {
                if (_Create_seq != value)
                {
                    _Create_seq = value;
                }
            }
        }
        private long _Create_seq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Create_time
        {
            get
            {
                return _Create_time;
            }
            set
            {
                if (_Create_time != value)
                {
                    _Create_time = value;
                }
            }
        }
        private DateTime _Create_time;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receive_time_
        {
            get
            {
                return _Receive_time_;
            }
            set
            {
                if (_Receive_time_ != value)
                {
                    _Receive_time_ = value;
                }
            }
        }
        private Nullable<DateTime> _Receive_time_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_flag_
        {
            get
            {
                return _Receive_flag_;
            }
            set
            {
                if (_Receive_flag_ != value)
                {
                    _Receive_flag_ = value;
                }
            }
        }
        private string _Receive_flag_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_msg_
        {
            get
            {
                return _Receive_msg_;
            }
            set
            {
                if (_Receive_msg_ != value)
                {
                    _Receive_msg_ = value;
                }
            }
        }
        private string _Receive_msg_;

        #endregion
    }

    /// <summary>
    /// 품목 교체 시간 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Scheqproductsetuptime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scheqproductsetuptime : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// FACTORYID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Line(Equipment)ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// FROM PRODUCTDEFINITIONID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Fromproductdefinitionid
        {
            get
            {
                return _Fromproductdefinitionid;
            }
            set
            {
                if (_Fromproductdefinitionid != value)
                {
                    _Fromproductdefinitionid = value;
                }
            }
        }
        private string _Fromproductdefinitionid;

        /// <summary>
        /// TO PRODUCTDEFINITIONID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Toproductdefinitionid
        {
            get
            {
                return _Toproductdefinitionid;
            }
            set
            {
                if (_Toproductdefinitionid != value)
                {
                    _Toproductdefinitionid = value;
                }
            }
        }
        private string _Toproductdefinitionid;

        /// <summary>
        /// PART CHANGE시간 (분)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Setuptime
        {
            get
            {
                return _Setuptime;
            }
            set
            {
                if (_Setuptime != value)
                {
                    _Setuptime = value;
                }
            }
        }
        private Nullable<decimal> _Setuptime;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// EAI입력시점 - 인터페이스 구분 (i:등록/u:수정/d:수정), 소스에서 가능한 경우 입력
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_ioiactionflag
        {
            get
            {
                return _If_ioiactionflag;
            }
            set
            {
                if (_If_ioiactionflag != value)
                {
                    _If_ioiactionflag = value;
                }
            }
        }
        private string _If_ioiactionflag;

        /// <summary>
        /// EAI입력시점 - SENDING 인터페이스 순번 (PK, Identity), 자동증가
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<long> Create_seq
        {
            get
            {
                return _Create_seq;
            }
            set
            {
                if (_Create_seq != value)
                {
                    _Create_seq = value;
                }
            }
        }
        private Nullable<long> _Create_seq;

        /// <summary>
        /// I/F 전송시간, Default값 저장 (필요시 소스의 생성한 시간이 필요하면 별도 협의)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Create_time
        {
            get
            {
                return _Create_time;
            }
            set
            {
                if (_Create_time != value)
                {
                    _Create_time = value;
                }
            }
        }
        private Nullable<DateTime> _Create_time;

        /// <summary>
        /// 수신측 입력 - I/F 수신측에서 처리한 시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receive_time_
        {
            get
            {
                return _Receive_time_;
            }
            set
            {
                if (_Receive_time_ != value)
                {
                    _Receive_time_ = value;
                }
            }
        }
        private Nullable<DateTime> _Receive_time_;

        /// <summary>
        /// 수신측 입력 - I/F 수신 처리 구분 ,
 ///D: Delivery - 전송됨 ,char(13),char(10),
 ///S: Success - 처리성공 ,char(13),char(10),
 ///E: Error - 처리실패
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_flag_
        {
            get
            {
                return _Receive_flag_;
            }
            set
            {
                if (_Receive_flag_ != value)
                {
                    _Receive_flag_ = value;
                }
            }
        }
        private string _Receive_flag_;

        /// <summary>
        /// 수신측 입력 - I/F 수신 처리시 에러 메시지
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Receive_msg_
        {
            get
            {
                return _Receive_msg_;
            }
            set
            {
                if (_Receive_msg_ != value)
                {
                    _Receive_msg_ = value;
                }
            }
        }
        private string _Receive_msg_;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Scheqpproduph")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scheqpproduph : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="real", MaxLength=4, DataSize=4, Scale=0, Precision=24, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Uph
        {
            get
            {
                return _Uph;
            }
            set
            {
                if (_Uph != value)
                {
                    _Uph = value;
                }
            }
        }
        private int _Uph;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="real", MaxLength=4, DataSize=4, Scale=0, Precision=24, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Tacktime
        {
            get
            {
                return _Tacktime;
            }
            set
            {
                if (_Tacktime != value)
                {
                    _Tacktime = value;
                }
            }
        }
        private int _Tacktime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Timeuom
        {
            get
            {
                return _Timeuom;
            }
            set
            {
                if (_Timeuom != value)
                {
                    _Timeuom = value;
                }
            }
        }
        private string _Timeuom;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_ioiactionflag
        {
            get
            {
                return _If_ioiactionflag;
            }
            set
            {
                if (_If_ioiactionflag != value)
                {
                    _If_ioiactionflag = value;
                }
            }
        }
        private string _If_ioiactionflag;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public long Create_seq
        {
            get
            {
                return _Create_seq;
            }
            set
            {
                if (_Create_seq != value)
                {
                    _Create_seq = value;
                }
            }
        }
        private long _Create_seq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Create_time
        {
            get
            {
                return _Create_time;
            }
            set
            {
                if (_Create_time != value)
                {
                    _Create_time = value;
                }
            }
        }
        private DateTime _Create_time;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receive_time_
        {
            get
            {
                return _Receive_time_;
            }
            set
            {
                if (_Receive_time_ != value)
                {
                    _Receive_time_ = value;
                }
            }
        }
        private Nullable<DateTime> _Receive_time_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_flag_
        {
            get
            {
                return _Receive_flag_;
            }
            set
            {
                if (_Receive_flag_ != value)
                {
                    _Receive_flag_ = value;
                }
            }
        }
        private string _Receive_flag_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_msg_
        {
            get
            {
                return _Receive_msg_;
            }
            set
            {
                if (_Receive_msg_ != value)
                {
                    _Receive_msg_ = value;
                }
            }
        }
        private string _Receive_msg_;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Scheqpproduphhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scheqpproduphhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="real", MaxLength=4, DataSize=4, Scale=0, Precision=24, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Uph
        {
            get
            {
                return _Uph;
            }
            set
            {
                if (_Uph != value)
                {
                    _Uph = value;
                }
            }
        }
        private int _Uph;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="real", MaxLength=4, DataSize=4, Scale=0, Precision=24, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Tacktime
        {
            get
            {
                return _Tacktime;
            }
            set
            {
                if (_Tacktime != value)
                {
                    _Tacktime = value;
                }
            }
        }
        private int _Tacktime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Timeuom
        {
            get
            {
                return _Timeuom;
            }
            set
            {
                if (_Timeuom != value)
                {
                    _Timeuom = value;
                }
            }
        }
        private string _Timeuom;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_ioiactionflag
        {
            get
            {
                return _If_ioiactionflag;
            }
            set
            {
                if (_If_ioiactionflag != value)
                {
                    _If_ioiactionflag = value;
                }
            }
        }
        private string _If_ioiactionflag;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public long Create_seq
        {
            get
            {
                return _Create_seq;
            }
            set
            {
                if (_Create_seq != value)
                {
                    _Create_seq = value;
                }
            }
        }
        private long _Create_seq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Create_time
        {
            get
            {
                return _Create_time;
            }
            set
            {
                if (_Create_time != value)
                {
                    _Create_time = value;
                }
            }
        }
        private DateTime _Create_time;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receive_time_
        {
            get
            {
                return _Receive_time_;
            }
            set
            {
                if (_Receive_time_ != value)
                {
                    _Receive_time_ = value;
                }
            }
        }
        private Nullable<DateTime> _Receive_time_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_flag_
        {
            get
            {
                return _Receive_flag_;
            }
            set
            {
                if (_Receive_flag_ != value)
                {
                    _Receive_flag_ = value;
                }
            }
        }
        private string _Receive_flag_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_msg_
        {
            get
            {
                return _Receive_msg_;
            }
            set
            {
                if (_Receive_msg_ != value)
                {
                    _Receive_msg_ = value;
                }
            }
        }
        private string _Receive_msg_;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Scheqpuph")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scheqpuph : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="real", MaxLength=4, DataSize=4, Scale=0, Precision=24, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Uph
        {
            get
            {
                return _Uph;
            }
            set
            {
                if (_Uph != value)
                {
                    _Uph = value;
                }
            }
        }
        private int _Uph;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="real", MaxLength=4, DataSize=4, Scale=0, Precision=24, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Tacktime
        {
            get
            {
                return _Tacktime;
            }
            set
            {
                if (_Tacktime != value)
                {
                    _Tacktime = value;
                }
            }
        }
        private int _Tacktime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Timeuom
        {
            get
            {
                return _Timeuom;
            }
            set
            {
                if (_Timeuom != value)
                {
                    _Timeuom = value;
                }
            }
        }
        private string _Timeuom;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_ioiactionflag
        {
            get
            {
                return _If_ioiactionflag;
            }
            set
            {
                if (_If_ioiactionflag != value)
                {
                    _If_ioiactionflag = value;
                }
            }
        }
        private string _If_ioiactionflag;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public long Create_seq
        {
            get
            {
                return _Create_seq;
            }
            set
            {
                if (_Create_seq != value)
                {
                    _Create_seq = value;
                }
            }
        }
        private long _Create_seq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Create_time
        {
            get
            {
                return _Create_time;
            }
            set
            {
                if (_Create_time != value)
                {
                    _Create_time = value;
                }
            }
        }
        private DateTime _Create_time;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receive_time_
        {
            get
            {
                return _Receive_time_;
            }
            set
            {
                if (_Receive_time_ != value)
                {
                    _Receive_time_ = value;
                }
            }
        }
        private Nullable<DateTime> _Receive_time_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_flag_
        {
            get
            {
                return _Receive_flag_;
            }
            set
            {
                if (_Receive_flag_ != value)
                {
                    _Receive_flag_ = value;
                }
            }
        }
        private string _Receive_flag_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_msg_
        {
            get
            {
                return _Receive_msg_;
            }
            set
            {
                if (_Receive_msg_ != value)
                {
                    _Receive_msg_ = value;
                }
            }
        }
        private string _Receive_msg_;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Scheqpuphhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scheqpuphhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="real", MaxLength=4, DataSize=4, Scale=0, Precision=24, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Uph
        {
            get
            {
                return _Uph;
            }
            set
            {
                if (_Uph != value)
                {
                    _Uph = value;
                }
            }
        }
        private int _Uph;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="real", MaxLength=4, DataSize=4, Scale=0, Precision=24, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Tacktime
        {
            get
            {
                return _Tacktime;
            }
            set
            {
                if (_Tacktime != value)
                {
                    _Tacktime = value;
                }
            }
        }
        private int _Tacktime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Timeuom
        {
            get
            {
                return _Timeuom;
            }
            set
            {
                if (_Timeuom != value)
                {
                    _Timeuom = value;
                }
            }
        }
        private string _Timeuom;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_ioiactionflag
        {
            get
            {
                return _If_ioiactionflag;
            }
            set
            {
                if (_If_ioiactionflag != value)
                {
                    _If_ioiactionflag = value;
                }
            }
        }
        private string _If_ioiactionflag;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public long Create_seq
        {
            get
            {
                return _Create_seq;
            }
            set
            {
                if (_Create_seq != value)
                {
                    _Create_seq = value;
                }
            }
        }
        private long _Create_seq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Create_time
        {
            get
            {
                return _Create_time;
            }
            set
            {
                if (_Create_time != value)
                {
                    _Create_time = value;
                }
            }
        }
        private DateTime _Create_time;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receive_time_
        {
            get
            {
                return _Receive_time_;
            }
            set
            {
                if (_Receive_time_ != value)
                {
                    _Receive_time_ = value;
                }
            }
        }
        private Nullable<DateTime> _Receive_time_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_flag_
        {
            get
            {
                return _Receive_flag_;
            }
            set
            {
                if (_Receive_flag_ != value)
                {
                    _Receive_flag_ = value;
                }
            }
        }
        private string _Receive_flag_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_msg_
        {
            get
            {
                return _Receive_msg_;
            }
            set
            {
                if (_Receive_msg_ != value)
                {
                    _Receive_msg_ = value;
                }
            }
        }
        private string _Receive_msg_;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Scheqpworkcalendar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scheqpworkcalendar : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Shiftid
        {
            get
            {
                return _Shiftid;
            }
            set
            {
                if (_Shiftid != value)
                {
                    _Shiftid = value;
                }
            }
        }
        private string _Shiftid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private DateTime _Starttime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private DateTime _Endtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Overstarttime
        {
            get
            {
                return _Overstarttime;
            }
            set
            {
                if (_Overstarttime != value)
                {
                    _Overstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Overstarttime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Overendtime
        {
            get
            {
                return _Overendtime;
            }
            set
            {
                if (_Overendtime != value)
                {
                    _Overendtime = value;
                }
            }
        }
        private Nullable<DateTime> _Overendtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_ioiactionflag
        {
            get
            {
                return _If_ioiactionflag;
            }
            set
            {
                if (_If_ioiactionflag != value)
                {
                    _If_ioiactionflag = value;
                }
            }
        }
        private string _If_ioiactionflag;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public long Create_seq
        {
            get
            {
                return _Create_seq;
            }
            set
            {
                if (_Create_seq != value)
                {
                    _Create_seq = value;
                }
            }
        }
        private long _Create_seq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Create_time
        {
            get
            {
                return _Create_time;
            }
            set
            {
                if (_Create_time != value)
                {
                    _Create_time = value;
                }
            }
        }
        private DateTime _Create_time;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receive_time_
        {
            get
            {
                return _Receive_time_;
            }
            set
            {
                if (_Receive_time_ != value)
                {
                    _Receive_time_ = value;
                }
            }
        }
        private Nullable<DateTime> _Receive_time_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_flag_
        {
            get
            {
                return _Receive_flag_;
            }
            set
            {
                if (_Receive_flag_ != value)
                {
                    _Receive_flag_ = value;
                }
            }
        }
        private string _Receive_flag_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_msg_
        {
            get
            {
                return _Receive_msg_;
            }
            set
            {
                if (_Receive_msg_ != value)
                {
                    _Receive_msg_ = value;
                }
            }
        }
        private string _Receive_msg_;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Scheqpworkcalendarhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scheqpworkcalendarhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shiftid
        {
            get
            {
                return _Shiftid;
            }
            set
            {
                if (_Shiftid != value)
                {
                    _Shiftid = value;
                }
            }
        }
        private string _Shiftid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private DateTime _Starttime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private DateTime _Endtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Overstarttime
        {
            get
            {
                return _Overstarttime;
            }
            set
            {
                if (_Overstarttime != value)
                {
                    _Overstarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Overstarttime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Overendtime
        {
            get
            {
                return _Overendtime;
            }
            set
            {
                if (_Overendtime != value)
                {
                    _Overendtime = value;
                }
            }
        }
        private Nullable<DateTime> _Overendtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string If_ioiactionflag
        {
            get
            {
                return _If_ioiactionflag;
            }
            set
            {
                if (_If_ioiactionflag != value)
                {
                    _If_ioiactionflag = value;
                }
            }
        }
        private string _If_ioiactionflag;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public long Create_seq
        {
            get
            {
                return _Create_seq;
            }
            set
            {
                if (_Create_seq != value)
                {
                    _Create_seq = value;
                }
            }
        }
        private long _Create_seq;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Create_time
        {
            get
            {
                return _Create_time;
            }
            set
            {
                if (_Create_time != value)
                {
                    _Create_time = value;
                }
            }
        }
        private DateTime _Create_time;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Receive_time_
        {
            get
            {
                return _Receive_time_;
            }
            set
            {
                if (_Receive_time_ != value)
                {
                    _Receive_time_ = value;
                }
            }
        }
        private Nullable<DateTime> _Receive_time_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_flag_
        {
            get
            {
                return _Receive_flag_;
            }
            set
            {
                if (_Receive_flag_ != value)
                {
                    _Receive_flag_ = value;
                }
            }
        }
        private string _Receive_flag_;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Receive_msg_
        {
            get
            {
                return _Receive_msg_;
            }
            set
            {
                if (_Receive_msg_ != value)
                {
                    _Receive_msg_ = value;
                }
            }
        }
        private string _Receive_msg_;

        #endregion
    }

    /// <summary>
    /// Shift 정의 (2교대 / 3교대 설정)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Shift")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shift : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Shift id. ex) DAY, NIGHT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Shiftid
        {
            get
            {
                return _Shiftid;
            }
            set
            {
                if (_Shiftid != value)
                {
                    _Shiftid = value;
                }
            }
        }
        private string _Shiftid;

        /// <summary>
        /// Type of shift.  Ex) Nomal, Holiday
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Shifttype
        {
            get
            {
                return _Shifttype;
            }
            set
            {
                if (_Shifttype != value)
                {
                    _Shifttype = value;
                }
            }
        }
        private string _Shifttype;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Shift name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shiftname
        {
            get
            {
                return _Shiftname;
            }
            set
            {
                if (_Shiftname != value)
                {
                    _Shiftname = value;
                }
            }
        }
        private string _Shiftname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// The time that the shift is started.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=6, DataSize=6, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private string _Starttime;

        /// <summary>
        /// The time that the shift is ended.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=6, DataSize=6, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private string _Endtime;

        /// <summary>
        /// The time that the shift is overed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=6, DataSize=6, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Overtime
        {
            get
            {
                return _Overtime;
            }
            set
            {
                if (_Overtime != value)
                {
                    _Overtime = value;
                }
            }
        }
        private string _Overtime;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Shift 정의 (2교대 / 3교대 설정) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Shifthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shifthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Shift id. ex) DAY, NIGHT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shiftid
        {
            get
            {
                return _Shiftid;
            }
            set
            {
                if (_Shiftid != value)
                {
                    _Shiftid = value;
                }
            }
        }
        private string _Shiftid;

        /// <summary>
        /// Type of shift.  Ex) Nomal, Holiday
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shifttype
        {
            get
            {
                return _Shifttype;
            }
            set
            {
                if (_Shifttype != value)
                {
                    _Shifttype = value;
                }
            }
        }
        private string _Shifttype;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Shift name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shiftname
        {
            get
            {
                return _Shiftname;
            }
            set
            {
                if (_Shiftname != value)
                {
                    _Shiftname = value;
                }
            }
        }
        private string _Shiftname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// The time that the shift is started.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=6, DataSize=6, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private string _Starttime;

        /// <summary>
        /// The time that the shift is ended.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=6, DataSize=6, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private string _Endtime;

        /// <summary>
        /// The time that the shift is overed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=6, DataSize=6, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Overtime
        {
            get
            {
                return _Overtime;
            }
            set
            {
                if (_Overtime != value)
                {
                    _Overtime = value;
                }
            }
        }
        private string _Overtime;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 공정시편 등록 테이블
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Specimen")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Specimen : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// SPECIMEN DATE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public DateTime Specimendate
        {
            get
            {
                return _Specimendate;
            }
            set
            {
                if (_Specimendate != value)
                {
                    _Specimendate = value;
                }
            }
        }
        private DateTime _Specimendate;

        /// <summary>
        /// SPECIMEN NUMNBER
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public int Specimennumber
        {
            get
            {
                return _Specimennumber;
            }
            set
            {
                if (_Specimennumber != value)
                {
                    _Specimennumber = value;
                }
            }
        }
        private int _Specimennumber;

        /// <summary>
        /// Group of Specimen
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Specimensequence
        {
            get
            {
                return _Specimensequence;
            }
            set
            {
                if (_Specimensequence != value)
                {
                    _Specimensequence = value;
                }
            }
        }
        private int _Specimensequence;

        /// <summary>
        /// Division of Specimen
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Specimendivision
        {
            get
            {
                return _Specimendivision;
            }
            set
            {
                if (_Specimendivision != value)
                {
                    _Specimendivision = value;
                }
            }
        }
        private string _Specimendivision;

        /// <summary>
        /// Detailed process code
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processoperationid
        {
            get
            {
                return _Processoperationid;
            }
            set
            {
                if (_Processoperationid != value)
                {
                    _Processoperationid = value;
                }
            }
        }
        private string _Processoperationid;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Current location of lot id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Unique identifier for lot id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Lotid
        {
            get
            {
                return _Lotid;
            }
            set
            {
                if (_Lotid != value)
                {
                    _Lotid = value;
                }
            }
        }
        private string _Lotid;

        /// <summary>
        /// Quantity of specimen
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=8, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Specmenquantity
        {
            get
            {
                return _Specmenquantity;
            }
            set
            {
                if (_Specmenquantity != value)
                {
                    _Specmenquantity = value;
                }
            }
        }
        private Nullable<int> _Specmenquantity;

        /// <summary>
        /// Complete Flag of Specimen
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'1'")]
        [DataMemberAttribute()]
        public string Confirmflag
        {
            get
            {
                return _Confirmflag;
            }
            set
            {
                if (_Confirmflag != value)
                {
                    _Confirmflag = value;
                }
            }
        }
        private string _Confirmflag;

        /// <summary>
        /// Note of Specimen
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Specimenreference
        {
            get
            {
                return _Specimenreference;
            }
            set
            {
                if (_Specimenreference != value)
                {
                    _Specimenreference = value;
                }
            }
        }
        private string _Specimenreference;

        /// <summary>
        /// 시편출고 등록 인터페이스 전송여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Interfaceflag
        {
            get
            {
                return _Interfaceflag;
            }
            set
            {
                if (_Interfaceflag != value)
                {
                    _Interfaceflag = value;
                }
            }
        }
        private string _Interfaceflag;

        /// <summary>
        /// 시편출고 확정 인터페이스 전송여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Interfaceconfirmflag
        {
            get
            {
                return _Interfaceconfirmflag;
            }
            set
            {
                if (_Interfaceconfirmflag != value)
                {
                    _Interfaceconfirmflag = value;
                }
            }
        }
        private string _Interfaceconfirmflag;

        /// <summary>
        /// Work order id. (ref. FOM_WORKORDER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Iswiplot
        {
            get
            {
                return _Iswiplot;
            }
            set
            {
                if (_Iswiplot != value)
                {
                    _Iswiplot = value;
                }
            }
        }
        private string _Iswiplot;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// State 정의 (Lot state, 설비 state 등)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// State id. (ref. FOM_STATE) (Category of state3)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Stateid
        {
            get
            {
                return _Stateid;
            }
            set
            {
                if (_Stateid != value)
                {
                    _Stateid = value;
                }
            }
        }
        private string _Stateid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// State name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statename
        {
            get
            {
                return _Statename;
            }
            set
            {
                if (_Statename != value)
                {
                    _Statename = value;
                }
            }
        }
        private string _Statename;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// StateType - for which Object using - MAIN | SUB | PORT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statetype
        {
            get
            {
                return _Statetype;
            }
            set
            {
                if (_Statetype != value)
                {
                    _Statetype = value;
                }
            }
        }
        private string _Statetype;

        /// <summary>
        /// Standard State name (i.e: UnScheduledTime..) ref. E10State
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Stdstate
        {
            get
            {
                return _Stdstate;
            }
            set
            {
                if (_Stdstate != value)
                {
                    _Stdstate = value;
                }
            }
        }
        private string _Stdstate;

        /// <summary>
        /// Category of state1
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statecategory
        {
            get
            {
                return _Statecategory;
            }
            set
            {
                if (_Statecategory != value)
                {
                    _Statecategory = value;
                }
            }
        }
        private string _Statecategory;

        /// <summary>
        /// Category of state2
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statecategory2
        {
            get
            {
                return _Statecategory2;
            }
            set
            {
                if (_Statecategory2 != value)
                {
                    _Statecategory2 = value;
                }
            }
        }
        private string _Statecategory2;

        /// <summary>
        /// Ordering in Select. (for UI Modeling)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// 설비상태반영여부 (Y/N)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentstate
        {
            get
            {
                return _Equipmentstate;
            }
            set
            {
                if (_Equipmentstate != value)
                {
                    _Equipmentstate = value;
                }
            }
        }
        private string _Equipmentstate;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Statehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// State id. (ref. FOM_STATE)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Stateid
        {
            get
            {
                return _Stateid;
            }
            set
            {
                if (_Stateid != value)
                {
                    _Stateid = value;
                }
            }
        }
        private string _Stateid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// State name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statename
        {
            get
            {
                return _Statename;
            }
            set
            {
                if (_Statename != value)
                {
                    _Statename = value;
                }
            }
        }
        private string _Statename;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// StateType - for which Object using - MAIN | SUB | PORT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statetype
        {
            get
            {
                return _Statetype;
            }
            set
            {
                if (_Statetype != value)
                {
                    _Statetype = value;
                }
            }
        }
        private string _Statetype;

        /// <summary>
        /// Standard State name (i.e: UnScheduledTime..) ref. E10State
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Stdstate
        {
            get
            {
                return _Stdstate;
            }
            set
            {
                if (_Stdstate != value)
                {
                    _Stdstate = value;
                }
            }
        }
        private string _Stdstate;

        /// <summary>
        /// Category of state.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statecategory
        {
            get
            {
                return _Statecategory;
            }
            set
            {
                if (_Statecategory != value)
                {
                    _Statecategory = value;
                }
            }
        }
        private string _Statecategory;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statecategory2
        {
            get
            {
                return _Statecategory2;
            }
            set
            {
                if (_Statecategory2 != value)
                {
                    _Statecategory2 = value;
                }
            }
        }
        private string _Statecategory2;

        /// <summary>
        /// Ordering in Select. (for UI Modeling)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentstate
        {
            get
            {
                return _Equipmentstate;
            }
            set
            {
                if (_Equipmentstate != value)
                {
                    _Equipmentstate = value;
                }
            }
        }
        private string _Equipmentstate;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// State 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Statemodel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statemodel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for state model id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Statemodelid
        {
            get
            {
                return _Statemodelid;
            }
            set
            {
                if (_Statemodelid != value)
                {
                    _Statemodelid = value;
                }
            }
        }
        private string _Statemodelid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// State model name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statemodelname
        {
            get
            {
                return _Statemodelname;
            }
            set
            {
                if (_Statemodelname != value)
                {
                    _Statemodelname = value;
                }
            }
        }
        private string _Statemodelname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// State 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Statemodelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statemodelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for state model id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statemodelid
        {
            get
            {
                return _Statemodelid;
            }
            set
            {
                if (_Statemodelid != value)
                {
                    _Statemodelid = value;
                }
            }
        }
        private string _Statemodelid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// State model name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statemodelname
        {
            get
            {
                return _Statemodelname;
            }
            set
            {
                if (_Statemodelname != value)
                {
                    _Statemodelname = value;
                }
            }
        }
        private string _Statemodelname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// State 변경에 대한 정의 (A state -> B state)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Statemodelstate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statemodelstate : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// State model id. (ref. FOM_STATEMODEL)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Statemodelid
        {
            get
            {
                return _Statemodelid;
            }
            set
            {
                if (_Statemodelid != value)
                {
                    _Statemodelid = value;
                }
            }
        }
        private string _Statemodelid;

        /// <summary>
        /// State id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Stateid
        {
            get
            {
                return _Stateid;
            }
            set
            {
                if (_Stateid != value)
                {
                    _Stateid = value;
                }
            }
        }
        private string _Stateid;

        /// <summary>
        /// To state id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Tostateid
        {
            get
            {
                return _Tostateid;
            }
            set
            {
                if (_Tostateid != value)
                {
                    _Tostateid = value;
                }
            }
        }
        private string _Tostateid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// State priority
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=4, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// State 변경에 대한 정의 (A state -> B state) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Statemodelstatehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statemodelstatehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// State model id. (ref. FOM_STATEMODEL)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Statemodelid
        {
            get
            {
                return _Statemodelid;
            }
            set
            {
                if (_Statemodelid != value)
                {
                    _Statemodelid = value;
                }
            }
        }
        private string _Statemodelid;

        /// <summary>
        /// State id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Stateid
        {
            get
            {
                return _Stateid;
            }
            set
            {
                if (_Stateid != value)
                {
                    _Stateid = value;
                }
            }
        }
        private string _Stateid;

        /// <summary>
        /// To state id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tostateid
        {
            get
            {
                return _Tostateid;
            }
            set
            {
                if (_Tostateid != value)
                {
                    _Tostateid = value;
                }
            }
        }
        private string _Tostateid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// State priority
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=4, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비의 Tag 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Tagdefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tagdefinition : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Equipment definition id. (ref. FOM_EQUIPMENTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Unique identifier for tag definition id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Tagdefinitionid
        {
            get
            {
                return _Tagdefinitionid;
            }
            set
            {
                if (_Tagdefinitionid != value)
                {
                    _Tagdefinitionid = value;
                }
            }
        }
        private string _Tagdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Tag definition name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=200, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tagdefinitionname
        {
            get
            {
                return _Tagdefinitionname;
            }
            set
            {
                if (_Tagdefinitionname != value)
                {
                    _Tagdefinitionname = value;
                }
            }
        }
        private string _Tagdefinitionname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Alias ??definition for other systems to know
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tagaliasname
        {
            get
            {
                return _Tagaliasname;
            }
            set
            {
                if (_Tagaliasname != value)
                {
                    _Tagaliasname = value;
                }
            }
        }
        private string _Tagaliasname;

        /// <summary>
        ///  Y,N  (if data value is 'N' not report to any system)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="char", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isreport
        {
            get
            {
                return _Isreport;
            }
            set
            {
                if (_Isreport != value)
                {
                    _Isreport = value;
                }
            }
        }
        private string _Isreport;

        /// <summary>
        /// Data type for collect target. ex) 'P' (process), 'M' (measure)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Itemtype
        {
            get
            {
                return _Itemtype;
            }
            set
            {
                if (_Itemtype != value)
                {
                    _Itemtype = value;
                }
            }
        }
        private string _Itemtype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설비의 Tag 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Tagdefinitionhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tagdefinitionhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for Equipment id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Unique identifier for tag definition id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tagdefinitionid
        {
            get
            {
                return _Tagdefinitionid;
            }
            set
            {
                if (_Tagdefinitionid != value)
                {
                    _Tagdefinitionid = value;
                }
            }
        }
        private string _Tagdefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Tag definition name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=200, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tagdefinitionname
        {
            get
            {
                return _Tagdefinitionname;
            }
            set
            {
                if (_Tagdefinitionname != value)
                {
                    _Tagdefinitionname = value;
                }
            }
        }
        private string _Tagdefinitionname;

        /// <summary>
        /// Tag address
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Alias ??definition for other systems to know
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tagaliasname
        {
            get
            {
                return _Tagaliasname;
            }
            set
            {
                if (_Tagaliasname != value)
                {
                    _Tagaliasname = value;
                }
            }
        }
        private string _Tagaliasname;

        /// <summary>
        ///  Y,N  (if data value is 'N' not report to any system)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="char", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isreport
        {
            get
            {
                return _Isreport;
            }
            set
            {
                if (_Isreport != value)
                {
                    _Isreport = value;
                }
            }
        }
        private string _Isreport;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Itemtype
        {
            get
            {
                return _Itemtype;
            }
            set
            {
                if (_Itemtype != value)
                {
                    _Itemtype = value;
                }
            }
        }
        private string _Itemtype;

        /// <summary>
        /// Data type for collect target. ex) 'P' (process), 'M' (measure)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 물류 이동 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Transferrequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transferrequest : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 물류 이동요청 고유번호(고유 Key 채번 : 이동 업무유형 코드 + 년월일 + 순번(5자리?)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Requestid
        {
            get
            {
                return _Requestid;
            }
            set
            {
                if (_Requestid != value)
                {
                    _Requestid = value;
                }
            }
        }
        private string _Requestid;

        /// <summary>
        /// 공장 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 이동지시/불출 업무유형 - 공정 : 투입, 반납, 완성품, 재고이동(라인간 이동, 선별이동, 부적합...)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requesttype
        {
            get
            {
                return _Requesttype;
            }
            set
            {
                if (_Requesttype != value)
                {
                    _Requesttype = value;
                }
            }
        }
        private string _Requesttype;

        /// <summary>
        /// W/O No (WOM 기반지시일 경우)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// 생산품번 (W/O)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// 이동지시 근거가 되는 요청번호
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasonrequestno
        {
            get
            {
                return _Reasonrequestno;
            }
            set
            {
                if (_Reasonrequestno != value)
                {
                    _Reasonrequestno = value;
                }
            }
        }
        private string _Reasonrequestno;

        /// <summary>
        /// 이동지시 근거가 되는 Group 요청번호
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasonrequestgroupno
        {
            get
            {
                return _Reasonrequestgroupno;
            }
            set
            {
                if (_Reasonrequestgroupno != value)
                {
                    _Reasonrequestgroupno = value;
                }
            }
        }
        private string _Reasonrequestgroupno;

        /// <summary>
        /// 라인 ID  (투입, 반납, 완성품일때 대상 라인)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 이동/불출 자재 타입 (PRODUCT / MATERIAL)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// 이동/불출 자재 코드 (Lot - ProductDefinitionId, MaterialLot - MaterialDefinitionId)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferdefinitionid
        {
            get
            {
                return _Transferdefinitionid;
            }
            set
            {
                if (_Transferdefinitionid != value)
                {
                    _Transferdefinitionid = value;
                }
            }
        }
        private string _Transferdefinitionid;

        /// <summary>
        /// 이동 자재 Lot Id (Lot / MaterialLot...)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferlotid
        {
            get
            {
                return _Transferlotid;
            }
            set
            {
                if (_Transferlotid != value)
                {
                    _Transferlotid = value;
                }
            }
        }
        private string _Transferlotid;

        /// <summary>
        /// 수량 단위
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// 이동요청 Pallet Lot Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// 방개차별 물류이동 담당구역(ex : A, B)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferzone
        {
            get
            {
                return _Transferzone;
            }
            set
            {
                if (_Transferzone != value)
                {
                    _Transferzone = value;
                }
            }
        }
        private string _Transferzone;

        /// <summary>
        /// Source Factory
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Sourcefactoryid
        {
            get
            {
                return _Sourcefactoryid;
            }
            set
            {
                if (_Sourcefactoryid != value)
                {
                    _Sourcefactoryid = value;
                }
            }
        }
        private string _Sourcefactoryid;

        /// <summary>
        /// Source Location
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Sourcelocationid
        {
            get
            {
                return _Sourcelocationid;
            }
            set
            {
                if (_Sourcelocationid != value)
                {
                    _Sourcelocationid = value;
                }
            }
        }
        private string _Sourcelocationid;

        /// <summary>
        /// Source Equipment Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Sourceequipmentid
        {
            get
            {
                return _Sourceequipmentid;
            }
            set
            {
                if (_Sourceequipmentid != value)
                {
                    _Sourceequipmentid = value;
                }
            }
        }
        private string _Sourceequipmentid;

        /// <summary>
        /// Destination Factory
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destfactoryid
        {
            get
            {
                return _Destfactoryid;
            }
            set
            {
                if (_Destfactoryid != value)
                {
                    _Destfactoryid = value;
                }
            }
        }
        private string _Destfactoryid;

        /// <summary>
        /// Destination Location
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destlocationid
        {
            get
            {
                return _Destlocationid;
            }
            set
            {
                if (_Destlocationid != value)
                {
                    _Destlocationid = value;
                }
            }
        }
        private string _Destlocationid;

        /// <summary>
        /// Destination Equipment Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destequipmentid
        {
            get
            {
                return _Destequipmentid;
            }
            set
            {
                if (_Destequipmentid != value)
                {
                    _Destequipmentid = value;
                }
            }
        }
        private string _Destequipmentid;

        /// <summary>
        /// 반송 설비(방개차, 지게차), 반송 인력(Manual)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transporterid
        {
            get
            {
                return _Transporterid;
            }
            set
            {
                if (_Transporterid != value)
                {
                    _Transporterid = value;
                }
            }
        }
        private string _Transporterid;

        /// <summary>
        /// 반송 설비 운전자
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transportdriver
        {
            get
            {
                return _Transportdriver;
            }
            set
            {
                if (_Transportdriver != value)
                {
                    _Transportdriver = value;
                }
            }
        }
        private string _Transportdriver;

        /// <summary>
        /// 이동요청 수량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Requestquantity
        {
            get
            {
                return _Requestquantity;
            }
            set
            {
                if (_Requestquantity != value)
                {
                    _Requestquantity = value;
                }
            }
        }
        private Nullable<decimal> _Requestquantity;

        /// <summary>
        /// 요청일시 (이동요청일시)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Requestregtime
        {
            get
            {
                return _Requestregtime;
            }
            set
            {
                if (_Requestregtime != value)
                {
                    _Requestregtime = value;
                }
            }
        }
        private Nullable<DateTime> _Requestregtime;

        /// <summary>
        /// 요청일시 (자재이동시점)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Requesttime
        {
            get
            {
                return _Requesttime;
            }
            set
            {
                if (_Requesttime != value)
                {
                    _Requesttime = value;
                }
            }
        }
        private Nullable<DateTime> _Requesttime;

        /// <summary>
        /// Workorder 기준 지시순서
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// 요청자
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestuserid
        {
            get
            {
                return _Requestuserid;
            }
            set
            {
                if (_Requestuserid != value)
                {
                    _Requestuserid = value;
                }
            }
        }
        private string _Requestuserid;

        /// <summary>
        /// 확정상태 코드 (Booked, Confirmed, Active, Canceled, Completed)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requeststate
        {
            get
            {
                return _Requeststate;
            }
            set
            {
                if (_Requeststate != value)
                {
                    _Requeststate = value;
                }
            }
        }
        private string _Requeststate;

        /// <summary>
        /// 긴급변경 여부 (Y | null)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Changestate
        {
            get
            {
                return _Changestate;
            }
            set
            {
                if (_Changestate != value)
                {
                    _Changestate = value;
                }
            }
        }
        private string _Changestate;

        /// <summary>
        /// 최근 이동완료시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Transfertime
        {
            get
            {
                return _Transfertime;
            }
            set
            {
                if (_Transfertime != value)
                {
                    _Transfertime = value;
                }
            }
        }
        private Nullable<DateTime> _Transfertime;

        /// <summary>
        /// 최근 이동완료수량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Transferquantity
        {
            get
            {
                return _Transferquantity;
            }
            set
            {
                if (_Transferquantity != value)
                {
                    _Transferquantity = value;
                }
            }
        }
        private Nullable<decimal> _Transferquantity;

        /// <summary>
        /// 물류이동(MCS)상태 (MCS State 그대로 수신받음)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferstate
        {
            get
            {
                return _Transferstate;
            }
            set
            {
                if (_Transferstate != value)
                {
                    _Transferstate = value;
                }
            }
        }
        private string _Transferstate;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 물류 이동 정보 History
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Transferrequesthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transferrequesthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 물류 이동요청 고유번호(고유 Key 채번 : 이동 업무유형 코드 + 년월일 + 순번(5자리?)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestid
        {
            get
            {
                return _Requestid;
            }
            set
            {
                if (_Requestid != value)
                {
                    _Requestid = value;
                }
            }
        }
        private string _Requestid;

        /// <summary>
        /// 공장 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 이동지시/불출 업무유형 - 공정 : 투입, 반납, 완성품, 재고이동(라인간 이동, 선별이동, 부적합...)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requesttype
        {
            get
            {
                return _Requesttype;
            }
            set
            {
                if (_Requesttype != value)
                {
                    _Requesttype = value;
                }
            }
        }
        private string _Requesttype;

        /// <summary>
        /// W/O No (WOM 기반지시일 경우)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// 생산품번 (W/O)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// 이동지시 근거가 되는 요청번호
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasonrequestno
        {
            get
            {
                return _Reasonrequestno;
            }
            set
            {
                if (_Reasonrequestno != value)
                {
                    _Reasonrequestno = value;
                }
            }
        }
        private string _Reasonrequestno;

        /// <summary>
        /// 이동지시 근거가 되는 Group 요청번호
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasonrequestgroupno
        {
            get
            {
                return _Reasonrequestgroupno;
            }
            set
            {
                if (_Reasonrequestgroupno != value)
                {
                    _Reasonrequestgroupno = value;
                }
            }
        }
        private string _Reasonrequestgroupno;

        /// <summary>
        /// 라인 ID  (투입, 반납, 완성품일때 대상 라인)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// 이동/불출 자재 타입 (PRODUCT / MATERIAL)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Materialtype
        {
            get
            {
                return _Materialtype;
            }
            set
            {
                if (_Materialtype != value)
                {
                    _Materialtype = value;
                }
            }
        }
        private string _Materialtype;

        /// <summary>
        /// 이동/불출 자재 코드 (Lot - ProductDefinitionId, MaterialLot - MaterialDefinitionId)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferdefinitionid
        {
            get
            {
                return _Transferdefinitionid;
            }
            set
            {
                if (_Transferdefinitionid != value)
                {
                    _Transferdefinitionid = value;
                }
            }
        }
        private string _Transferdefinitionid;

        /// <summary>
        /// 이동 자재 Lot Id (Lot / MaterialLot...)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferlotid
        {
            get
            {
                return _Transferlotid;
            }
            set
            {
                if (_Transferlotid != value)
                {
                    _Transferlotid = value;
                }
            }
        }
        private string _Transferlotid;

        /// <summary>
        /// 수량 단위
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// 이동요청 Pallet Lot Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Carrierid
        {
            get
            {
                return _Carrierid;
            }
            set
            {
                if (_Carrierid != value)
                {
                    _Carrierid = value;
                }
            }
        }
        private string _Carrierid;

        /// <summary>
        /// 방개차별 물류이동 담당구역(ex : A, B)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferzone
        {
            get
            {
                return _Transferzone;
            }
            set
            {
                if (_Transferzone != value)
                {
                    _Transferzone = value;
                }
            }
        }
        private string _Transferzone;

        /// <summary>
        /// Source Factory
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Sourcefactoryid
        {
            get
            {
                return _Sourcefactoryid;
            }
            set
            {
                if (_Sourcefactoryid != value)
                {
                    _Sourcefactoryid = value;
                }
            }
        }
        private string _Sourcefactoryid;

        /// <summary>
        /// Source Location
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Sourcelocationid
        {
            get
            {
                return _Sourcelocationid;
            }
            set
            {
                if (_Sourcelocationid != value)
                {
                    _Sourcelocationid = value;
                }
            }
        }
        private string _Sourcelocationid;

        /// <summary>
        /// Source Equipment Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Sourceequipmentid
        {
            get
            {
                return _Sourceequipmentid;
            }
            set
            {
                if (_Sourceequipmentid != value)
                {
                    _Sourceequipmentid = value;
                }
            }
        }
        private string _Sourceequipmentid;

        /// <summary>
        /// Destination Factory
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destfactoryid
        {
            get
            {
                return _Destfactoryid;
            }
            set
            {
                if (_Destfactoryid != value)
                {
                    _Destfactoryid = value;
                }
            }
        }
        private string _Destfactoryid;

        /// <summary>
        /// Destination Location
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destlocationid
        {
            get
            {
                return _Destlocationid;
            }
            set
            {
                if (_Destlocationid != value)
                {
                    _Destlocationid = value;
                }
            }
        }
        private string _Destlocationid;

        /// <summary>
        /// Destination Equipment Id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Destequipmentid
        {
            get
            {
                return _Destequipmentid;
            }
            set
            {
                if (_Destequipmentid != value)
                {
                    _Destequipmentid = value;
                }
            }
        }
        private string _Destequipmentid;

        /// <summary>
        /// 반송 설비(방개차, 지게차), 반송 인력(Manual)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transporterid
        {
            get
            {
                return _Transporterid;
            }
            set
            {
                if (_Transporterid != value)
                {
                    _Transporterid = value;
                }
            }
        }
        private string _Transporterid;

        /// <summary>
        /// 반송 설비 운전자
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transportdriver
        {
            get
            {
                return _Transportdriver;
            }
            set
            {
                if (_Transportdriver != value)
                {
                    _Transportdriver = value;
                }
            }
        }
        private string _Transportdriver;

        /// <summary>
        /// 이동요청 수량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Requestquantity
        {
            get
            {
                return _Requestquantity;
            }
            set
            {
                if (_Requestquantity != value)
                {
                    _Requestquantity = value;
                }
            }
        }
        private Nullable<decimal> _Requestquantity;

        /// <summary>
        /// 요청일시 (이동요청일시)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Requestregtime
        {
            get
            {
                return _Requestregtime;
            }
            set
            {
                if (_Requestregtime != value)
                {
                    _Requestregtime = value;
                }
            }
        }
        private Nullable<DateTime> _Requestregtime;

        /// <summary>
        /// 요청일시 (자재이동시점)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Requesttime
        {
            get
            {
                return _Requesttime;
            }
            set
            {
                if (_Requesttime != value)
                {
                    _Requesttime = value;
                }
            }
        }
        private Nullable<DateTime> _Requesttime;

        /// <summary>
        /// Workorder 기준 지시순서
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// 요청자
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestuserid
        {
            get
            {
                return _Requestuserid;
            }
            set
            {
                if (_Requestuserid != value)
                {
                    _Requestuserid = value;
                }
            }
        }
        private string _Requestuserid;

        /// <summary>
        /// 확정상태 코드 (Booked, Confirmed, Active, Canceled, Completed)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requeststate
        {
            get
            {
                return _Requeststate;
            }
            set
            {
                if (_Requeststate != value)
                {
                    _Requeststate = value;
                }
            }
        }
        private string _Requeststate;

        /// <summary>
        /// 긴급변경 여부 (Y | null)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Changestate
        {
            get
            {
                return _Changestate;
            }
            set
            {
                if (_Changestate != value)
                {
                    _Changestate = value;
                }
            }
        }
        private string _Changestate;

        /// <summary>
        /// 최근 이동완료시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Transfertime
        {
            get
            {
                return _Transfertime;
            }
            set
            {
                if (_Transfertime != value)
                {
                    _Transfertime = value;
                }
            }
        }
        private Nullable<DateTime> _Transfertime;

        /// <summary>
        /// 최근 이동완료수량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Transferquantity
        {
            get
            {
                return _Transferquantity;
            }
            set
            {
                if (_Transferquantity != value)
                {
                    _Transferquantity = value;
                }
            }
        }
        private Nullable<decimal> _Transferquantity;

        /// <summary>
        /// 물류이동(MCS)상태 (MCS State 그대로 수신받음)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Transferstate
        {
            get
            {
                return _Transferstate;
            }
            set
            {
                if (_Transferstate != value)
                {
                    _Transferstate = value;
                }
            }
        }
        private string _Transferstate;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 물류 이동 정보 소요량 계획 산출
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Transferrequestplan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transferrequestplan : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// 물류 이동요청 고유번호(고유 Key 채번 : 이동 업무유형 코드 + 년월일 + 순번(5자리?)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Requestid
        {
            get
            {
                return _Requestid;
            }
            set
            {
                if (_Requestid != value)
                {
                    _Requestid = value;
                }
            }
        }
        private string _Requestid;

        /// <summary>
        /// 공장 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// W/O No
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// 소요량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Planquantity
        {
            get
            {
                return _Planquantity;
            }
            set
            {
                if (_Planquantity != value)
                {
                    _Planquantity = value;
                }
            }
        }
        private Nullable<decimal> _Planquantity;

        /// <summary>
        /// 삭제할 대상필드임.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 물류 이동 정보 소요량 계획 산출 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Transferrequestplanhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transferrequestplanhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// 물류 이동요청 고유번호(고유 Key 채번 : 이동 업무유형 코드 + 년월일 + 순번(5자리?)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestid
        {
            get
            {
                return _Requestid;
            }
            set
            {
                if (_Requestid != value)
                {
                    _Requestid = value;
                }
            }
        }
        private string _Requestid;

        /// <summary>
        /// 공장 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// W/O No
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// 소요량
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Planquantity
        {
            get
            {
                return _Planquantity;
            }
            set
            {
                if (_Planquantity != value)
                {
                    _Planquantity = value;
                }
            }
        }
        private Nullable<decimal> _Planquantity;

        /// <summary>
        /// 삭제할 대상필드임.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 측정 단위에 대한 정의 (Ex. Day, Hour, Km, M, mm 등)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Uom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Uom : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for unit id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Unit name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomname
        {
            get
            {
                return _Uomname;
            }
            set
            {
                if (_Uomname != value)
                {
                    _Uomname = value;
                }
            }
        }
        private string _Uomname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of unit.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomtype
        {
            get
            {
                return _Uomtype;
            }
            set
            {
                if (_Uomtype != value)
                {
                    _Uomtype = value;
                }
            }
        }
        private string _Uomtype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 측정 단위에 대한 정의 (Ex. Day, Hour, Km, M, mm 등) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Uomhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Uomhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for unit id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Unit name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomname
        {
            get
            {
                return _Uomname;
            }
            set
            {
                if (_Uomname != value)
                {
                    _Uomname = value;
                }
            }
        }
        private string _Uomname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Type of unit.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomtype
        {
            get
            {
                return _Uomtype;
            }
            set
            {
                if (_Uomtype != value)
                {
                    _Uomtype = value;
                }
            }
        }
        private string _Uomtype;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 측정 단위의 conversion 방법 (1 Kg = 1000 g 등)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Uommap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Uommap : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// From unit id. (ref. FOM_UNIT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Fromuomid
        {
            get
            {
                return _Fromuomid;
            }
            set
            {
                if (_Fromuomid != value)
                {
                    _Fromuomid = value;
                }
            }
        }
        private string _Fromuomid;

        /// <summary>
        /// To unit id. (ref. FOM_UNIT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Touomid
        {
            get
            {
                return _Touomid;
            }
            set
            {
                if (_Touomid != value)
                {
                    _Touomid = value;
                }
            }
        }
        private string _Touomid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Rate. ex) To unit id = Rate x From unit id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                if (_Rate != value)
                {
                    _Rate = value;
                }
            }
        }
        private Nullable<decimal> _Rate;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 측정 단위의 conversion 방법 (1 Kg = 1000 g 등) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Uommaphist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Uommaphist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// From unit id. (ref. FOM_UNIT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fromuomid
        {
            get
            {
                return _Fromuomid;
            }
            set
            {
                if (_Fromuomid != value)
                {
                    _Fromuomid = value;
                }
            }
        }
        private string _Fromuomid;

        /// <summary>
        /// To unit id. (ref. FOM_UNIT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Touomid
        {
            get
            {
                return _Touomid;
            }
            set
            {
                if (_Touomid != value)
                {
                    _Touomid = value;
                }
            }
        }
        private string _Touomid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Rate. ex) To unit id = Rate x From unit id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                if (_Rate != value)
                {
                    _Rate = value;
                }
            }
        }
        private Nullable<decimal> _Rate;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Workcalendar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workcalendar : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// A factory name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// A factory date [YYYYMMDD]
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// A factory month [YYYYMM]
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorymonth
        {
            get
            {
                return _Factorymonth;
            }
            set
            {
                if (_Factorymonth != value)
                {
                    _Factorymonth = value;
                }
            }
        }
        private string _Factorymonth;

        /// <summary>
        /// A factory week
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryweek
        {
            get
            {
                return _Factoryweek;
            }
            set
            {
                if (_Factoryweek != value)
                {
                    _Factoryweek = value;
                }
            }
        }
        private string _Factoryweek;

        /// <summary>
        /// A factory year
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryyear
        {
            get
            {
                return _Factoryyear;
            }
            set
            {
                if (_Factoryyear != value)
                {
                    _Factoryyear = value;
                }
            }
        }
        private string _Factoryyear;

        /// <summary>
        /// A factory day of week
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorydayofweek
        {
            get
            {
                return _Factorydayofweek;
            }
            set
            {
                if (_Factorydayofweek != value)
                {
                    _Factorydayofweek = value;
                }
            }
        }
        private string _Factorydayofweek;

        /// <summary>
        /// A factory week of month
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryweekofmonth
        {
            get
            {
                return _Factoryweekofmonth;
            }
            set
            {
                if (_Factoryweekofmonth != value)
                {
                    _Factoryweekofmonth = value;
                }
            }
        }
        private string _Factoryweekofmonth;

        /// <summary>
        /// A factory quarter of year
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryquaterofyear
        {
            get
            {
                return _Factoryquaterofyear;
            }
            set
            {
                if (_Factoryquaterofyear != value)
                {
                    _Factoryquaterofyear = value;
                }
            }
        }
        private string _Factoryquaterofyear;

        /// <summary>
        /// A work day flag
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workdayflag
        {
            get
            {
                return _Workdayflag;
            }
            set
            {
                if (_Workdayflag != value)
                {
                    _Workdayflag = value;
                }
            }
        }
        private string _Workdayflag;

        /// <summary>
        /// A started time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// An end time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private Nullable<DateTime> _Endtime;

        /// <summary>
        /// 주 근무시간
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=2, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Weekduration
        {
            get
            {
                return _Weekduration;
            }
            set
            {
                if (_Weekduration != value)
                {
                    _Weekduration = value;
                }
            }
        }
        private Nullable<int> _Weekduration;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Workcalendarhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workcalendarhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private string _Eventseq;

        /// <summary>
        /// A factory name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// A factory date [YYYYMMDD]
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorydate
        {
            get
            {
                return _Factorydate;
            }
            set
            {
                if (_Factorydate != value)
                {
                    _Factorydate = value;
                }
            }
        }
        private string _Factorydate;

        /// <summary>
        /// A factory month [YYYYMM]
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorymonth
        {
            get
            {
                return _Factorymonth;
            }
            set
            {
                if (_Factorymonth != value)
                {
                    _Factorymonth = value;
                }
            }
        }
        private string _Factorymonth;

        /// <summary>
        /// A factory week
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryweek
        {
            get
            {
                return _Factoryweek;
            }
            set
            {
                if (_Factoryweek != value)
                {
                    _Factoryweek = value;
                }
            }
        }
        private string _Factoryweek;

        /// <summary>
        /// A factory year
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryyear
        {
            get
            {
                return _Factoryyear;
            }
            set
            {
                if (_Factoryyear != value)
                {
                    _Factoryyear = value;
                }
            }
        }
        private string _Factoryyear;

        /// <summary>
        /// A factory day of week
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factorydayofweek
        {
            get
            {
                return _Factorydayofweek;
            }
            set
            {
                if (_Factorydayofweek != value)
                {
                    _Factorydayofweek = value;
                }
            }
        }
        private string _Factorydayofweek;

        /// <summary>
        /// A factory week of month
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryweekofmonth
        {
            get
            {
                return _Factoryweekofmonth;
            }
            set
            {
                if (_Factoryweekofmonth != value)
                {
                    _Factoryweekofmonth = value;
                }
            }
        }
        private string _Factoryweekofmonth;

        /// <summary>
        /// A factory quarter of year
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryquaterofyear
        {
            get
            {
                return _Factoryquaterofyear;
            }
            set
            {
                if (_Factoryquaterofyear != value)
                {
                    _Factoryquaterofyear = value;
                }
            }
        }
        private string _Factoryquaterofyear;

        /// <summary>
        /// A work day flag
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workdayflag
        {
            get
            {
                return _Workdayflag;
            }
            set
            {
                if (_Workdayflag != value)
                {
                    _Workdayflag = value;
                }
            }
        }
        private string _Workdayflag;

        /// <summary>
        /// A started time
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// ENDTIME
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Endtime
        {
            get
            {
                return _Endtime;
            }
            set
            {
                if (_Endtime != value)
                {
                    _Endtime = value;
                }
            }
        }
        private Nullable<DateTime> _Endtime;

        /// <summary>
        /// 주 근무시간(누적)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=2, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Weekduration
        {
            get
            {
                return _Weekduration;
            }
            set
            {
                if (_Weekduration != value)
                {
                    _Weekduration = value;
                }
            }
        }
        private Nullable<int> _Weekduration;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업반
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Workcrew")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workcrew : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for workgroup id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Workcrewid
        {
            get
            {
                return _Workcrewid;
            }
            set
            {
                if (_Workcrewid != value)
                {
                    _Workcrewid = value;
                }
            }
        }
        private string _Workcrewid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Work group name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewname
        {
            get
            {
                return _Workcrewname;
            }
            set
            {
                if (_Workcrewname != value)
                {
                    _Workcrewname = value;
                }
            }
        }
        private string _Workcrewname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// type of work crew
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewtype
        {
            get
            {
                return _Workcrewtype;
            }
            set
            {
                if (_Workcrewtype != value)
                {
                    _Workcrewtype = value;
                }
            }
        }
        private string _Workcrewtype;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업반 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Workcrewhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workcrewhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for workgroup id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Workcrewid
        {
            get
            {
                return _Workcrewid;
            }
            set
            {
                if (_Workcrewid != value)
                {
                    _Workcrewid = value;
                }
            }
        }
        private string _Workcrewid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Work group name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewname
        {
            get
            {
                return _Workcrewname;
            }
            set
            {
                if (_Workcrewname != value)
                {
                    _Workcrewname = value;
                }
            }
        }
        private string _Workcrewname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// type of work crew
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workcrewtype
        {
            get
            {
                return _Workcrewtype;
            }
            set
            {
                if (_Workcrewtype != value)
                {
                    _Workcrewtype = value;
                }
            }
        }
        private string _Workcrewtype;

        /// <summary>
        /// UI Sequence
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업 order
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Workorder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workorder : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for work order id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Work order name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workordername
        {
            get
            {
                return _Workordername;
            }
            set
            {
                if (_Workordername != value)
                {
                    _Workordername = value;
                }
            }
        }
        private string _Workordername;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Production order id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productionorderid
        {
            get
            {
                return _Productionorderid;
            }
            set
            {
                if (_Productionorderid != value)
                {
                    _Productionorderid = value;
                }
            }
        }
        private string _Productionorderid;

        /// <summary>
        /// Type of work order.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workordertype
        {
            get
            {
                return _Workordertype;
            }
            set
            {
                if (_Workordertype != value)
                {
                    _Workordertype = value;
                }
            }
        }
        private string _Workordertype;

        /// <summary>
        /// The time that the production is scheduled to start.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Schedulestarttime
        {
            get
            {
                return _Schedulestarttime;
            }
            set
            {
                if (_Schedulestarttime != value)
                {
                    _Schedulestarttime = value;
                }
            }
        }
        private DateTime _Schedulestarttime;

        /// <summary>
        /// The time that the production is scheduled to finish.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Schedulefinishtime
        {
            get
            {
                return _Schedulefinishtime;
            }
            set
            {
                if (_Schedulefinishtime != value)
                {
                    _Schedulefinishtime = value;
                }
            }
        }
        private DateTime _Schedulefinishtime;

        /// <summary>
        /// Facility id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Current state of work order. ex) Created, Active, Terminated, Hold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state of work order.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Hold state of work order.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// Request Time - Createtime
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Requesttime
        {
            get
            {
                return _Requesttime;
            }
            set
            {
                if (_Requesttime != value)
                {
                    _Requesttime = value;
                }
            }
        }
        private Nullable<DateTime> _Requesttime;

        /// <summary>
        /// Request userid
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestuser
        {
            get
            {
                return _Requestuser;
            }
            set
            {
                if (_Requestuser != value)
                {
                    _Requestuser = value;
                }
            }
        }
        private string _Requestuser;

        /// <summary>
        /// The time that the production is started actually.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// The userid that the production is started actually.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Startuser
        {
            get
            {
                return _Startuser;
            }
            set
            {
                if (_Startuser != value)
                {
                    _Startuser = value;
                }
            }
        }
        private string _Startuser;

        /// <summary>
        /// The time that the production is completed actually.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Completetime
        {
            get
            {
                return _Completetime;
            }
            set
            {
                if (_Completetime != value)
                {
                    _Completetime = value;
                }
            }
        }
        private Nullable<DateTime> _Completetime;

        /// <summary>
        /// The userid that the production is completed actually.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Completeuser
        {
            get
            {
                return _Completeuser;
            }
            set
            {
                if (_Completeuser != value)
                {
                    _Completeuser = value;
                }
            }
        }
        private string _Completeuser;

        /// <summary>
        /// The time that the production is closed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Closetime
        {
            get
            {
                return _Closetime;
            }
            set
            {
                if (_Closetime != value)
                {
                    _Closetime = value;
                }
            }
        }
        private Nullable<DateTime> _Closetime;

        /// <summary>
        /// The userid that the production is closed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Closeuser
        {
            get
            {
                return _Closeuser;
            }
            set
            {
                if (_Closeuser != value)
                {
                    _Closeuser = value;
                }
            }
        }
        private string _Closeuser;

        /// <summary>
        /// Quantity of plan.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Planquantity
        {
            get
            {
                return _Planquantity;
            }
            set
            {
                if (_Planquantity != value)
                {
                    _Planquantity = value;
                }
            }
        }
        private Nullable<decimal> _Planquantity;

        /// <summary>
        /// Quantity of started.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Startedquantity
        {
            get
            {
                return _Startedquantity;
            }
            set
            {
                if (_Startedquantity != value)
                {
                    _Startedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Startedquantity;

        /// <summary>
        /// Quantity of scrapped.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Scrappedquantity
        {
            get
            {
                return _Scrappedquantity;
            }
            set
            {
                if (_Scrappedquantity != value)
                {
                    _Scrappedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Scrappedquantity;

        /// <summary>
        /// Quantity of unscrapped.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Unscrappedquantity
        {
            get
            {
                return _Unscrappedquantity;
            }
            set
            {
                if (_Unscrappedquantity != value)
                {
                    _Unscrappedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Unscrappedquantity;

        /// <summary>
        /// Priority.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=4, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fpconfirmdate
        {
            get
            {
                return _Fpconfirmdate;
            }
            set
            {
                if (_Fpconfirmdate != value)
                {
                    _Fpconfirmdate = value;
                }
            }
        }
        private string _Fpconfirmdate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Womcreate
        {
            get
            {
                return _Womcreate;
            }
            set
            {
                if (_Womcreate != value)
                {
                    _Womcreate = value;
                }
            }
        }
        private string _Womcreate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Womconfirm
        {
            get
            {
                return _Womconfirm;
            }
            set
            {
                if (_Womconfirm != value)
                {
                    _Womconfirm = value;
                }
            }
        }
        private string _Womconfirm;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fporderid
        {
            get
            {
                return _Fporderid;
            }
            set
            {
                if (_Fporderid != value)
                {
                    _Fporderid = value;
                }
            }
        }
        private string _Fporderid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=8000, DataSize=4000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Customerid
        {
            get
            {
                return _Customerid;
            }
            set
            {
                if (_Customerid != value)
                {
                    _Customerid = value;
                }
            }
        }
        private string _Customerid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Ecsinputquantity
        {
            get
            {
                return _Ecsinputquantity;
            }
            set
            {
                if (_Ecsinputquantity != value)
                {
                    _Ecsinputquantity = value;
                }
            }
        }
        private Nullable<decimal> _Ecsinputquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="(0)")]
        [DataMemberAttribute()]
        public Nullable<decimal> Completequantity
        {
            get
            {
                return _Completequantity;
            }
            set
            {
                if (_Completequantity != value)
                {
                    _Completequantity = value;
                }
            }
        }
        private Nullable<decimal> _Completequantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="int", MaxLength=4, DataSize=4, Scale=0, Precision=10, KeySeq=0, Default="(0)")]
        [DataMemberAttribute()]
        public Nullable<decimal> Fpplanseq
        {
            get
            {
                return _Fpplanseq;
            }
            set
            {
                if (_Fpplanseq != value)
                {
                    _Fpplanseq = value;
                }
            }
        }
        private Nullable<decimal> _Fpplanseq;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 작업 order 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Workorderhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workorderhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for work order id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workorderid
        {
            get
            {
                return _Workorderid;
            }
            set
            {
                if (_Workorderid != value)
                {
                    _Workorderid = value;
                }
            }
        }
        private string _Workorderid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Work order name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workordername
        {
            get
            {
                return _Workordername;
            }
            set
            {
                if (_Workordername != value)
                {
                    _Workordername = value;
                }
            }
        }
        private string _Workordername;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Product definition id. (ref. FOM_PRODUCTDEFINITION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productdefinitionid
        {
            get
            {
                return _Productdefinitionid;
            }
            set
            {
                if (_Productdefinitionid != value)
                {
                    _Productdefinitionid = value;
                }
            }
        }
        private string _Productdefinitionid;

        /// <summary>
        /// Production order id. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Productionorderid
        {
            get
            {
                return _Productionorderid;
            }
            set
            {
                if (_Productionorderid != value)
                {
                    _Productionorderid = value;
                }
            }
        }
        private string _Productionorderid;

        /// <summary>
        /// Type of work order.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Workordertype
        {
            get
            {
                return _Workordertype;
            }
            set
            {
                if (_Workordertype != value)
                {
                    _Workordertype = value;
                }
            }
        }
        private string _Workordertype;

        /// <summary>
        /// The time that the production is scheduled to start.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Schedulestarttime
        {
            get
            {
                return _Schedulestarttime;
            }
            set
            {
                if (_Schedulestarttime != value)
                {
                    _Schedulestarttime = value;
                }
            }
        }
        private Nullable<DateTime> _Schedulestarttime;

        /// <summary>
        /// The time that the production is scheduled to finish.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Schedulefinishtime
        {
            get
            {
                return _Schedulefinishtime;
            }
            set
            {
                if (_Schedulefinishtime != value)
                {
                    _Schedulefinishtime = value;
                }
            }
        }
        private Nullable<DateTime> _Schedulefinishtime;

        /// <summary>
        /// Facility id. (ref. FOM_LOCATION)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Current state of work order. ex) Created, Active, Terminated, Hold
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string State
        {
            get
            {
                return _State;
            }
            set
            {
                if (_State != value)
                {
                    _State = value;
                }
            }
        }
        private string _State;

        /// <summary>
        /// Previous state of work order.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevstate
        {
            get
            {
                return _Prevstate;
            }
            set
            {
                if (_Prevstate != value)
                {
                    _Prevstate = value;
                }
            }
        }
        private string _Prevstate;

        /// <summary>
        /// Hold state of work order.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Holdstate
        {
            get
            {
                return _Holdstate;
            }
            set
            {
                if (_Holdstate != value)
                {
                    _Holdstate = value;
                }
            }
        }
        private string _Holdstate;

        /// <summary>
        /// Request Time - Createtime
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Requesttime
        {
            get
            {
                return _Requesttime;
            }
            set
            {
                if (_Requesttime != value)
                {
                    _Requesttime = value;
                }
            }
        }
        private Nullable<DateTime> _Requesttime;

        /// <summary>
        /// Request userid
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Requestuser
        {
            get
            {
                return _Requestuser;
            }
            set
            {
                if (_Requestuser != value)
                {
                    _Requestuser = value;
                }
            }
        }
        private string _Requestuser;

        /// <summary>
        /// The time that the production is started actually.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Starttime
        {
            get
            {
                return _Starttime;
            }
            set
            {
                if (_Starttime != value)
                {
                    _Starttime = value;
                }
            }
        }
        private Nullable<DateTime> _Starttime;

        /// <summary>
        /// The userid that the production is started actually.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Startuser
        {
            get
            {
                return _Startuser;
            }
            set
            {
                if (_Startuser != value)
                {
                    _Startuser = value;
                }
            }
        }
        private string _Startuser;

        /// <summary>
        /// The time that the production is completed actually.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Completetime
        {
            get
            {
                return _Completetime;
            }
            set
            {
                if (_Completetime != value)
                {
                    _Completetime = value;
                }
            }
        }
        private Nullable<DateTime> _Completetime;

        /// <summary>
        /// The userid that the production is completed actually.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Completeuser
        {
            get
            {
                return _Completeuser;
            }
            set
            {
                if (_Completeuser != value)
                {
                    _Completeuser = value;
                }
            }
        }
        private string _Completeuser;

        /// <summary>
        /// The time that the production is closed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Closetime
        {
            get
            {
                return _Closetime;
            }
            set
            {
                if (_Closetime != value)
                {
                    _Closetime = value;
                }
            }
        }
        private Nullable<DateTime> _Closetime;

        /// <summary>
        /// The userid that the production is closed.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Closeuser
        {
            get
            {
                return _Closeuser;
            }
            set
            {
                if (_Closeuser != value)
                {
                    _Closeuser = value;
                }
            }
        }
        private string _Closeuser;

        /// <summary>
        /// Quantity of plan.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Planquantity
        {
            get
            {
                return _Planquantity;
            }
            set
            {
                if (_Planquantity != value)
                {
                    _Planquantity = value;
                }
            }
        }
        private Nullable<decimal> _Planquantity;

        /// <summary>
        /// Quantity of started.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Startedquantity
        {
            get
            {
                return _Startedquantity;
            }
            set
            {
                if (_Startedquantity != value)
                {
                    _Startedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Startedquantity;

        /// <summary>
        /// Quantity of scrapped.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Scrappedquantity
        {
            get
            {
                return _Scrappedquantity;
            }
            set
            {
                if (_Scrappedquantity != value)
                {
                    _Scrappedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Scrappedquantity;

        /// <summary>
        /// Quantity of unscrapped.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Unscrappedquantity
        {
            get
            {
                return _Unscrappedquantity;
            }
            set
            {
                if (_Unscrappedquantity != value)
                {
                    _Unscrappedquantity = value;
                }
            }
        }
        private Nullable<decimal> _Unscrappedquantity;

        /// <summary>
        /// Priority.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=4, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// Unit id of qty. (ref. FOM_UOM)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uomid
        {
            get
            {
                return _Uomid;
            }
            set
            {
                if (_Uomid != value)
                {
                    _Uomid = value;
                }
            }
        }
        private string _Uomid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fpconfirmdate
        {
            get
            {
                return _Fpconfirmdate;
            }
            set
            {
                if (_Fpconfirmdate != value)
                {
                    _Fpconfirmdate = value;
                }
            }
        }
        private string _Fpconfirmdate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Womcreate
        {
            get
            {
                return _Womcreate;
            }
            set
            {
                if (_Womcreate != value)
                {
                    _Womcreate = value;
                }
            }
        }
        private string _Womcreate;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=10, DataSize=10, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Womconfirm
        {
            get
            {
                return _Womconfirm;
            }
            set
            {
                if (_Womconfirm != value)
                {
                    _Womconfirm = value;
                }
            }
        }
        private string _Womconfirm;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Fporderid
        {
            get
            {
                return _Fporderid;
            }
            set
            {
                if (_Fporderid != value)
                {
                    _Fporderid = value;
                }
            }
        }
        private string _Fporderid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=8000, DataSize=4000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Customerid
        {
            get
            {
                return _Customerid;
            }
            set
            {
                if (_Customerid != value)
                {
                    _Customerid = value;
                }
            }
        }
        private string _Customerid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Ecsinputquantity
        {
            get
            {
                return _Ecsinputquantity;
            }
            set
            {
                if (_Ecsinputquantity != value)
                {
                    _Ecsinputquantity = value;
                }
            }
        }
        private Nullable<decimal> _Ecsinputquantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="(0)")]
        [DataMemberAttribute()]
        public Nullable<decimal> Completequantity
        {
            get
            {
                return _Completequantity;
            }
            set
            {
                if (_Completequantity != value)
                {
                    _Completequantity = value;
                }
            }
        }
        private Nullable<decimal> _Completequantity;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="int", MaxLength=4, DataSize=4, Scale=0, Precision=10, KeySeq=0, Default="(0)")]
        [DataMemberAttribute()]
        public Nullable<decimal> Fpplanseq
        {
            get
            {
                return _Fpplanseq;
            }
            set
            {
                if (_Fpplanseq != value)
                {
                    _Fpplanseq = value;
                }
            }
        }
        private Nullable<decimal> _Fpplanseq;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// API interlock 정의 (Lot hold 시 허용 여부)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Api")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Api : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// API id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Apiid
        {
            get
            {
                return _Apiid;
            }
            set
            {
                if (_Apiid != value)
                {
                    _Apiid = value;
                }
            }
        }
        private string _Apiid;

        /// <summary>
        /// API version. for classify override function.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public int Apiversion
        {
            get
            {
                return _Apiversion;
            }
            set
            {
                if (_Apiversion != value)
                {
                    _Apiversion = value;
                }
            }
        }
        private int _Apiversion;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// The flag to determin API allow to Lot of Ishold="Y". ("Y": Allow, "N": Not Allow)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Allowholdlot
        {
            get
            {
                return _Allowholdlot;
            }
            set
            {
                if (_Allowholdlot != value)
                {
                    _Allowholdlot = value;
                }
            }
        }
        private string _Allowholdlot;

        /// <summary>
        /// The flag to determin API allow to Producedmaterial of Ishold="Y". ("Y": Allow, "N": Not Allow)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Allowholdproducedmaterial
        {
            get
            {
                return _Allowholdproducedmaterial;
            }
            set
            {
                if (_Allowholdproducedmaterial != value)
                {
                    _Allowholdproducedmaterial = value;
                }
            }
        }
        private string _Allowholdproducedmaterial;

        /// <summary>
        /// The flag to determin API allow to Lot of Ishold="Y". ("Y": Allow, "N": Not Allow)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Issystem
        {
            get
            {
                return _Issystem;
            }
            set
            {
                if (_Issystem != value)
                {
                    _Issystem = value;
                }
            }
        }
        private string _Issystem;

        /// <summary>
        /// API Parameters
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parameters
        {
            get
            {
                return _Parameters;
            }
            set
            {
                if (_Parameters != value)
                {
                    _Parameters = value;
                }
            }
        }
        private string _Parameters;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// API interlock 정의 (Lot hold 시 허용 여부)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Apihist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Apihist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// API id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Apiid
        {
            get
            {
                return _Apiid;
            }
            set
            {
                if (_Apiid != value)
                {
                    _Apiid = value;
                }
            }
        }
        private string _Apiid;

        /// <summary>
        /// API version. for classify override function.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Apiversion
        {
            get
            {
                return _Apiversion;
            }
            set
            {
                if (_Apiversion != value)
                {
                    _Apiversion = value;
                }
            }
        }
        private int _Apiversion;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// The flag to determin API allow to Lot of Ishold="Y". ("Y": Allow, "N": Not Allow)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Allowholdlot
        {
            get
            {
                return _Allowholdlot;
            }
            set
            {
                if (_Allowholdlot != value)
                {
                    _Allowholdlot = value;
                }
            }
        }
        private string _Allowholdlot;

        /// <summary>
        /// The flag to determin API allow to Producedmaterial of Ishold="Y". ("Y": Allow, "N": Not Allow)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Allowholdproducedmaterial
        {
            get
            {
                return _Allowholdproducedmaterial;
            }
            set
            {
                if (_Allowholdproducedmaterial != value)
                {
                    _Allowholdproducedmaterial = value;
                }
            }
        }
        private string _Allowholdproducedmaterial;

        /// <summary>
        /// The flag to determin API allow to Lot of Ishold="Y". ("Y": Allow, "N": Not Allow)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Issystem
        {
            get
            {
                return _Issystem;
            }
            set
            {
                if (_Issystem != value)
                {
                    _Issystem = value;
                }
            }
        }
        private string _Issystem;

        /// <summary>
        /// API Parameters
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parameters
        {
            get
            {
                return _Parameters;
            }
            set
            {
                if (_Parameters != value)
                {
                    _Parameters = value;
                }
            }
        }
        private string _Parameters;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 서버 Application 목록 및 Port 설정 (Ex. MES1 / 8001)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for application id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Applicationid
        {
            get
            {
                return _Applicationid;
            }
            set
            {
                if (_Applicationid != value)
                {
                    _Applicationid = value;
                }
            }
        }
        private string _Applicationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Application name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Applicationname
        {
            get
            {
                return _Applicationname;
            }
            set
            {
                if (_Applicationname != value)
                {
                    _Applicationname = value;
                }
            }
        }
        private string _Applicationname;

        /// <summary>
        /// Application Type (ex. MES,RCD,etc).
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Applicationtype
        {
            get
            {
                return _Applicationtype;
            }
            set
            {
                if (_Applicationtype != value)
                {
                    _Applicationtype = value;
                }
            }
        }
        private string _Applicationtype;

        /// <summary>
        /// IP Address of Application.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ipaddress
        {
            get
            {
                return _Ipaddress;
            }
            set
            {
                if (_Ipaddress != value)
                {
                    _Ipaddress = value;
                }
            }
        }
        private string _Ipaddress;

        /// <summary>
        /// MesRuleService Port.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mesruleserviceport
        {
            get
            {
                return _Mesruleserviceport;
            }
            set
            {
                if (_Mesruleserviceport != value)
                {
                    _Mesruleserviceport = value;
                }
            }
        }
        private string _Mesruleserviceport;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 서버 Application 목록 및 Port 설정 (Ex. MES1 / 8001) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Applicationhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Applicationhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for application id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Applicationid
        {
            get
            {
                return _Applicationid;
            }
            set
            {
                if (_Applicationid != value)
                {
                    _Applicationid = value;
                }
            }
        }
        private string _Applicationid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Application name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Applicationname
        {
            get
            {
                return _Applicationname;
            }
            set
            {
                if (_Applicationname != value)
                {
                    _Applicationname = value;
                }
            }
        }
        private string _Applicationname;

        /// <summary>
        /// Application Type (ex. MES,RCD,etc).
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Applicationtype
        {
            get
            {
                return _Applicationtype;
            }
            set
            {
                if (_Applicationtype != value)
                {
                    _Applicationtype = value;
                }
            }
        }
        private string _Applicationtype;

        /// <summary>
        /// IP Address of Application.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ipaddress
        {
            get
            {
                return _Ipaddress;
            }
            set
            {
                if (_Ipaddress != value)
                {
                    _Ipaddress = value;
                }
            }
        }
        private string _Ipaddress;

        /// <summary>
        /// MesRuleService Port.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mesruleserviceport
        {
            get
            {
                return _Mesruleserviceport;
            }
            set
            {
                if (_Mesruleserviceport != value)
                {
                    _Mesruleserviceport = value;
                }
            }
        }
        private string _Mesruleserviceport;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 서버에 접속한 Client 목록
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for client id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Clientid
        {
            get
            {
                return _Clientid;
            }
            set
            {
                if (_Clientid != value)
                {
                    _Clientid = value;
                }
            }
        }
        private string _Clientid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Client name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Clientname
        {
            get
            {
                return _Clientname;
            }
            set
            {
                if (_Clientname != value)
                {
                    _Clientname = value;
                }
            }
        }
        private string _Clientname;

        /// <summary>
        /// Type of client.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Clienttype
        {
            get
            {
                return _Clienttype;
            }
            set
            {
                if (_Clienttype != value)
                {
                    _Clienttype = value;
                }
            }
        }
        private string _Clienttype;

        /// <summary>
        /// Client Loacation Information
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Publishlocationid
        {
            get
            {
                return _Publishlocationid;
            }
            set
            {
                if (_Publishlocationid != value)
                {
                    _Publishlocationid = value;
                }
            }
        }
        private string _Publishlocationid;

        /// <summary>
        /// Server Name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Servername
        {
            get
            {
                return _Servername;
            }
            set
            {
                if (_Servername != value)
                {
                    _Servername = value;
                }
            }
        }
        private string _Servername;

        /// <summary>
        /// IP address of client PC. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ipaddress
        {
            get
            {
                return _Ipaddress;
            }
            set
            {
                if (_Ipaddress != value)
                {
                    _Ipaddress = value;
                }
            }
        }
        private string _Ipaddress;

        /// <summary>
        /// User who has the client that is PC. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                if (_Owner != value)
                {
                    _Owner = value;
                }
            }
        }
        private string _Owner;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 서버에 접속한 Client 목록 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Clienthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clienthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for client id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Clientid
        {
            get
            {
                return _Clientid;
            }
            set
            {
                if (_Clientid != value)
                {
                    _Clientid = value;
                }
            }
        }
        private string _Clientid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Client name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Clientname
        {
            get
            {
                return _Clientname;
            }
            set
            {
                if (_Clientname != value)
                {
                    _Clientname = value;
                }
            }
        }
        private string _Clientname;

        /// <summary>
        /// Type of client.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Clienttype
        {
            get
            {
                return _Clienttype;
            }
            set
            {
                if (_Clienttype != value)
                {
                    _Clienttype = value;
                }
            }
        }
        private string _Clienttype;

        /// <summary>
        /// Client Loacation Information
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Publishlocationid
        {
            get
            {
                return _Publishlocationid;
            }
            set
            {
                if (_Publishlocationid != value)
                {
                    _Publishlocationid = value;
                }
            }
        }
        private string _Publishlocationid;

        /// <summary>
        /// Server Name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Servername
        {
            get
            {
                return _Servername;
            }
            set
            {
                if (_Servername != value)
                {
                    _Servername = value;
                }
            }
        }
        private string _Servername;

        /// <summary>
        /// IP address of client PC. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ipaddress
        {
            get
            {
                return _Ipaddress;
            }
            set
            {
                if (_Ipaddress != value)
                {
                    _Ipaddress = value;
                }
            }
        }
        private string _Ipaddress;

        /// <summary>
        /// User who has the client that is PC. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                if (_Owner != value)
                {
                    _Owner = value;
                }
            }
        }
        private string _Owner;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Event에 대한 Log (현재 OpenMES 모델러에서 사용)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Eventlog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Eventlog : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Type of trace. ex) UI , Rule , API , DB
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Tracetype
        {
            get
            {
                return _Tracetype;
            }
            set
            {
                if (_Tracetype != value)
                {
                    _Tracetype = value;
                }
            }
        }
        private string _Tracetype;

        /// <summary>
        /// Business rule id. ex) Name of UI , Rule , API , DB 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Bizid
        {
            get
            {
                return _Bizid;
            }
            set
            {
                if (_Bizid != value)
                {
                    _Bizid = value;
                }
            }
        }
        private string _Bizid;

        /// <summary>
        /// Event id. (Transaction id) 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Eventid
        {
            get
            {
                return _Eventid;
            }
            set
            {
                if (_Eventid != value)
                {
                    _Eventid = value;
                }
            }
        }
        private string _Eventid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Event message. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=4000, DataSize=4000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventmessage
        {
            get
            {
                return _Eventmessage;
            }
            set
            {
                if (_Eventmessage != value)
                {
                    _Eventmessage = value;
                }
            }
        }
        private string _Eventmessage;

        /// <summary>
        /// The flag to determine whether or not to be successful. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Issuccess
        {
            get
            {
                return _Issuccess;
            }
            set
            {
                if (_Issuccess != value)
                {
                    _Issuccess = value;
                }
            }
        }
        private string _Issuccess;

        /// <summary>
        /// Object id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objectid
        {
            get
            {
                return _Objectid;
            }
            set
            {
                if (_Objectid != value)
                {
                    _Objectid = value;
                }
            }
        }
        private string _Objectid;

        /// <summary>
        /// Menu id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// UI에서 사용하는 grid에 대한 설정 (칼럼 size 및 표시여부 등)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Gridmaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gridmaster : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Menu id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Unique identifier for grid id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Gridid
        {
            get
            {
                return _Gridid;
            }
            set
            {
                if (_Gridid != value)
                {
                    _Gridid = value;
                }
            }
        }
        private string _Gridid;

        /// <summary>
        /// Column name of grid.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Columnname
        {
            get
            {
                return _Columnname;
            }
            set
            {
                if (_Columnname != value)
                {
                    _Columnname = value;
                }
            }
        }
        private string _Columnname;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Grid name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Gridname
        {
            get
            {
                return _Gridname;
            }
            set
            {
                if (_Gridname != value)
                {
                    _Gridname = value;
                }
            }
        }
        private string _Gridname;

        /// <summary>
        /// Resource name of a specific Grid object
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Resourcename
        {
            get
            {
                return _Resourcename;
            }
            set
            {
                if (_Resourcename != value)
                {
                    _Resourcename = value;
                }
            }
        }
        private string _Resourcename;

        /// <summary>
        /// Size of grid. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Gridsize
        {
            get
            {
                return _Gridsize;
            }
            set
            {
                if (_Gridsize != value)
                {
                    _Gridsize = value;
                }
            }
        }
        private Nullable<decimal> _Gridsize;

        /// <summary>
        /// Sequence of grid. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Griduisequence
        {
            get
            {
                return _Griduisequence;
            }
            set
            {
                if (_Griduisequence != value)
                {
                    _Griduisequence = value;
                }
            }
        }
        private Nullable<decimal> _Griduisequence;

        /// <summary>
        /// Type of grid. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Gridtype
        {
            get
            {
                return _Gridtype;
            }
            set
            {
                if (_Gridtype != value)
                {
                    _Gridtype = value;
                }
            }
        }
        private string _Gridtype;

        /// <summary>
        /// Sub type of grid. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Gridsubtype
        {
            get
            {
                return _Gridsubtype;
            }
            set
            {
                if (_Gridsubtype != value)
                {
                    _Gridsubtype = value;
                }
            }
        }
        private string _Gridsubtype;

        /// <summary>
        /// Combobox 에 매핑되는 Query id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryid
        {
            get
            {
                return _Comboboxqueryid;
            }
            set
            {
                if (_Comboboxqueryid != value)
                {
                    _Comboboxqueryid = value;
                }
            }
        }
        private string _Comboboxqueryid;

        /// <summary>
        /// Combobox 에 매핑되는 Query version.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryversion
        {
            get
            {
                return _Comboboxqueryversion;
            }
            set
            {
                if (_Comboboxqueryversion != value)
                {
                    _Comboboxqueryversion = value;
                }
            }
        }
        private string _Comboboxqueryversion;

        /// <summary>
        /// Combobox 에 매핑되는 Query class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryclassid
        {
            get
            {
                return _Comboboxqueryclassid;
            }
            set
            {
                if (_Comboboxqueryclassid != value)
                {
                    _Comboboxqueryclassid = value;
                }
            }
        }
        private string _Comboboxqueryclassid;

        /// <summary>
        /// Combobox 에 매핑되는 display member.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxdisplaymember
        {
            get
            {
                return _Comboboxdisplaymember;
            }
            set
            {
                if (_Comboboxdisplaymember != value)
                {
                    _Comboboxdisplaymember = value;
                }
            }
        }
        private string _Comboboxdisplaymember;

        /// <summary>
        /// Combobox 에 매핑되는 value member.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxvaluemember
        {
            get
            {
                return _Comboboxvaluemember;
            }
            set
            {
                if (_Comboboxvaluemember != value)
                {
                    _Comboboxvaluemember = value;
                }
            }
        }
        private string _Comboboxvaluemember;

        /// <summary>
        /// Combobox 에 매핑되는 parameter.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxparameter
        {
            get
            {
                return _Comboboxparameter;
            }
            set
            {
                if (_Comboboxparameter != value)
                {
                    _Comboboxparameter = value;
                }
            }
        }
        private string _Comboboxparameter;

        /// <summary>
        /// The flag to determine whether or not to be hidden. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ishidden
        {
            get
            {
                return _Ishidden;
            }
            set
            {
                if (_Ishidden != value)
                {
                    _Ishidden = value;
                }
            }
        }
        private string _Ishidden;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// UI에서 사용하는 grid에 대한 설정 (칼럼 size 및 표시여부 등) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Gridmasterhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gridmasterhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Menu id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Unique identifier for grid id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Gridid
        {
            get
            {
                return _Gridid;
            }
            set
            {
                if (_Gridid != value)
                {
                    _Gridid = value;
                }
            }
        }
        private string _Gridid;

        /// <summary>
        /// Column name of grid.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Columnname
        {
            get
            {
                return _Columnname;
            }
            set
            {
                if (_Columnname != value)
                {
                    _Columnname = value;
                }
            }
        }
        private string _Columnname;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Grid name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Gridname
        {
            get
            {
                return _Gridname;
            }
            set
            {
                if (_Gridname != value)
                {
                    _Gridname = value;
                }
            }
        }
        private string _Gridname;

        /// <summary>
        /// Resource name of a specific Grid object
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Resourcename
        {
            get
            {
                return _Resourcename;
            }
            set
            {
                if (_Resourcename != value)
                {
                    _Resourcename = value;
                }
            }
        }
        private string _Resourcename;

        /// <summary>
        /// Size of grid. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Gridsize
        {
            get
            {
                return _Gridsize;
            }
            set
            {
                if (_Gridsize != value)
                {
                    _Gridsize = value;
                }
            }
        }
        private Nullable<decimal> _Gridsize;

        /// <summary>
        /// Sequence of grid. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Griduisequence
        {
            get
            {
                return _Griduisequence;
            }
            set
            {
                if (_Griduisequence != value)
                {
                    _Griduisequence = value;
                }
            }
        }
        private Nullable<decimal> _Griduisequence;

        /// <summary>
        /// Type of grid. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Gridtype
        {
            get
            {
                return _Gridtype;
            }
            set
            {
                if (_Gridtype != value)
                {
                    _Gridtype = value;
                }
            }
        }
        private string _Gridtype;

        /// <summary>
        /// Sub type of grid. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Gridsubtype
        {
            get
            {
                return _Gridsubtype;
            }
            set
            {
                if (_Gridsubtype != value)
                {
                    _Gridsubtype = value;
                }
            }
        }
        private string _Gridsubtype;

        /// <summary>
        /// Combobox 에 매핑되는 Query id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryid
        {
            get
            {
                return _Comboboxqueryid;
            }
            set
            {
                if (_Comboboxqueryid != value)
                {
                    _Comboboxqueryid = value;
                }
            }
        }
        private string _Comboboxqueryid;

        /// <summary>
        /// Combobox 에 매핑되는 Query version.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryversion
        {
            get
            {
                return _Comboboxqueryversion;
            }
            set
            {
                if (_Comboboxqueryversion != value)
                {
                    _Comboboxqueryversion = value;
                }
            }
        }
        private string _Comboboxqueryversion;

        /// <summary>
        /// Combobox 에 매핑되는 Query class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryclassid
        {
            get
            {
                return _Comboboxqueryclassid;
            }
            set
            {
                if (_Comboboxqueryclassid != value)
                {
                    _Comboboxqueryclassid = value;
                }
            }
        }
        private string _Comboboxqueryclassid;

        /// <summary>
        /// Combobox 에 매핑되는 display member.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxdisplaymember
        {
            get
            {
                return _Comboboxdisplaymember;
            }
            set
            {
                if (_Comboboxdisplaymember != value)
                {
                    _Comboboxdisplaymember = value;
                }
            }
        }
        private string _Comboboxdisplaymember;

        /// <summary>
        /// Combobox 에 매핑되는 value member.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxvaluemember
        {
            get
            {
                return _Comboboxvaluemember;
            }
            set
            {
                if (_Comboboxvaluemember != value)
                {
                    _Comboboxvaluemember = value;
                }
            }
        }
        private string _Comboboxvaluemember;

        /// <summary>
        /// Combobox 에 매핑되는 parameter.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxparameter
        {
            get
            {
                return _Comboboxparameter;
            }
            set
            {
                if (_Comboboxparameter != value)
                {
                    _Comboboxparameter = value;
                }
            }
        }
        private string _Comboboxparameter;

        /// <summary>
        /// The flag to determine whether or not to be hidden. 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ishidden
        {
            get
            {
                return _Ishidden;
            }
            set
            {
                if (_Ishidden != value)
                {
                    _Ishidden = value;
                }
            }
        }
        private string _Ishidden;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 여러 사용법에 대한 설명 (용어 등)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Helpdictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Helpdictionary : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Help dictionary id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryid
        {
            get
            {
                return _Helpdictionaryid;
            }
            set
            {
                if (_Helpdictionaryid != value)
                {
                    _Helpdictionaryid = value;
                }
            }
        }
        private string _Helpdictionaryid;

        /// <summary>
        /// Group of help dictionary id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryclassid
        {
            get
            {
                return _Helpdictionaryclassid;
            }
            set
            {
                if (_Helpdictionaryclassid != value)
                {
                    _Helpdictionaryclassid = value;
                }
            }
        }
        private string _Helpdictionaryclassid;

        /// <summary>
        /// Type of language. ex) KR, US,CN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Languagetype
        {
            get
            {
                return _Languagetype;
            }
            set
            {
                if (_Languagetype != value)
                {
                    _Languagetype = value;
                }
            }
        }
        private string _Languagetype;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Help dictionary name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryname
        {
            get
            {
                return _Helpdictionaryname;
            }
            set
            {
                if (_Helpdictionaryname != value)
                {
                    _Helpdictionaryname = value;
                }
            }
        }
        private string _Helpdictionaryname;

        /// <summary>
        /// Information. this column saves the html formats.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Information
        {
            get
            {
                return _Information;
            }
            set
            {
                if (_Information != value)
                {
                    _Information = value;
                }
            }
        }
        private string _Information;

        /// <summary>
        /// The date that the help information is applied to the system.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Applieddate
        {
            get
            {
                return _Applieddate;
            }
            set
            {
                if (_Applieddate != value)
                {
                    _Applieddate = value;
                }
            }
        }
        private DateTime _Applieddate;

        /// <summary>
        /// The date that the help information is expired in the system.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Expiredate
        {
            get
            {
                return _Expiredate;
            }
            set
            {
                if (_Expiredate != value)
                {
                    _Expiredate = value;
                }
            }
        }
        private Nullable<DateTime> _Expiredate;

        /// <summary>
        /// The flag to determine whether or not to be forever.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isforever
        {
            get
            {
                return _Isforever;
            }
            set
            {
                if (_Isforever != value)
                {
                    _Isforever = value;
                }
            }
        }
        private string _Isforever;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설명에 대한 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Helpdictionaryclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Helpdictionaryclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for help dicionary class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryclassid
        {
            get
            {
                return _Helpdictionaryclassid;
            }
            set
            {
                if (_Helpdictionaryclassid != value)
                {
                    _Helpdictionaryclassid = value;
                }
            }
        }
        private string _Helpdictionaryclassid;

        /// <summary>
        /// Help dictionary id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryid
        {
            get
            {
                return _Helpdictionaryid;
            }
            set
            {
                if (_Helpdictionaryid != value)
                {
                    _Helpdictionaryid = value;
                }
            }
        }
        private string _Helpdictionaryid;

        /// <summary>
        /// Group of help dictionary id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Grouphelpdictionaryclassid
        {
            get
            {
                return _Grouphelpdictionaryclassid;
            }
            set
            {
                if (_Grouphelpdictionaryclassid != value)
                {
                    _Grouphelpdictionaryclassid = value;
                }
            }
        }
        private string _Grouphelpdictionaryclassid;

        /// <summary>
        /// Type of language. ex) KR, US,CN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Languagetype
        {
            get
            {
                return _Languagetype;
            }
            set
            {
                if (_Languagetype != value)
                {
                    _Languagetype = value;
                }
            }
        }
        private string _Languagetype;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Help dictionary name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryname
        {
            get
            {
                return _Helpdictionaryname;
            }
            set
            {
                if (_Helpdictionaryname != value)
                {
                    _Helpdictionaryname = value;
                }
            }
        }
        private string _Helpdictionaryname;

        /// <summary>
        /// Information. this column saves the html formats.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Information
        {
            get
            {
                return _Information;
            }
            set
            {
                if (_Information != value)
                {
                    _Information = value;
                }
            }
        }
        private string _Information;

        /// <summary>
        /// The date that the help information is applied to the system.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Applieddate
        {
            get
            {
                return _Applieddate;
            }
            set
            {
                if (_Applieddate != value)
                {
                    _Applieddate = value;
                }
            }
        }
        private DateTime _Applieddate;

        /// <summary>
        /// The date that the help information is expired in the system.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Expiredate
        {
            get
            {
                return _Expiredate;
            }
            set
            {
                if (_Expiredate != value)
                {
                    _Expiredate = value;
                }
            }
        }
        private Nullable<DateTime> _Expiredate;

        /// <summary>
        /// The flag to determine whether or not to be forever.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isforever
        {
            get
            {
                return _Isforever;
            }
            set
            {
                if (_Isforever != value)
                {
                    _Isforever = value;
                }
            }
        }
        private string _Isforever;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 설명에 대한 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Helpdictionaryclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Helpdictionaryclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for help dicionary class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryclassid
        {
            get
            {
                return _Helpdictionaryclassid;
            }
            set
            {
                if (_Helpdictionaryclassid != value)
                {
                    _Helpdictionaryclassid = value;
                }
            }
        }
        private string _Helpdictionaryclassid;

        /// <summary>
        /// Help dictionary id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryid
        {
            get
            {
                return _Helpdictionaryid;
            }
            set
            {
                if (_Helpdictionaryid != value)
                {
                    _Helpdictionaryid = value;
                }
            }
        }
        private string _Helpdictionaryid;

        /// <summary>
        /// Group of help dictionary id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Grouphelpdictionaryclassid
        {
            get
            {
                return _Grouphelpdictionaryclassid;
            }
            set
            {
                if (_Grouphelpdictionaryclassid != value)
                {
                    _Grouphelpdictionaryclassid = value;
                }
            }
        }
        private string _Grouphelpdictionaryclassid;

        /// <summary>
        /// Type of language. ex) KR, US,CN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Languagetype
        {
            get
            {
                return _Languagetype;
            }
            set
            {
                if (_Languagetype != value)
                {
                    _Languagetype = value;
                }
            }
        }
        private string _Languagetype;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Help dictionary name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryname
        {
            get
            {
                return _Helpdictionaryname;
            }
            set
            {
                if (_Helpdictionaryname != value)
                {
                    _Helpdictionaryname = value;
                }
            }
        }
        private string _Helpdictionaryname;

        /// <summary>
        /// Information. this column saves the html formats.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Information
        {
            get
            {
                return _Information;
            }
            set
            {
                if (_Information != value)
                {
                    _Information = value;
                }
            }
        }
        private string _Information;

        /// <summary>
        /// The date that the help information is applied to the system.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Applieddate
        {
            get
            {
                return _Applieddate;
            }
            set
            {
                if (_Applieddate != value)
                {
                    _Applieddate = value;
                }
            }
        }
        private DateTime _Applieddate;

        /// <summary>
        /// The date that the help information is expired in the system.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Expiredate
        {
            get
            {
                return _Expiredate;
            }
            set
            {
                if (_Expiredate != value)
                {
                    _Expiredate = value;
                }
            }
        }
        private Nullable<DateTime> _Expiredate;

        /// <summary>
        /// The flag to determine whether or not to be forever.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isforever
        {
            get
            {
                return _Isforever;
            }
            set
            {
                if (_Isforever != value)
                {
                    _Isforever = value;
                }
            }
        }
        private string _Isforever;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 여러 사용법에 대한 설명 (용어 등) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Helpdictionaryhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Helpdictionaryhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Help dictionary id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryid
        {
            get
            {
                return _Helpdictionaryid;
            }
            set
            {
                if (_Helpdictionaryid != value)
                {
                    _Helpdictionaryid = value;
                }
            }
        }
        private string _Helpdictionaryid;

        /// <summary>
        /// Group of help dictionary id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryclassid
        {
            get
            {
                return _Helpdictionaryclassid;
            }
            set
            {
                if (_Helpdictionaryclassid != value)
                {
                    _Helpdictionaryclassid = value;
                }
            }
        }
        private string _Helpdictionaryclassid;

        /// <summary>
        /// Type of language. ex) KR, US,CN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Languagetype
        {
            get
            {
                return _Languagetype;
            }
            set
            {
                if (_Languagetype != value)
                {
                    _Languagetype = value;
                }
            }
        }
        private string _Languagetype;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Help dictionary name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Helpdictionaryname
        {
            get
            {
                return _Helpdictionaryname;
            }
            set
            {
                if (_Helpdictionaryname != value)
                {
                    _Helpdictionaryname = value;
                }
            }
        }
        private string _Helpdictionaryname;

        /// <summary>
        /// Information. this column saves the html formats.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Information
        {
            get
            {
                return _Information;
            }
            set
            {
                if (_Information != value)
                {
                    _Information = value;
                }
            }
        }
        private string _Information;

        /// <summary>
        /// The date that the help information is applied to the system.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Applieddate
        {
            get
            {
                return _Applieddate;
            }
            set
            {
                if (_Applieddate != value)
                {
                    _Applieddate = value;
                }
            }
        }
        private DateTime _Applieddate;

        /// <summary>
        /// The date that the help information is expired in the system.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Expiredate
        {
            get
            {
                return _Expiredate;
            }
            set
            {
                if (_Expiredate != value)
                {
                    _Expiredate = value;
                }
            }
        }
        private Nullable<DateTime> _Expiredate;

        /// <summary>
        /// The flag to determine whether or not to be forever.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Isforever
        {
            get
            {
                return _Isforever;
            }
            set
            {
                if (_Isforever != value)
                {
                    _Isforever = value;
                }
            }
        }
        private string _Isforever;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 입력 값에 대한 내용
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Inputmaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inputmaster : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Menu id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Layout id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Layoutid
        {
            get
            {
                return _Layoutid;
            }
            set
            {
                if (_Layoutid != value)
                {
                    _Layoutid = value;
                }
            }
        }
        private string _Layoutid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Table id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Tableid
        {
            get
            {
                return _Tableid;
            }
            set
            {
                if (_Tableid != value)
                {
                    _Tableid = value;
                }
            }
        }
        private string _Tableid;

        /// <summary>
        /// Column id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Columnid
        {
            get
            {
                return _Columnid;
            }
            set
            {
                if (_Columnid != value)
                {
                    _Columnid = value;
                }
            }
        }
        private string _Columnid;

        /// <summary>
        /// Input control id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=6, Default="")]
        [DataMemberAttribute()]
        public string Inputcontrolid
        {
            get
            {
                return _Inputcontrolid;
            }
            set
            {
                if (_Inputcontrolid != value)
                {
                    _Inputcontrolid = value;
                }
            }
        }
        private string _Inputcontrolid;

        /// <summary>
        /// Input control 레이블
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Inputcontrollabletext
        {
            get
            {
                return _Inputcontrollabletext;
            }
            set
            {
                if (_Inputcontrollabletext != value)
                {
                    _Inputcontrollabletext = value;
                }
            }
        }
        private string _Inputcontrollabletext;

        /// <summary>
        /// Input control 유형
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Inputcontroltype
        {
            get
            {
                return _Inputcontroltype;
            }
            set
            {
                if (_Inputcontroltype != value)
                {
                    _Inputcontroltype = value;
                }
            }
        }
        private string _Inputcontroltype;

        /// <summary>
        /// Input control 하위 유형
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Inputcontrolsubtype
        {
            get
            {
                return _Inputcontrolsubtype;
            }
            set
            {
                if (_Inputcontrolsubtype != value)
                {
                    _Inputcontrolsubtype = value;
                }
            }
        }
        private string _Inputcontrolsubtype;

        /// <summary>
        /// Input control 넓이
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Inputcontrolwidth
        {
            get
            {
                return _Inputcontrolwidth;
            }
            set
            {
                if (_Inputcontrolwidth != value)
                {
                    _Inputcontrolwidth = value;
                }
            }
        }
        private Nullable<decimal> _Inputcontrolwidth;

        /// <summary>
        /// Input control 높이
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Inputcontrolheight
        {
            get
            {
                return _Inputcontrolheight;
            }
            set
            {
                if (_Inputcontrolheight != value)
                {
                    _Inputcontrolheight = value;
                }
            }
        }
        private Nullable<decimal> _Inputcontrolheight;

        /// <summary>
        /// Input control 순번
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Inputcontrolpriority
        {
            get
            {
                return _Inputcontrolpriority;
            }
            set
            {
                if (_Inputcontrolpriority != value)
                {
                    _Inputcontrolpriority = value;
                }
            }
        }
        private Nullable<decimal> _Inputcontrolpriority;

        /// <summary>
        /// Combobox 매핑된 Query id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryid
        {
            get
            {
                return _Comboboxqueryid;
            }
            set
            {
                if (_Comboboxqueryid != value)
                {
                    _Comboboxqueryid = value;
                }
            }
        }
        private string _Comboboxqueryid;

        /// <summary>
        /// Combobox 매핑된 Display member
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxdisplaymember
        {
            get
            {
                return _Comboboxdisplaymember;
            }
            set
            {
                if (_Comboboxdisplaymember != value)
                {
                    _Comboboxdisplaymember = value;
                }
            }
        }
        private string _Comboboxdisplaymember;

        /// <summary>
        /// Combobox 매핑된 값 member
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxvaluemember
        {
            get
            {
                return _Comboboxvaluemember;
            }
            set
            {
                if (_Comboboxvaluemember != value)
                {
                    _Comboboxvaluemember = value;
                }
            }
        }
        private string _Comboboxvaluemember;

        /// <summary>
        /// Combobox 매핑된 Query version.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryversion
        {
            get
            {
                return _Comboboxqueryversion;
            }
            set
            {
                if (_Comboboxqueryversion != value)
                {
                    _Comboboxqueryversion = value;
                }
            }
        }
        private string _Comboboxqueryversion;

        /// <summary>
        /// Combobox 매핑된 Query class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryclassid
        {
            get
            {
                return _Comboboxqueryclassid;
            }
            set
            {
                if (_Comboboxqueryclassid != value)
                {
                    _Comboboxqueryclassid = value;
                }
            }
        }
        private string _Comboboxqueryclassid;

        /// <summary>
        /// Combobox 매개변수
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxparameter
        {
            get
            {
                return _Comboboxparameter;
            }
            set
            {
                if (_Comboboxparameter != value)
                {
                    _Comboboxparameter = value;
                }
            }
        }
        private string _Comboboxparameter;

        /// <summary>
        /// Process segment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// 필수 여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ismandatory
        {
            get
            {
                return _Ismandatory;
            }
            set
            {
                if (_Ismandatory != value)
                {
                    _Ismandatory = value;
                }
            }
        }
        private string _Ismandatory;

        /// <summary>
        /// 읽기 전용 여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isreadonly
        {
            get
            {
                return _Isreadonly;
            }
            set
            {
                if (_Isreadonly != value)
                {
                    _Isreadonly = value;
                }
            }
        }
        private string _Isreadonly;

        /// <summary>
        /// 숨김 여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ishidden
        {
            get
            {
                return _Ishidden;
            }
            set
            {
                if (_Ishidden != value)
                {
                    _Ishidden = value;
                }
            }
        }
        private string _Ishidden;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 입력 값에 대한 내용 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Inputmasterhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inputmasterhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Menu id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Layout id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Layoutid
        {
            get
            {
                return _Layoutid;
            }
            set
            {
                if (_Layoutid != value)
                {
                    _Layoutid = value;
                }
            }
        }
        private string _Layoutid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Table id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tableid
        {
            get
            {
                return _Tableid;
            }
            set
            {
                if (_Tableid != value)
                {
                    _Tableid = value;
                }
            }
        }
        private string _Tableid;

        /// <summary>
        /// Column id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Columnid
        {
            get
            {
                return _Columnid;
            }
            set
            {
                if (_Columnid != value)
                {
                    _Columnid = value;
                }
            }
        }
        private string _Columnid;

        /// <summary>
        /// Input control id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Inputcontrolid
        {
            get
            {
                return _Inputcontrolid;
            }
            set
            {
                if (_Inputcontrolid != value)
                {
                    _Inputcontrolid = value;
                }
            }
        }
        private string _Inputcontrolid;

        /// <summary>
        /// Input control 레이블
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Inputcontrollabletext
        {
            get
            {
                return _Inputcontrollabletext;
            }
            set
            {
                if (_Inputcontrollabletext != value)
                {
                    _Inputcontrollabletext = value;
                }
            }
        }
        private string _Inputcontrollabletext;

        /// <summary>
        /// Input control 유형
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Inputcontroltype
        {
            get
            {
                return _Inputcontroltype;
            }
            set
            {
                if (_Inputcontroltype != value)
                {
                    _Inputcontroltype = value;
                }
            }
        }
        private string _Inputcontroltype;

        /// <summary>
        /// Input control 하위 유형
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Inputcontrolsubtype
        {
            get
            {
                return _Inputcontrolsubtype;
            }
            set
            {
                if (_Inputcontrolsubtype != value)
                {
                    _Inputcontrolsubtype = value;
                }
            }
        }
        private string _Inputcontrolsubtype;

        /// <summary>
        /// Input control 넓이
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Inputcontrolwidth
        {
            get
            {
                return _Inputcontrolwidth;
            }
            set
            {
                if (_Inputcontrolwidth != value)
                {
                    _Inputcontrolwidth = value;
                }
            }
        }
        private Nullable<decimal> _Inputcontrolwidth;

        /// <summary>
        /// Input control 높이
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Inputcontrolheight
        {
            get
            {
                return _Inputcontrolheight;
            }
            set
            {
                if (_Inputcontrolheight != value)
                {
                    _Inputcontrolheight = value;
                }
            }
        }
        private Nullable<decimal> _Inputcontrolheight;

        /// <summary>
        /// Input control 순번
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="float", MaxLength=8, DataSize=8, Scale=0, Precision=53, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<decimal> Inputcontrolpriority
        {
            get
            {
                return _Inputcontrolpriority;
            }
            set
            {
                if (_Inputcontrolpriority != value)
                {
                    _Inputcontrolpriority = value;
                }
            }
        }
        private Nullable<decimal> _Inputcontrolpriority;

        /// <summary>
        /// Combobox 매핑된 Query id
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryid
        {
            get
            {
                return _Comboboxqueryid;
            }
            set
            {
                if (_Comboboxqueryid != value)
                {
                    _Comboboxqueryid = value;
                }
            }
        }
        private string _Comboboxqueryid;

        /// <summary>
        /// Combobox 매핑된 Display member
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxdisplaymember
        {
            get
            {
                return _Comboboxdisplaymember;
            }
            set
            {
                if (_Comboboxdisplaymember != value)
                {
                    _Comboboxdisplaymember = value;
                }
            }
        }
        private string _Comboboxdisplaymember;

        /// <summary>
        /// Combobox 매핑된 값 member
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxvaluemember
        {
            get
            {
                return _Comboboxvaluemember;
            }
            set
            {
                if (_Comboboxvaluemember != value)
                {
                    _Comboboxvaluemember = value;
                }
            }
        }
        private string _Comboboxvaluemember;

        /// <summary>
        /// Combobox 매핑된 Query version.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryversion
        {
            get
            {
                return _Comboboxqueryversion;
            }
            set
            {
                if (_Comboboxqueryversion != value)
                {
                    _Comboboxqueryversion = value;
                }
            }
        }
        private string _Comboboxqueryversion;

        /// <summary>
        /// Combobox 매핑된 Query class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxqueryclassid
        {
            get
            {
                return _Comboboxqueryclassid;
            }
            set
            {
                if (_Comboboxqueryclassid != value)
                {
                    _Comboboxqueryclassid = value;
                }
            }
        }
        private string _Comboboxqueryclassid;

        /// <summary>
        /// Combobox 매개변수
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Comboboxparameter
        {
            get
            {
                return _Comboboxparameter;
            }
            set
            {
                if (_Comboboxparameter != value)
                {
                    _Comboboxparameter = value;
                }
            }
        }
        private string _Comboboxparameter;

        /// <summary>
        /// Process segment id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// 필수 여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ismandatory
        {
            get
            {
                return _Ismandatory;
            }
            set
            {
                if (_Ismandatory != value)
                {
                    _Ismandatory = value;
                }
            }
        }
        private string _Ismandatory;

        /// <summary>
        /// 읽기 전용 여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isreadonly
        {
            get
            {
                return _Isreadonly;
            }
            set
            {
                if (_Isreadonly != value)
                {
                    _Isreadonly = value;
                }
            }
        }
        private string _Isreadonly;

        /// <summary>
        /// 숨김 여부
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ishidden
        {
            get
            {
                return _Ishidden;
            }
            set
            {
                if (_Ishidden != value)
                {
                    _Ishidden = value;
                }
            }
        }
        private string _Ishidden;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 시스템에 로그인한 User 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Login")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Login : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// User id to be logged in. (ref. SYS_USER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// The system to be logged in. ex) MES, etc.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Loginsystem
        {
            get
            {
                return _Loginsystem;
            }
            set
            {
                if (_Loginsystem != value)
                {
                    _Loginsystem = value;
                }
            }
        }
        private string _Loginsystem;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Login ip address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ipaddress
        {
            get
            {
                return _Ipaddress;
            }
            set
            {
                if (_Ipaddress != value)
                {
                    _Ipaddress = value;
                }
            }
        }
        private string _Ipaddress;

        /// <summary>
        /// Login mac address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Macaddress
        {
            get
            {
                return _Macaddress;
            }
            set
            {
                if (_Macaddress != value)
                {
                    _Macaddress = value;
                }
            }
        }
        private string _Macaddress;

        /// <summary>
        /// Whenever login be failed, this count is increased.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Loginretrycount
        {
            get
            {
                return _Loginretrycount;
            }
            set
            {
                if (_Loginretrycount != value)
                {
                    _Loginretrycount = value;
                }
            }
        }
        private Nullable<int> _Loginretrycount;

        /// <summary>
        /// Login pc name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pcname
        {
            get
            {
                return _Pcname;
            }
            set
            {
                if (_Pcname != value)
                {
                    _Pcname = value;
                }
            }
        }
        private string _Pcname;

        /// <summary>
        /// User Interface Modify Version
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uiversion
        {
            get
            {
                return _Uiversion;
            }
            set
            {
                if (_Uiversion != value)
                {
                    _Uiversion = value;
                }
            }
        }
        private string _Uiversion;

        /// <summary>
        /// The user is logged in Location
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 시스템에 로그인한 User 정보 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Loginhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Loginhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// User id to be logged in. (ref. SYS_USER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// The system to be logged in. ex) MES, etc.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Loginsystem
        {
            get
            {
                return _Loginsystem;
            }
            set
            {
                if (_Loginsystem != value)
                {
                    _Loginsystem = value;
                }
            }
        }
        private string _Loginsystem;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Login ip address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ipaddress
        {
            get
            {
                return _Ipaddress;
            }
            set
            {
                if (_Ipaddress != value)
                {
                    _Ipaddress = value;
                }
            }
        }
        private string _Ipaddress;

        /// <summary>
        /// Login mac address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Macaddress
        {
            get
            {
                return _Macaddress;
            }
            set
            {
                if (_Macaddress != value)
                {
                    _Macaddress = value;
                }
            }
        }
        private string _Macaddress;

        /// <summary>
        /// Whenever login be failed, this count is increased.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Loginretrycount
        {
            get
            {
                return _Loginretrycount;
            }
            set
            {
                if (_Loginretrycount != value)
                {
                    _Loginretrycount = value;
                }
            }
        }
        private Nullable<int> _Loginretrycount;

        /// <summary>
        /// Login pc name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pcname
        {
            get
            {
                return _Pcname;
            }
            set
            {
                if (_Pcname != value)
                {
                    _Pcname = value;
                }
            }
        }
        private string _Pcname;

        /// <summary>
        /// User Interface Modify Version
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Uiversion
        {
            get
            {
                return _Uiversion;
            }
            set
            {
                if (_Uiversion != value)
                {
                    _Uiversion = value;
                }
            }
        }
        private string _Uiversion;

        /// <summary>
        /// The user is logged in Location
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Locationid
        {
            get
            {
                return _Locationid;
            }
            set
            {
                if (_Locationid != value)
                {
                    _Locationid = value;
                }
            }
        }
        private string _Locationid;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Login 정책 (Password 만료, 로그인 실패 회수 관리 등)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Loginpolicy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Loginpolicy : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for login definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Logindefinitionid
        {
            get
            {
                return _Logindefinitionid;
            }
            set
            {
                if (_Logindefinitionid != value)
                {
                    _Logindefinitionid = value;
                }
            }
        }
        private string _Logindefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Login definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Logindefinitionname
        {
            get
            {
                return _Logindefinitionname;
            }
            set
            {
                if (_Logindefinitionname != value)
                {
                    _Logindefinitionname = value;
                }
            }
        }
        private string _Logindefinitionname;

        /// <summary>
        /// Login retry count.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Loginretrycount
        {
            get
            {
                return _Loginretrycount;
            }
            set
            {
                if (_Loginretrycount != value)
                {
                    _Loginretrycount = value;
                }
            }
        }
        private Nullable<int> _Loginretrycount;

        /// <summary>
        /// Password change period.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Passwordchangeperiod
        {
            get
            {
                return _Passwordchangeperiod;
            }
            set
            {
                if (_Passwordchangeperiod != value)
                {
                    _Passwordchangeperiod = value;
                }
            }
        }
        private Nullable<int> _Passwordchangeperiod;

        /// <summary>
        /// Password change period unit.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Passwordchangeunit
        {
            get
            {
                return _Passwordchangeunit;
            }
            set
            {
                if (_Passwordchangeunit != value)
                {
                    _Passwordchangeunit = value;
                }
            }
        }
        private string _Passwordchangeunit;

        /// <summary>
        /// Password minimum length.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Passwordminlength
        {
            get
            {
                return _Passwordminlength;
            }
            set
            {
                if (_Passwordminlength != value)
                {
                    _Passwordminlength = value;
                }
            }
        }
        private Nullable<int> _Passwordminlength;

        /// <summary>
        ///  Limit the number of login password mismatch
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Notallowpasswordlatestcount
        {
            get
            {
                return _Notallowpasswordlatestcount;
            }
            set
            {
                if (_Notallowpasswordlatestcount != value)
                {
                    _Notallowpasswordlatestcount = value;
                }
            }
        }
        private Nullable<int> _Notallowpasswordlatestcount;

        /// <summary>
        /// Password regular expresstion for validation
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Passwordpattern
        {
            get
            {
                return _Passwordpattern;
            }
            set
            {
                if (_Passwordpattern != value)
                {
                    _Passwordpattern = value;
                }
            }
        }
        private string _Passwordpattern;

        /// <summary>
        /// Flag whether auto generate a temporary password
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Iscreatetemppassword
        {
            get
            {
                return _Iscreatetemppassword;
            }
            set
            {
                if (_Iscreatetemppassword != value)
                {
                    _Iscreatetemppassword = value;
                }
            }
        }
        private string _Iscreatetemppassword;

        /// <summary>
        /// Flag whether change password by authority user class
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Ischangeablepassword
        {
            get
            {
                return _Ischangeablepassword;
            }
            set
            {
                if (_Ischangeablepassword != value)
                {
                    _Ischangeablepassword = value;
                }
            }
        }
        private string _Ischangeablepassword;

        /// <summary>
        /// Flag whether initialize password by authority user class
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isinitializablepassword
        {
            get
            {
                return _Isinitializablepassword;
            }
            set
            {
                if (_Isinitializablepassword != value)
                {
                    _Isinitializablepassword = value;
                }
            }
        }
        private string _Isinitializablepassword;

        /// <summary>
        /// User class that can modify other user password (ref.SYS_USERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Authorityuserclassid
        {
            get
            {
                return _Authorityuserclassid;
            }
            set
            {
                if (_Authorityuserclassid != value)
                {
                    _Authorityuserclassid = value;
                }
            }
        }
        private string _Authorityuserclassid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Login 정책 (Password 만료, 로그인 실패 회수 관리 등) 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Loginpolicyhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Loginpolicyhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for login definition id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Logindefinitionid
        {
            get
            {
                return _Logindefinitionid;
            }
            set
            {
                if (_Logindefinitionid != value)
                {
                    _Logindefinitionid = value;
                }
            }
        }
        private string _Logindefinitionid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Login definition name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Logindefinitionname
        {
            get
            {
                return _Logindefinitionname;
            }
            set
            {
                if (_Logindefinitionname != value)
                {
                    _Logindefinitionname = value;
                }
            }
        }
        private string _Logindefinitionname;

        /// <summary>
        /// Login retry count.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Loginretrycount
        {
            get
            {
                return _Loginretrycount;
            }
            set
            {
                if (_Loginretrycount != value)
                {
                    _Loginretrycount = value;
                }
            }
        }
        private Nullable<int> _Loginretrycount;

        /// <summary>
        /// Password change period.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Passwordchangeperiod
        {
            get
            {
                return _Passwordchangeperiod;
            }
            set
            {
                if (_Passwordchangeperiod != value)
                {
                    _Passwordchangeperiod = value;
                }
            }
        }
        private Nullable<int> _Passwordchangeperiod;

        /// <summary>
        /// Password change period unit.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Passwordchangeunit
        {
            get
            {
                return _Passwordchangeunit;
            }
            set
            {
                if (_Passwordchangeunit != value)
                {
                    _Passwordchangeunit = value;
                }
            }
        }
        private string _Passwordchangeunit;

        /// <summary>
        /// Password minimum length.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Passwordminlength
        {
            get
            {
                return _Passwordminlength;
            }
            set
            {
                if (_Passwordminlength != value)
                {
                    _Passwordminlength = value;
                }
            }
        }
        private Nullable<int> _Passwordminlength;

        /// <summary>
        ///  Limit the number of login password mismatch
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Notallowpasswordlatestcount
        {
            get
            {
                return _Notallowpasswordlatestcount;
            }
            set
            {
                if (_Notallowpasswordlatestcount != value)
                {
                    _Notallowpasswordlatestcount = value;
                }
            }
        }
        private Nullable<int> _Notallowpasswordlatestcount;

        /// <summary>
        /// Password regular expresstion for validation
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Passwordpattern
        {
            get
            {
                return _Passwordpattern;
            }
            set
            {
                if (_Passwordpattern != value)
                {
                    _Passwordpattern = value;
                }
            }
        }
        private string _Passwordpattern;

        /// <summary>
        /// Flag whether auto generate a temporary password
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Iscreatetemppassword
        {
            get
            {
                return _Iscreatetemppassword;
            }
            set
            {
                if (_Iscreatetemppassword != value)
                {
                    _Iscreatetemppassword = value;
                }
            }
        }
        private string _Iscreatetemppassword;

        /// <summary>
        /// Flag whether change password by authority user class
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'Y'")]
        [DataMemberAttribute()]
        public string Ischangeablepassword
        {
            get
            {
                return _Ischangeablepassword;
            }
            set
            {
                if (_Ischangeablepassword != value)
                {
                    _Ischangeablepassword = value;
                }
            }
        }
        private string _Ischangeablepassword;

        /// <summary>
        /// Flag whether initialize password by authority user class
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Isinitializablepassword
        {
            get
            {
                return _Isinitializablepassword;
            }
            set
            {
                if (_Isinitializablepassword != value)
                {
                    _Isinitializablepassword = value;
                }
            }
        }
        private string _Isinitializablepassword;

        /// <summary>
        /// User class that can modify other user password (ref.SYS_USERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Authorityuserclassid
        {
            get
            {
                return _Authorityuserclassid;
            }
            set
            {
                if (_Authorityuserclassid != value)
                {
                    _Authorityuserclassid = value;
                }
            }
        }
        private string _Authorityuserclassid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 메뉴 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Menu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menu : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for menu id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id as system identifier (ex. MES, UI, etc) (ref. SYS_MENUCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Menu name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=800, DataSize=400, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuname
        {
            get
            {
                return _Menuname;
            }
            set
            {
                if (_Menuname != value)
                {
                    _Menuname = value;
                }
            }
        }
        private string _Menuname;

        /// <summary>
        /// Type of menu (N - Normal, F - Folder, S - Separator)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menutype
        {
            get
            {
                return _Menutype;
            }
            set
            {
                if (_Menutype != value)
                {
                    _Menutype = value;
                }
            }
        }
        private string _Menutype;

        /// <summary>
        /// Control Type of menu. (Menu, Button, etc)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Controltype
        {
            get
            {
                return _Controltype;
            }
            set
            {
                if (_Controltype != value)
                {
                    _Controltype = value;
                }
            }
        }
        private string _Controltype;

        /// <summary>
        /// View id of menu. (ex. form name, view name)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Viewid
        {
            get
            {
                return _Viewid;
            }
            set
            {
                if (_Viewid != value)
                {
                    _Viewid = value;
                }
            }
        }
        private string _Viewid;

        /// <summary>
        /// Type of view (ex. base class name, template name, etc)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Viewtype
        {
            get
            {
                return _Viewtype;
            }
            set
            {
                if (_Viewtype != value)
                {
                    _Viewtype = value;
                }
            }
        }
        private string _Viewtype;

        /// <summary>
        /// Parent menu id. (ref. FOM_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentid
        {
            get
            {
                return _Parentid;
            }
            set
            {
                if (_Parentid != value)
                {
                    _Parentid = value;
                }
            }
        }
        private string _Parentid;

        /// <summary>
        /// Priority of menu.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// Depth of menu.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Depth
        {
            get
            {
                return _Depth;
            }
            set
            {
                if (_Depth != value)
                {
                    _Depth = value;
                }
            }
        }
        private Nullable<int> _Depth;

        /// <summary>
        /// Icon Type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Icontype
        {
            get
            {
                return _Icontype;
            }
            set
            {
                if (_Icontype != value)
                {
                    _Icontype = value;
                }
            }
        }
        private string _Icontype;

        /// <summary>
        /// Icon Name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Iconname
        {
            get
            {
                return _Iconname;
            }
            set
            {
                if (_Iconname != value)
                {
                    _Iconname = value;
                }
            }
        }
        private string _Iconname;

        /// <summary>
        /// Icon Path
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=2000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Iconpath
        {
            get
            {
                return _Iconpath;
            }
            set
            {
                if (_Iconpath != value)
                {
                    _Iconpath = value;
                }
            }
        }
        private string _Iconpath;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=150, DataSize=150, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Linkurl
        {
            get
            {
                return _Linkurl;
            }
            set
            {
                if (_Linkurl != value)
                {
                    _Linkurl = value;
                }
            }
        }
        private string _Linkurl;

        #endregion
    }

    /// <summary>
    /// 메뉴 분류
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Menuclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menuclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for menu class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Menu class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=320, DataSize=160, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassname
        {
            get
            {
                return _Menuclassname;
            }
            set
            {
                if (_Menuclassname != value)
                {
                    _Menuclassname = value;
                }
            }
        }
        private string _Menuclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 메뉴 분류 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Menuclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menuclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for menu class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Menu class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=320, DataSize=160, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassname
        {
            get
            {
                return _Menuclassname;
            }
            set
            {
                if (_Menuclassname != value)
                {
                    _Menuclassname = value;
                }
            }
        }
        private string _Menuclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 메뉴 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Menuhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menuhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for menu id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id as system identifier (ex. MES, UI, etc) (ref. SYS_MENUCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Menu name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=800, DataSize=400, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuname
        {
            get
            {
                return _Menuname;
            }
            set
            {
                if (_Menuname != value)
                {
                    _Menuname = value;
                }
            }
        }
        private string _Menuname;

        /// <summary>
        /// Type of menu (N - Normal, F - Folder, S - Separator)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menutype
        {
            get
            {
                return _Menutype;
            }
            set
            {
                if (_Menutype != value)
                {
                    _Menutype = value;
                }
            }
        }
        private string _Menutype;

        /// <summary>
        /// Control Type of menu. (Menu, Button, etc)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Controltype
        {
            get
            {
                return _Controltype;
            }
            set
            {
                if (_Controltype != value)
                {
                    _Controltype = value;
                }
            }
        }
        private string _Controltype;

        /// <summary>
        /// View id of menu. (ex. form name, view name)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Viewid
        {
            get
            {
                return _Viewid;
            }
            set
            {
                if (_Viewid != value)
                {
                    _Viewid = value;
                }
            }
        }
        private string _Viewid;

        /// <summary>
        /// Type of view (ex. base class name, template name, etc)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Viewtype
        {
            get
            {
                return _Viewtype;
            }
            set
            {
                if (_Viewtype != value)
                {
                    _Viewtype = value;
                }
            }
        }
        private string _Viewtype;

        /// <summary>
        /// Parent menu id. (ref. FOM_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentid
        {
            get
            {
                return _Parentid;
            }
            set
            {
                if (_Parentid != value)
                {
                    _Parentid = value;
                }
            }
        }
        private string _Parentid;

        /// <summary>
        /// Priority of menu.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                if (_Priority != value)
                {
                    _Priority = value;
                }
            }
        }
        private Nullable<int> _Priority;

        /// <summary>
        /// Depth of menu.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Depth
        {
            get
            {
                return _Depth;
            }
            set
            {
                if (_Depth != value)
                {
                    _Depth = value;
                }
            }
        }
        private Nullable<int> _Depth;

        /// <summary>
        /// Icon Type
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Icontype
        {
            get
            {
                return _Icontype;
            }
            set
            {
                if (_Icontype != value)
                {
                    _Icontype = value;
                }
            }
        }
        private string _Icontype;

        /// <summary>
        /// Icon Name
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Iconname
        {
            get
            {
                return _Iconname;
            }
            set
            {
                if (_Iconname != value)
                {
                    _Iconname = value;
                }
            }
        }
        private string _Iconname;

        /// <summary>
        /// Icon Path
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Iconpath
        {
            get
            {
                return _Iconpath;
            }
            set
            {
                if (_Iconpath != value)
                {
                    _Iconpath = value;
                }
            }
        }
        private string _Iconpath;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=150, DataSize=150, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Linkurl
        {
            get
            {
                return _Linkurl;
            }
            set
            {
                if (_Linkurl != value)
                {
                    _Linkurl = value;
                }
            }
        }
        private string _Linkurl;

        #endregion
    }

    /// <summary>
    /// Menu Object 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Menuobject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menuobject : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for object id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Objectid
        {
            get
            {
                return _Objectid;
            }
            set
            {
                if (_Objectid != value)
                {
                    _Objectid = value;
                }
            }
        }
        private string _Objectid;

        /// <summary>
        /// Menu id. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Object name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objectname
        {
            get
            {
                return _Objectname;
            }
            set
            {
                if (_Objectname != value)
                {
                    _Objectname = value;
                }
            }
        }
        private string _Objectname;

        /// <summary>
        /// Object type.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objecttype
        {
            get
            {
                return _Objecttype;
            }
            set
            {
                if (_Objecttype != value)
                {
                    _Objecttype = value;
                }
            }
        }
        private string _Objecttype;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Menu Object 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Menuobjecthist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menuobjecthist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for object id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objectid
        {
            get
            {
                return _Objectid;
            }
            set
            {
                if (_Objectid != value)
                {
                    _Objectid = value;
                }
            }
        }
        private string _Objectid;

        /// <summary>
        /// Menu id. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Object name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objectname
        {
            get
            {
                return _Objectname;
            }
            set
            {
                if (_Objectname != value)
                {
                    _Objectname = value;
                }
            }
        }
        private string _Objectname;

        /// <summary>
        /// Object type.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objecttype
        {
            get
            {
                return _Objecttype;
            }
            set
            {
                if (_Objecttype != value)
                {
                    _Objecttype = value;
                }
            }
        }
        private string _Objecttype;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Rule parameter validation 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Messagesetdictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Messagesetdictionary : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Service name that is the first gouping name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Servicename
        {
            get
            {
                return _Servicename;
            }
            set
            {
                if (_Servicename != value)
                {
                    _Servicename = value;
                }
            }
        }
        private string _Servicename;

        /// <summary>
        /// Business rule name that is called by UI or EC.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Bizname
        {
            get
            {
                return _Bizname;
            }
            set
            {
                if (_Bizname != value)
                {
                    _Bizname = value;
                }
            }
        }
        private string _Bizname;

        /// <summary>
        /// Message set name to be cast on the business rule.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Setname
        {
            get
            {
                return _Setname;
            }
            set
            {
                if (_Setname != value)
                {
                    _Setname = value;
                }
            }
        }
        private string _Setname;

        /// <summary>
        /// Parameter name to be included in message set name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Parametername
        {
            get
            {
                return _Parametername;
            }
            set
            {
                if (_Parametername != value)
                {
                    _Parametername = value;
                }
            }
        }
        private string _Parametername;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// The flag to determine whether or not to be mandatory.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ismandatory
        {
            get
            {
                return _Ismandatory;
            }
            set
            {
                if (_Ismandatory != value)
                {
                    _Ismandatory = value;
                }
            }
        }
        private string _Ismandatory;

        /// <summary>
        /// Type of parameter. ex) string, DateTime, Decimal
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parametertype
        {
            get
            {
                return _Parametertype;
            }
            set
            {
                if (_Parametertype != value)
                {
                    _Parametertype = value;
                }
            }
        }
        private string _Parametertype;

        /// <summary>
        /// The flag to determine whether or not to check the duplication.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Duplicationcheck
        {
            get
            {
                return _Duplicationcheck;
            }
            set
            {
                if (_Duplicationcheck != value)
                {
                    _Duplicationcheck = value;
                }
            }
        }
        private string _Duplicationcheck;

        /// <summary>
        /// The constraint to be checked. ex) HOLD, RELEASE, CONSTANT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constraintitem
        {
            get
            {
                return _Constraintitem;
            }
            set
            {
                if (_Constraintitem != value)
                {
                    _Constraintitem = value;
                }
            }
        }
        private string _Constraintitem;

        /// <summary>
        /// The condition to be checked. ex) PARAMETERNAME == 6, PARAMETERNAME >= 6 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Condition
        {
            get
            {
                return _Condition;
            }
            set
            {
                if (_Condition != value)
                {
                    _Condition = value;
                }
            }
        }
        private string _Condition;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Rule parameter validation 정보 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Messagesetdictionaryhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Messagesetdictionaryhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Service name that is the first gouping name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Servicename
        {
            get
            {
                return _Servicename;
            }
            set
            {
                if (_Servicename != value)
                {
                    _Servicename = value;
                }
            }
        }
        private string _Servicename;

        /// <summary>
        /// Business rule name that is called by UI or EC.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Bizname
        {
            get
            {
                return _Bizname;
            }
            set
            {
                if (_Bizname != value)
                {
                    _Bizname = value;
                }
            }
        }
        private string _Bizname;

        /// <summary>
        /// Message set name to be cast on the business rule.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Setname
        {
            get
            {
                return _Setname;
            }
            set
            {
                if (_Setname != value)
                {
                    _Setname = value;
                }
            }
        }
        private string _Setname;

        /// <summary>
        /// Parameter name to be included in message set name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parametername
        {
            get
            {
                return _Parametername;
            }
            set
            {
                if (_Parametername != value)
                {
                    _Parametername = value;
                }
            }
        }
        private string _Parametername;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// The flag to determine whether or not to be mandatory.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Ismandatory
        {
            get
            {
                return _Ismandatory;
            }
            set
            {
                if (_Ismandatory != value)
                {
                    _Ismandatory = value;
                }
            }
        }
        private string _Ismandatory;

        /// <summary>
        /// Type of parameter. ex) string, DateTime, Decimal
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parametertype
        {
            get
            {
                return _Parametertype;
            }
            set
            {
                if (_Parametertype != value)
                {
                    _Parametertype = value;
                }
            }
        }
        private string _Parametertype;

        /// <summary>
        /// The flag to determine whether or not to check the duplication.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="'N'")]
        [DataMemberAttribute()]
        public string Duplicationcheck
        {
            get
            {
                return _Duplicationcheck;
            }
            set
            {
                if (_Duplicationcheck != value)
                {
                    _Duplicationcheck = value;
                }
            }
        }
        private string _Duplicationcheck;

        /// <summary>
        /// The constraint to be checked. ex) HOLD, RELEASE, CONSTANT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Constraintitem
        {
            get
            {
                return _Constraintitem;
            }
            set
            {
                if (_Constraintitem != value)
                {
                    _Constraintitem = value;
                }
            }
        }
        private string _Constraintitem;

        /// <summary>
        /// The condition to be checked. ex) PARAMETERNAME == 6, PARAMETERNAME >= 6 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Condition
        {
            get
            {
                return _Condition;
            }
            set
            {
                if (_Condition != value)
                {
                    _Condition = value;
                }
            }
        }
        private string _Condition;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 메시지 코드에 대한 다국어 설명 정보
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Multilanguage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Multilanguage : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for language code id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Languagecodeid
        {
            get
            {
                return _Languagecodeid;
            }
            set
            {
                if (_Languagecodeid != value)
                {
                    _Languagecodeid = value;
                }
            }
        }
        private string _Languagecodeid;

        /// <summary>
        /// Type of code. ex) UI, MESSAGE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Codetype
        {
            get
            {
                return _Codetype;
            }
            set
            {
                if (_Codetype != value)
                {
                    _Codetype = value;
                }
            }
        }
        private string _Codetype;

        /// <summary>
        /// Type of language. ex) KR, US, CN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Language
        {
            get
            {
                return _Language;
            }
            set
            {
                if (_Language != value)
                {
                    _Language = value;
                }
            }
        }
        private string _Language;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Language code name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Languagecodename
        {
            get
            {
                return _Languagecodename;
            }
            set
            {
                if (_Languagecodename != value)
                {
                    _Languagecodename = value;
                }
            }
        }
        private string _Languagecodename;

        /// <summary>
        /// Type of sub code. ex) UI.Caption, UI.Button, MESSAGE.ErrorCode, MESSAGE.Normal
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Codesubtype
        {
            get
            {
                return _Codesubtype;
            }
            set
            {
                if (_Codesubtype != value)
                {
                    _Codesubtype = value;
                }
            }
        }
        private string _Codesubtype;

        /// <summary>
        /// Language code data. ex) 안녕, Hello, Ni Hao
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Languagecodedata
        {
            get
            {
                return _Languagecodedata;
            }
            set
            {
                if (_Languagecodedata != value)
                {
                    _Languagecodedata = value;
                }
            }
        }
        private string _Languagecodedata;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 메시지 코드에 대한 다국어 설명 정보 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Multilanguagehist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Multilanguagehist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for language code id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Languagecodeid
        {
            get
            {
                return _Languagecodeid;
            }
            set
            {
                if (_Languagecodeid != value)
                {
                    _Languagecodeid = value;
                }
            }
        }
        private string _Languagecodeid;

        /// <summary>
        /// Type of code. ex) UI, MESSAGE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Codetype
        {
            get
            {
                return _Codetype;
            }
            set
            {
                if (_Codetype != value)
                {
                    _Codetype = value;
                }
            }
        }
        private string _Codetype;

        /// <summary>
        /// Type of language. ex) KR, US, CN
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Language
        {
            get
            {
                return _Language;
            }
            set
            {
                if (_Language != value)
                {
                    _Language = value;
                }
            }
        }
        private string _Language;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Language code name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Languagecodename
        {
            get
            {
                return _Languagecodename;
            }
            set
            {
                if (_Languagecodename != value)
                {
                    _Languagecodename = value;
                }
            }
        }
        private string _Languagecodename;

        /// <summary>
        /// Type of sub code. ex) UI.Caption, UI.Button, MESSAGE.ErrorCode, MESSAGE.Normal
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Codesubtype
        {
            get
            {
                return _Codesubtype;
            }
            set
            {
                if (_Codesubtype != value)
                {
                    _Codesubtype = value;
                }
            }
        }
        private string _Codesubtype;

        /// <summary>
        /// Language code data. ex) 안녕, Hello, Ni Hao
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Languagecodedata
        {
            get
            {
                return _Languagecodedata;
            }
            set
            {
                if (_Languagecodedata != value)
                {
                    _Languagecodedata = value;
                }
            }
        }
        private string _Languagecodedata;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 Query 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Storedquery")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Storedquery : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// stored query id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryid
        {
            get
            {
                return _Storedqueryid;
            }
            set
            {
                if (_Storedqueryid != value)
                {
                    _Storedqueryid = value;
                }
            }
        }
        private string _Storedqueryid;

        /// <summary>
        /// stored query version.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryversion
        {
            get
            {
                return _Storedqueryversion;
            }
            set
            {
                if (_Storedqueryversion != value)
                {
                    _Storedqueryversion = value;
                }
            }
        }
        private string _Storedqueryversion;

        /// <summary>
        /// stored query class id as system identifier (ex. MES, UI, etc) (ref. SYS_STOREDQUERYCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryclassid
        {
            get
            {
                return _Storedqueryclassid;
            }
            set
            {
                if (_Storedqueryclassid != value)
                {
                    _Storedqueryclassid = value;
                }
            }
        }
        private string _Storedqueryclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// stored query name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=800, DataSize=400, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryname
        {
            get
            {
                return _Storedqueryname;
            }
            set
            {
                if (_Storedqueryname != value)
                {
                    _Storedqueryname = value;
                }
            }
        }
        private string _Storedqueryname;

        /// <summary>
        /// Query Type. Ex) ExecuteNonQuery, ExecuteDataTable, ExecuteDataSet, ExecuteScalar, etc
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Querytype
        {
            get
            {
                return _Querytype;
            }
            set
            {
                if (_Querytype != value)
                {
                    _Querytype = value;
                }
            }
        }
        private string _Querytype;

        /// <summary>
        /// Query String. Ex) SELECT * FROM SYS_LOT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=-1, DataSize=-1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Querystring
        {
            get
            {
                return _Querystring;
            }
            set
            {
                if (_Querystring != value)
                {
                    _Querystring = value;
                }
            }
        }
        private string _Querystring;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 Query 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Storedqueryhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Storedqueryhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// stored query id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryid
        {
            get
            {
                return _Storedqueryid;
            }
            set
            {
                if (_Storedqueryid != value)
                {
                    _Storedqueryid = value;
                }
            }
        }
        private string _Storedqueryid;

        /// <summary>
        /// stored query version.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryversion
        {
            get
            {
                return _Storedqueryversion;
            }
            set
            {
                if (_Storedqueryversion != value)
                {
                    _Storedqueryversion = value;
                }
            }
        }
        private string _Storedqueryversion;

        /// <summary>
        /// stored query class id as system identifier (ex. MES, UI, etc) (ref. SYS_STOREDQUERYCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryclassid
        {
            get
            {
                return _Storedqueryclassid;
            }
            set
            {
                if (_Storedqueryclassid != value)
                {
                    _Storedqueryclassid = value;
                }
            }
        }
        private string _Storedqueryclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// stored query name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=800, DataSize=400, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryname
        {
            get
            {
                return _Storedqueryname;
            }
            set
            {
                if (_Storedqueryname != value)
                {
                    _Storedqueryname = value;
                }
            }
        }
        private string _Storedqueryname;

        /// <summary>
        /// Query Type. Ex) ExecuteNonQuery, ExecuteDataTable, ExecuteDataSet, ExecuteScalar, etc
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Querytype
        {
            get
            {
                return _Querytype;
            }
            set
            {
                if (_Querytype != value)
                {
                    _Querytype = value;
                }
            }
        }
        private string _Querytype;

        /// <summary>
        /// Query String. Ex) SELECT * FROM SYS_LOT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=-1, DataSize=-1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Querystring
        {
            get
            {
                return _Querystring;
            }
            set
            {
                if (_Querystring != value)
                {
                    _Querystring = value;
                }
            }
        }
        private string _Querystring;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Storedqueryparam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Storedqueryparam : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// stored query id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryid
        {
            get
            {
                return _Storedqueryid;
            }
            set
            {
                if (_Storedqueryid != value)
                {
                    _Storedqueryid = value;
                }
            }
        }
        private string _Storedqueryid;

        /// <summary>
        /// stored query version.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryversion
        {
            get
            {
                return _Storedqueryversion;
            }
            set
            {
                if (_Storedqueryversion != value)
                {
                    _Storedqueryversion = value;
                }
            }
        }
        private string _Storedqueryversion;

        /// <summary>
        /// stored query class id as system identifier (ex. MES, UI, etc) (ref. SYS_STOREDQUERYCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Storedqueryclassid
        {
            get
            {
                return _Storedqueryclassid;
            }
            set
            {
                if (_Storedqueryclassid != value)
                {
                    _Storedqueryclassid = value;
                }
            }
        }
        private string _Storedqueryclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// PARAMKEY
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=80, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Paramkey
        {
            get
            {
                return _Paramkey;
            }
            set
            {
                if (_Paramkey != value)
                {
                    _Paramkey = value;
                }
            }
        }
        private string _Paramkey;

        /// <summary>
        /// PARAMTYPE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Paramtype
        {
            get
            {
                return _Paramtype;
            }
            set
            {
                if (_Paramtype != value)
                {
                    _Paramtype = value;
                }
            }
        }
        private string _Paramtype;

        /// <summary>
        /// PARAMVALUE
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Paramvalue
        {
            get
            {
                return _Paramvalue;
            }
            set
            {
                if (_Paramvalue != value)
                {
                    _Paramvalue = value;
                }
            }
        }
        private string _Paramvalue;

        /// <summary>
        /// PARAMDIRECTION
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Paramdirection
        {
            get
            {
                return _Paramdirection;
            }
            set
            {
                if (_Paramdirection != value)
                {
                    _Paramdirection = value;
                }
            }
        }
        private string _Paramdirection;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 시스템 통계
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Systemstatistics")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Systemstatistics : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// User id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Menu id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// User class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 예약 필드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservfield1
        {
            get
            {
                return _Reservfield1;
            }
            set
            {
                if (_Reservfield1 != value)
                {
                    _Reservfield1 = value;
                }
            }
        }
        private string _Reservfield1;

        /// <summary>
        /// 예약 필드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservfield2
        {
            get
            {
                return _Reservfield2;
            }
            set
            {
                if (_Reservfield2 != value)
                {
                    _Reservfield2 = value;
                }
            }
        }
        private string _Reservfield2;

        /// <summary>
        /// 예약 필드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservfield3
        {
            get
            {
                return _Reservfield3;
            }
            set
            {
                if (_Reservfield3 != value)
                {
                    _Reservfield3 = value;
                }
            }
        }
        private string _Reservfield3;

        /// <summary>
        /// 예약 필드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservfield4
        {
            get
            {
                return _Reservfield4;
            }
            set
            {
                if (_Reservfield4 != value)
                {
                    _Reservfield4 = value;
                }
            }
        }
        private string _Reservfield4;

        /// <summary>
        /// 예약 필드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservfield5
        {
            get
            {
                return _Reservfield5;
            }
            set
            {
                if (_Reservfield5 != value)
                {
                    _Reservfield5 = value;
                }
            }
        }
        private string _Reservfield5;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 시스템 통계 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Systemstatisticshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Systemstatisticshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// User id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Menu id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// User class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// 예약 필드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservfield1
        {
            get
            {
                return _Reservfield1;
            }
            set
            {
                if (_Reservfield1 != value)
                {
                    _Reservfield1 = value;
                }
            }
        }
        private string _Reservfield1;

        /// <summary>
        /// 예약 필드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservfield2
        {
            get
            {
                return _Reservfield2;
            }
            set
            {
                if (_Reservfield2 != value)
                {
                    _Reservfield2 = value;
                }
            }
        }
        private string _Reservfield2;

        /// <summary>
        /// 예약 필드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservfield3
        {
            get
            {
                return _Reservfield3;
            }
            set
            {
                if (_Reservfield3 != value)
                {
                    _Reservfield3 = value;
                }
            }
        }
        private string _Reservfield3;

        /// <summary>
        /// 예약 필드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservfield4
        {
            get
            {
                return _Reservfield4;
            }
            set
            {
                if (_Reservfield4 != value)
                {
                    _Reservfield4 = value;
                }
            }
        }
        private string _Reservfield4;

        /// <summary>
        /// 예약 필드
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reservfield5
        {
            get
            {
                return _Reservfield5;
            }
            set
            {
                if (_Reservfield5 != value)
                {
                    _Reservfield5 = value;
                }
            }
        }
        private string _Reservfield5;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event name of the previous transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Prevevent
        {
            get
            {
                return _Prevevent;
            }
            set
            {
                if (_Prevevent != value)
                {
                    _Prevevent = value;
                }
            }
        }
        private string _Prevevent;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Reason code.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Reasoncode
        {
            get
            {
                return _Reasoncode;
            }
            set
            {
                if (_Reasoncode != value)
                {
                    _Reasoncode = value;
                }
            }
        }
        private string _Reasoncode;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 테이블 관리를 위한 시스템 테이블
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Table")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Table : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for table id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Tableid
        {
            get
            {
                return _Tableid;
            }
            set
            {
                if (_Tableid != value)
                {
                    _Tableid = value;
                }
            }
        }
        private string _Tableid;

        /// <summary>
        /// The group of tables.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=200, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Groupname
        {
            get
            {
                return _Groupname;
            }
            set
            {
                if (_Groupname != value)
                {
                    _Groupname = value;
                }
            }
        }
        private string _Groupname;

        /// <summary>
        /// Table name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=200, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tablename
        {
            get
            {
                return _Tablename;
            }
            set
            {
                if (_Tablename != value)
                {
                    _Tablename = value;
                }
            }
        }
        private string _Tablename;

        /// <summary>
        /// The flag to determine whether or not to be used in the system. ('Y': System, 'N': Custom)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Issystem
        {
            get
            {
                return _Issystem;
            }
            set
            {
                if (_Issystem != value)
                {
                    _Issystem = value;
                }
            }
        }
        private string _Issystem;

        /// <summary>
        /// Type of table. ex) MAIN, HIST
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tabletype
        {
            get
            {
                return _Tabletype;
            }
            set
            {
                if (_Tabletype != value)
                {
                    _Tabletype = value;
                }
            }
        }
        private string _Tabletype;

        /// <summary>
        /// The name of entity object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=200, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Classname
        {
            get
            {
                return _Classname;
            }
            set
            {
                if (_Classname != value)
                {
                    _Classname = value;
                }
            }
        }
        private string _Classname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 칼럼 관리를 위한 시스템 테이블
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Tablecolumn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tablecolumn : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Table id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Tableid
        {
            get
            {
                return _Tableid;
            }
            set
            {
                if (_Tableid != value)
                {
                    _Tableid = value;
                }
            }
        }
        private string _Tableid;

        /// <summary>
        /// Column id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public int Columnid
        {
            get
            {
                return _Columnid;
            }
            set
            {
                if (_Columnid != value)
                {
                    _Columnid = value;
                }
            }
        }
        private int _Columnid;

        /// <summary>
        /// The group of tables.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=200, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Groupname
        {
            get
            {
                return _Groupname;
            }
            set
            {
                if (_Groupname != value)
                {
                    _Groupname = value;
                }
            }
        }
        private string _Groupname;

        /// <summary>
        /// Table name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=200, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tablename
        {
            get
            {
                return _Tablename;
            }
            set
            {
                if (_Tablename != value)
                {
                    _Tablename = value;
                }
            }
        }
        private string _Tablename;

        /// <summary>
        /// Column name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=200, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Columnname
        {
            get
            {
                return _Columnname;
            }
            set
            {
                if (_Columnname != value)
                {
                    _Columnname = value;
                }
            }
        }
        private string _Columnname;

        /// <summary>
        /// The sequence of column.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public int Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private int _Uisequence;

        /// <summary>
        /// Type of column data.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Datatype
        {
            get
            {
                return _Datatype;
            }
            set
            {
                if (_Datatype != value)
                {
                    _Datatype = value;
                }
            }
        }
        private string _Datatype;

        /// <summary>
        /// Size of column data.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Datasize
        {
            get
            {
                return _Datasize;
            }
            set
            {
                if (_Datasize != value)
                {
                    _Datasize = value;
                }
            }
        }
        private Nullable<int> _Datasize;

        /// <summary>
        /// The flag to determine whether or not to be nullable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Nullable
        {
            get
            {
                return _Nullable;
            }
            set
            {
                if (_Nullable != value)
                {
                    _Nullable = value;
                }
            }
        }
        private string _Nullable;

        /// <summary>
        /// If identity column then Y else N
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isidentity
        {
            get
            {
                return _Isidentity;
            }
            set
            {
                if (_Isidentity != value)
                {
                    _Isidentity = value;
                }
            }
        }
        private string _Isidentity;

        /// <summary>
        /// The flag to determine whether or not to be used in the system. ('Y': System, 'N': Custom)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Issystem
        {
            get
            {
                return _Issystem;
            }
            set
            {
                if (_Issystem != value)
                {
                    _Issystem = value;
                }
            }
        }
        private string _Issystem;

        /// <summary>
        /// Type of column. ex) KEY, INT, EXT
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Columntype
        {
            get
            {
                return _Columntype;
            }
            set
            {
                if (_Columntype != value)
                {
                    _Columntype = value;
                }
            }
        }
        private string _Columntype;

        /// <summary>
        /// The name of entity object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Classname
        {
            get
            {
                return _Classname;
            }
            set
            {
                if (_Classname != value)
                {
                    _Classname = value;
                }
            }
        }
        private string _Classname;

        /// <summary>
        /// Type of condition.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Conditiontype
        {
            get
            {
                return _Conditiontype;
            }
            set
            {
                if (_Conditiontype != value)
                {
                    _Conditiontype = value;
                }
            }
        }
        private string _Conditiontype;

        /// <summary>
        /// Condition.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Condition
        {
            get
            {
                return _Condition;
            }
            set
            {
                if (_Condition != value)
                {
                    _Condition = value;
                }
            }
        }
        private string _Condition;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 버전별 테이블, 칼럼 관리를 위한 시스템 테이블
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Tablecolumninternal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tablecolumninternal : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Table name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Tablename
        {
            get
            {
                return _Tablename;
            }
            set
            {
                if (_Tablename != value)
                {
                    _Tablename = value;
                }
            }
        }
        private string _Tablename;

        /// <summary>
        /// Column name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Columnname
        {
            get
            {
                return _Columnname;
            }
            set
            {
                if (_Columnname != value)
                {
                    _Columnname = value;
                }
            }
        }
        private string _Columnname;

        /// <summary>
        /// The version to be released.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    _Version = value;
                }
            }
        }
        private string _Version;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for user id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// User name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    _Username = value;
                }
            }
        }
        private string _Username;

        /// <summary>
        /// User password.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Password
        {
            get
            {
                return _Password;
            }
            set
            {
                if (_Password != value)
                {
                    _Password = value;
                }
            }
        }
        private string _Password;

        /// <summary>
        /// The flag to determine whether or not to be valid.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Passworduseflag
        {
            get
            {
                return _Passworduseflag;
            }
            set
            {
                if (_Passworduseflag != value)
                {
                    _Passworduseflag = value;
                }
            }
        }
        private string _Passworduseflag;

        /// <summary>
        /// The date that the password is changed lately.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Passwordregisterdate
        {
            get
            {
                return _Passwordregisterdate;
            }
            set
            {
                if (_Passwordregisterdate != value)
                {
                    _Passwordregisterdate = value;
                }
            }
        }
        private Nullable<DateTime> _Passwordregisterdate;

        /// <summary>
        /// User nickname.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Nickname
        {
            get
            {
                return _Nickname;
            }
            set
            {
                if (_Nickname != value)
                {
                    _Nickname = value;
                }
            }
        }
        private string _Nickname;

        /// <summary>
        /// The shift to be assigned.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shiftname
        {
            get
            {
                return _Shiftname;
            }
            set
            {
                if (_Shiftname != value)
                {
                    _Shiftname = value;
                }
            }
        }
        private string _Shiftname;

        /// <summary>
        /// User position.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    _Position = value;
                }
            }
        }
        private string _Position;

        /// <summary>
        /// Email address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emailaddress
        {
            get
            {
                return _Emailaddress;
            }
            set
            {
                if (_Emailaddress != value)
                {
                    _Emailaddress = value;
                }
            }
        }
        private string _Emailaddress;

        /// <summary>
        /// Home address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Homeaddress
        {
            get
            {
                return _Homeaddress;
            }
            set
            {
                if (_Homeaddress != value)
                {
                    _Homeaddress = value;
                }
            }
        }
        private string _Homeaddress;

        /// <summary>
        /// Home phone number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Homephonenumber
        {
            get
            {
                return _Homephonenumber;
            }
            set
            {
                if (_Homephonenumber != value)
                {
                    _Homephonenumber = value;
                }
            }
        }
        private string _Homephonenumber;

        /// <summary>
        /// Cell phone number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cellphonenumber
        {
            get
            {
                return _Cellphonenumber;
            }
            set
            {
                if (_Cellphonenumber != value)
                {
                    _Cellphonenumber = value;
                }
            }
        }
        private string _Cellphonenumber;

        /// <summary>
        /// Company ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyid
        {
            get
            {
                return _Companyid;
            }
            set
            {
                if (_Companyid != value)
                {
                    _Companyid = value;
                }
            }
        }
        private string _Companyid;

        /// <summary>
        /// Company name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyname
        {
            get
            {
                return _Companyname;
            }
            set
            {
                if (_Companyname != value)
                {
                    _Companyname = value;
                }
            }
        }
        private string _Companyname;

        /// <summary>
        /// Company phone number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyphonenumber
        {
            get
            {
                return _Companyphonenumber;
            }
            set
            {
                if (_Companyphonenumber != value)
                {
                    _Companyphonenumber = value;
                }
            }
        }
        private string _Companyphonenumber;

        /// <summary>
        /// Company fax number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyfaxnumber
        {
            get
            {
                return _Companyfaxnumber;
            }
            set
            {
                if (_Companyfaxnumber != value)
                {
                    _Companyfaxnumber = value;
                }
            }
        }
        private string _Companyfaxnumber;

        /// <summary>
        /// Company address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyaddress
        {
            get
            {
                return _Companyaddress;
            }
            set
            {
                if (_Companyaddress != value)
                {
                    _Companyaddress = value;
                }
            }
        }
        private string _Companyaddress;

        /// <summary>
        /// Company department name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Departmentname
        {
            get
            {
                return _Departmentname;
            }
            set
            {
                if (_Departmentname != value)
                {
                    _Departmentname = value;
                }
            }
        }
        private string _Departmentname;

        /// <summary>
        /// The system to be logged in.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Loginsystem
        {
            get
            {
                return _Loginsystem;
            }
            set
            {
                if (_Loginsystem != value)
                {
                    _Loginsystem = value;
                }
            }
        }
        private string _Loginsystem;

        /// <summary>
        /// Client ip address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ipaddress
        {
            get
            {
                return _Ipaddress;
            }
            set
            {
                if (_Ipaddress != value)
                {
                    _Ipaddress = value;
                }
            }
        }
        private string _Ipaddress;

        /// <summary>
        /// Whenever the login be failed, this count is increased.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Loginretrycount
        {
            get
            {
                return _Loginretrycount;
            }
            set
            {
                if (_Loginretrycount != value)
                {
                    _Loginretrycount = value;
                }
            }
        }
        private Nullable<int> _Loginretrycount;

        /// <summary>
        /// Client pc name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pcname
        {
            get
            {
                return _Pcname;
            }
            set
            {
                if (_Pcname != value)
                {
                    _Pcname = value;
                }
            }
        }
        private string _Pcname;

        /// <summary>
        /// User Type(U : User, W : Worker, O : Outsouring, E : Etc)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usertype
        {
            get
            {
                return _Usertype;
            }
            set
            {
                if (_Usertype != value)
                {
                    _Usertype = value;
                }
            }
        }
        private string _Usertype;

        /// <summary>
        /// User Grade (E:초급, M:중급, H:고급)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usergrade
        {
            get
            {
                return _Usergrade;
            }
            set
            {
                if (_Usergrade != value)
                {
                    _Usergrade = value;
                }
            }
        }
        private string _Usergrade;

        /// <summary>
        /// 주요 기술
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mainskill
        {
            get
            {
                return _Mainskill;
            }
            set
            {
                if (_Mainskill != value)
                {
                    _Mainskill = value;
                }
            }
        }
        private string _Mainskill;

        /// <summary>
        /// 팀 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Teamid
        {
            get
            {
                return _Teamid;
            }
            set
            {
                if (_Teamid != value)
                {
                    _Teamid = value;
                }
            }
        }
        private string _Teamid;

        /// <summary>
        /// 팀 명
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Teamname
        {
            get
            {
                return _Teamname;
            }
            set
            {
                if (_Teamname != value)
                {
                    _Teamname = value;
                }
            }
        }
        private string _Teamname;

        /// <summary>
        /// 조 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shiftid
        {
            get
            {
                return _Shiftid;
            }
            set
            {
                if (_Shiftid != value)
                {
                    _Shiftid = value;
                }
            }
        }
        private string _Shiftid;

        /// <summary>
        /// 반 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Smallclassid
        {
            get
            {
                return _Smallclassid;
            }
            set
            {
                if (_Smallclassid != value)
                {
                    _Smallclassid = value;
                }
            }
        }
        private string _Smallclassid;

        /// <summary>
        /// 반 명
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Smallclassname
        {
            get
            {
                return _Smallclassname;
            }
            set
            {
                if (_Smallclassname != value)
                {
                    _Smallclassname = value;
                }
            }
        }
        private string _Smallclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 그룹
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userclass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userclass : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for user class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// User class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userclassname
        {
            get
            {
                return _Userclassname;
            }
            set
            {
                if (_Userclassname != value)
                {
                    _Userclassname = value;
                }
            }
        }
        private string _Userclassname;

        /// <summary>
        /// Type of user class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userclasstype
        {
            get
            {
                return _Userclasstype;
            }
            set
            {
                if (_Userclasstype != value)
                {
                    _Userclasstype = value;
                }
            }
        }
        private string _Userclasstype;

        /// <summary>
        /// The division of user class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Division
        {
            get
            {
                return _Division;
            }
            set
            {
                if (_Division != value)
                {
                    _Division = value;
                }
            }
        }
        private string _Division;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 그룹 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userclasshist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userclasshist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for user class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// User class name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userclassname
        {
            get
            {
                return _Userclassname;
            }
            set
            {
                if (_Userclassname != value)
                {
                    _Userclassname = value;
                }
            }
        }
        private string _Userclassname;

        /// <summary>
        /// Type of user class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userclasstype
        {
            get
            {
                return _Userclasstype;
            }
            set
            {
                if (_Userclasstype != value)
                {
                    _Userclasstype = value;
                }
            }
        }
        private string _Userclasstype;

        /// <summary>
        /// The division of user class.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Division
        {
            get
            {
                return _Division;
            }
            set
            {
                if (_Division != value)
                {
                    _Division = value;
                }
            }
        }
        private string _Division;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 그룹에 부여된 메뉴 권한
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userclassmenurel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userclassmenurel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// User class id. (ref. FOM_USERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// Menu id of menu. (ref. FOM_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id of menu . (ref. FOM_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Menu access mode (ex. RW - read write, RWX - read write execute)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'RW'")]
        [DataMemberAttribute()]
        public string Accessibility
        {
            get
            {
                return _Accessibility;
            }
            set
            {
                if (_Accessibility != value)
                {
                    _Accessibility = value;
                }
            }
        }
        private string _Accessibility;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 그룹에 부여된 메뉴 권한 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userclassmenurelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userclassmenurelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// User class id. (ref. FOM_USERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// Menu id of menu. (ref. FOM_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id of menu . (ref. FOM_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Menu access mode (ex. RW - read write, RWX - read write execute)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'RW'")]
        [DataMemberAttribute()]
        public string Accessibility
        {
            get
            {
                return _Accessibility;
            }
            set
            {
                if (_Accessibility != value)
                {
                    _Accessibility = value;
                }
            }
        }
        private string _Accessibility;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Menu Object 정의
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userclassobjectrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userclassobjectrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// User class id. (ref. SYS_USERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// Object id. (ref. SYS_MENUOBJECT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Objectid
        {
            get
            {
                return _Objectid;
            }
            set
            {
                if (_Objectid != value)
                {
                    _Objectid = value;
                }
            }
        }
        private string _Objectid;

        /// <summary>
        /// Menu id. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Object name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objectname
        {
            get
            {
                return _Objectname;
            }
            set
            {
                if (_Objectname != value)
                {
                    _Objectname = value;
                }
            }
        }
        private string _Objectname;

        /// <summary>
        /// Object type.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objecttype
        {
            get
            {
                return _Objecttype;
            }
            set
            {
                if (_Objecttype != value)
                {
                    _Objecttype = value;
                }
            }
        }
        private string _Objecttype;

        /// <summary>
        /// The flag to determine whether or not to be enable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isenable
        {
            get
            {
                return _Isenable;
            }
            set
            {
                if (_Isenable != value)
                {
                    _Isenable = value;
                }
            }
        }
        private string _Isenable;

        /// <summary>
        /// The flag to determine whether or not to be visible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isvisible
        {
            get
            {
                return _Isvisible;
            }
            set
            {
                if (_Isvisible != value)
                {
                    _Isvisible = value;
                }
            }
        }
        private string _Isvisible;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// Menu Object 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userclassobjectrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userclassobjectrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// User class id. (ref. SYS_USERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// Object id. (ref. SYS_MENUOBJECT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objectid
        {
            get
            {
                return _Objectid;
            }
            set
            {
                if (_Objectid != value)
                {
                    _Objectid = value;
                }
            }
        }
        private string _Objectid;

        /// <summary>
        /// Menu id. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Object name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objectname
        {
            get
            {
                return _Objectname;
            }
            set
            {
                if (_Objectname != value)
                {
                    _Objectname = value;
                }
            }
        }
        private string _Objectname;

        /// <summary>
        /// Object type.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objecttype
        {
            get
            {
                return _Objecttype;
            }
            set
            {
                if (_Objecttype != value)
                {
                    _Objecttype = value;
                }
            }
        }
        private string _Objecttype;

        /// <summary>
        /// The flag to determine whether or not to be enable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isenable
        {
            get
            {
                return _Isenable;
            }
            set
            {
                if (_Isenable != value)
                {
                    _Isenable = value;
                }
            }
        }
        private string _Isenable;

        /// <summary>
        /// The flag to determine whether or not to be visible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isvisible
        {
            get
            {
                return _Isvisible;
            }
            set
            {
                if (_Isvisible != value)
                {
                    _Isvisible = value;
                }
            }
        }
        private string _Isvisible;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 그룹에 대해 정의된 공정 또는 설비
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userclassppserel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userclassppserel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// User class id. (ref. SYS_USERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// Process segment id. (ref. FOM_PROCESSSEGMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Processsegmentid
        {
            get
            {
                return _Processsegmentid;
            }
            set
            {
                if (_Processsegmentid != value)
                {
                    _Processsegmentid = value;
                }
            }
        }
        private string _Processsegmentid;

        /// <summary>
        /// Equipment id. (ref. FOM_EQUIPMENT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Equipmentid
        {
            get
            {
                return _Equipmentid;
            }
            set
            {
                if (_Equipmentid != value)
                {
                    _Equipmentid = value;
                }
            }
        }
        private string _Equipmentid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 그룹별 사용자 목록
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userclassrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userclassrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// User class id. (ref. SYS_USERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// User id. (ref. SYS_USER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 그룹별 사용자 목록 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userclassrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userclassrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// User class id. (ref. SYS_USERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// User id. (ref. SYS_USER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 그룹별 Site mapping
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userclasssiterel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userclasssiterel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// User class id. (ref. SYS_USERCLASS)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userclassid
        {
            get
            {
                return _Userclassid;
            }
            set
            {
                if (_Userclassid != value)
                {
                    _Userclassid = value;
                }
            }
        }
        private string _Userclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 즐겨찾기 메뉴
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userfavoritemenu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userfavoritemenu : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// User id. (ref. SYS_USER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Unique identifier for favorite menu id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Favoritemenuid
        {
            get
            {
                return _Favoritemenuid;
            }
            set
            {
                if (_Favoritemenuid != value)
                {
                    _Favoritemenuid = value;
                }
            }
        }
        private string _Favoritemenuid;

        /// <summary>
        /// Unique identifier for favorite menu class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Favoritemenuclassid
        {
            get
            {
                return _Favoritemenuclassid;
            }
            set
            {
                if (_Favoritemenuclassid != value)
                {
                    _Favoritemenuclassid = value;
                }
            }
        }
        private string _Favoritemenuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Favorite menu name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=800, DataSize=400, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Favoritemenuname
        {
            get
            {
                return _Favoritemenuname;
            }
            set
            {
                if (_Favoritemenuname != value)
                {
                    _Favoritemenuname = value;
                }
            }
        }
        private string _Favoritemenuname;

        /// <summary>
        /// Type of menu (N - Normal, F - Folder, S - Separator)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Favoritemenutype
        {
            get
            {
                return _Favoritemenutype;
            }
            set
            {
                if (_Favoritemenutype != value)
                {
                    _Favoritemenutype = value;
                }
            }
        }
        private string _Favoritemenutype;

        /// <summary>
        /// Parent favorite menu id. (ref. SYS_USERFAVORITEMENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentid
        {
            get
            {
                return _Parentid;
            }
            set
            {
                if (_Parentid != value)
                {
                    _Parentid = value;
                }
            }
        }
        private string _Parentid;

        /// <summary>
        /// Menu id of menu. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id of menu. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Sequence of favorite menu.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Depth of favorite menu.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Depth
        {
            get
            {
                return _Depth;
            }
            set
            {
                if (_Depth != value)
                {
                    _Depth = value;
                }
            }
        }
        private Nullable<int> _Depth;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 즐겨찾기 메뉴 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userfavoritemenuhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userfavoritemenuhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// User id. (ref. SYS_USER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Unique identifier for favorite menu id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Favoritemenuid
        {
            get
            {
                return _Favoritemenuid;
            }
            set
            {
                if (_Favoritemenuid != value)
                {
                    _Favoritemenuid = value;
                }
            }
        }
        private string _Favoritemenuid;

        /// <summary>
        /// Unique identifier for favorite menu class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Favoritemenuclassid
        {
            get
            {
                return _Favoritemenuclassid;
            }
            set
            {
                if (_Favoritemenuclassid != value)
                {
                    _Favoritemenuclassid = value;
                }
            }
        }
        private string _Favoritemenuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Favorite menu name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=800, DataSize=400, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Favoritemenuname
        {
            get
            {
                return _Favoritemenuname;
            }
            set
            {
                if (_Favoritemenuname != value)
                {
                    _Favoritemenuname = value;
                }
            }
        }
        private string _Favoritemenuname;

        /// <summary>
        /// Type of menu (N - Normal, F - Folder, S - Separator)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Favoritemenutype
        {
            get
            {
                return _Favoritemenutype;
            }
            set
            {
                if (_Favoritemenutype != value)
                {
                    _Favoritemenutype = value;
                }
            }
        }
        private string _Favoritemenutype;

        /// <summary>
        /// Parent favorite menu id. (ref. SYS_USERFAVORITEMENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Parentid
        {
            get
            {
                return _Parentid;
            }
            set
            {
                if (_Parentid != value)
                {
                    _Parentid = value;
                }
            }
        }
        private string _Parentid;

        /// <summary>
        /// Menu id of menu. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id of menu. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Sequence of favorite menu.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Uisequence
        {
            get
            {
                return _Uisequence;
            }
            set
            {
                if (_Uisequence != value)
                {
                    _Uisequence = value;
                }
            }
        }
        private Nullable<int> _Uisequence;

        /// <summary>
        /// Depth of favorite menu.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Depth
        {
            get
            {
                return _Depth;
            }
            set
            {
                if (_Depth != value)
                {
                    _Depth = value;
                }
            }
        }
        private Nullable<int> _Depth;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 정의 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// Unique identifier for user id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// User name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    _Username = value;
                }
            }
        }
        private string _Username;

        /// <summary>
        /// User password.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Password
        {
            get
            {
                return _Password;
            }
            set
            {
                if (_Password != value)
                {
                    _Password = value;
                }
            }
        }
        private string _Password;

        /// <summary>
        /// The flag to determine whether or not to be valid.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Passworduseflag
        {
            get
            {
                return _Passworduseflag;
            }
            set
            {
                if (_Passworduseflag != value)
                {
                    _Passworduseflag = value;
                }
            }
        }
        private string _Passworduseflag;

        /// <summary>
        /// The date that the password is changed lately.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<DateTime> Passwordregisterdate
        {
            get
            {
                return _Passwordregisterdate;
            }
            set
            {
                if (_Passwordregisterdate != value)
                {
                    _Passwordregisterdate = value;
                }
            }
        }
        private Nullable<DateTime> _Passwordregisterdate;

        /// <summary>
        /// User nickname.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Nickname
        {
            get
            {
                return _Nickname;
            }
            set
            {
                if (_Nickname != value)
                {
                    _Nickname = value;
                }
            }
        }
        private string _Nickname;

        /// <summary>
        /// The shift to be assigned.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shiftname
        {
            get
            {
                return _Shiftname;
            }
            set
            {
                if (_Shiftname != value)
                {
                    _Shiftname = value;
                }
            }
        }
        private string _Shiftname;

        /// <summary>
        /// User position.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Position
        {
            get
            {
                return _Position;
            }
            set
            {
                if (_Position != value)
                {
                    _Position = value;
                }
            }
        }
        private string _Position;

        /// <summary>
        /// Email address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Emailaddress
        {
            get
            {
                return _Emailaddress;
            }
            set
            {
                if (_Emailaddress != value)
                {
                    _Emailaddress = value;
                }
            }
        }
        private string _Emailaddress;

        /// <summary>
        /// Home address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Homeaddress
        {
            get
            {
                return _Homeaddress;
            }
            set
            {
                if (_Homeaddress != value)
                {
                    _Homeaddress = value;
                }
            }
        }
        private string _Homeaddress;

        /// <summary>
        /// Home phone number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Homephonenumber
        {
            get
            {
                return _Homephonenumber;
            }
            set
            {
                if (_Homephonenumber != value)
                {
                    _Homephonenumber = value;
                }
            }
        }
        private string _Homephonenumber;

        /// <summary>
        /// Cell phone number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Cellphonenumber
        {
            get
            {
                return _Cellphonenumber;
            }
            set
            {
                if (_Cellphonenumber != value)
                {
                    _Cellphonenumber = value;
                }
            }
        }
        private string _Cellphonenumber;

        /// <summary>
        /// Company ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyid
        {
            get
            {
                return _Companyid;
            }
            set
            {
                if (_Companyid != value)
                {
                    _Companyid = value;
                }
            }
        }
        private string _Companyid;

        /// <summary>
        /// Company name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyname
        {
            get
            {
                return _Companyname;
            }
            set
            {
                if (_Companyname != value)
                {
                    _Companyname = value;
                }
            }
        }
        private string _Companyname;

        /// <summary>
        /// Company phone number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyphonenumber
        {
            get
            {
                return _Companyphonenumber;
            }
            set
            {
                if (_Companyphonenumber != value)
                {
                    _Companyphonenumber = value;
                }
            }
        }
        private string _Companyphonenumber;

        /// <summary>
        /// Company fax number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyfaxnumber
        {
            get
            {
                return _Companyfaxnumber;
            }
            set
            {
                if (_Companyfaxnumber != value)
                {
                    _Companyfaxnumber = value;
                }
            }
        }
        private string _Companyfaxnumber;

        /// <summary>
        /// Company address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Companyaddress
        {
            get
            {
                return _Companyaddress;
            }
            set
            {
                if (_Companyaddress != value)
                {
                    _Companyaddress = value;
                }
            }
        }
        private string _Companyaddress;

        /// <summary>
        /// Company department name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Departmentname
        {
            get
            {
                return _Departmentname;
            }
            set
            {
                if (_Departmentname != value)
                {
                    _Departmentname = value;
                }
            }
        }
        private string _Departmentname;

        /// <summary>
        /// The system to be logged in.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Loginsystem
        {
            get
            {
                return _Loginsystem;
            }
            set
            {
                if (_Loginsystem != value)
                {
                    _Loginsystem = value;
                }
            }
        }
        private string _Loginsystem;

        /// <summary>
        /// Client ip address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Ipaddress
        {
            get
            {
                return _Ipaddress;
            }
            set
            {
                if (_Ipaddress != value)
                {
                    _Ipaddress = value;
                }
            }
        }
        private string _Ipaddress;

        /// <summary>
        /// Whenever the login be failed, this count is increased.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="numeric", MaxLength=5, DataSize=5, Scale=0, Precision=5, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public Nullable<int> Loginretrycount
        {
            get
            {
                return _Loginretrycount;
            }
            set
            {
                if (_Loginretrycount != value)
                {
                    _Loginretrycount = value;
                }
            }
        }
        private Nullable<int> _Loginretrycount;

        /// <summary>
        /// Client pc name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=160, DataSize=80, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Pcname
        {
            get
            {
                return _Pcname;
            }
            set
            {
                if (_Pcname != value)
                {
                    _Pcname = value;
                }
            }
        }
        private string _Pcname;

        /// <summary>
        /// User Type(U : User, W : Worker, O : Outsouring, E : Etc)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usertype
        {
            get
            {
                return _Usertype;
            }
            set
            {
                if (_Usertype != value)
                {
                    _Usertype = value;
                }
            }
        }
        private string _Usertype;

        /// <summary>
        /// User Grade (E:초급, M:중급, H:고급)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Usergrade
        {
            get
            {
                return _Usergrade;
            }
            set
            {
                if (_Usergrade != value)
                {
                    _Usergrade = value;
                }
            }
        }
        private string _Usergrade;

        /// <summary>
        /// 주요 기술
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Mainskill
        {
            get
            {
                return _Mainskill;
            }
            set
            {
                if (_Mainskill != value)
                {
                    _Mainskill = value;
                }
            }
        }
        private string _Mainskill;

        /// <summary>
        /// 팀 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Teamid
        {
            get
            {
                return _Teamid;
            }
            set
            {
                if (_Teamid != value)
                {
                    _Teamid = value;
                }
            }
        }
        private string _Teamid;

        /// <summary>
        /// 팀 명
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Teamname
        {
            get
            {
                return _Teamname;
            }
            set
            {
                if (_Teamname != value)
                {
                    _Teamname = value;
                }
            }
        }
        private string _Teamname;

        /// <summary>
        /// 조 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Shiftid
        {
            get
            {
                return _Shiftid;
            }
            set
            {
                if (_Shiftid != value)
                {
                    _Shiftid = value;
                }
            }
        }
        private string _Shiftid;

        /// <summary>
        /// 반 ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Smallclassid
        {
            get
            {
                return _Smallclassid;
            }
            set
            {
                if (_Smallclassid != value)
                {
                    _Smallclassid = value;
                }
            }
        }
        private string _Smallclassid;

        /// <summary>
        /// 반 명
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Smallclassname
        {
            get
            {
                return _Smallclassname;
            }
            set
            {
                if (_Smallclassname != value)
                {
                    _Smallclassname = value;
                }
            }
        }
        private string _Smallclassname;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자에 부여된 메뉴 권한
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Usermenurel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Usermenurel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// User id. (ref. SYS_USER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Menu id of menu. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id of menu . (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Menu access mode (ex. RW - read write, RWX - read write execute)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'RW'")]
        [DataMemberAttribute()]
        public string Accessibility
        {
            get
            {
                return _Accessibility;
            }
            set
            {
                if (_Accessibility != value)
                {
                    _Accessibility = value;
                }
            }
        }
        private string _Accessibility;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자에 부여된 메뉴 권한 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Usermenurelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Usermenurelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// User id. (ref. SYS_USER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Menu id of menu. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id of menu . (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Menu access mode (ex. RW - read write, RWX - read write execute)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'RW'")]
        [DataMemberAttribute()]
        public string Accessibility
        {
            get
            {
                return _Accessibility;
            }
            set
            {
                if (_Accessibility != value)
                {
                    _Accessibility = value;
                }
            }
        }
        private string _Accessibility;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 오브젝트
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userobjectrel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userobjectrel : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// User id. (ref. SYS_USER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Object id. (ref. SYS_MENUOBJECT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=2, Default="")]
        [DataMemberAttribute()]
        public string Objectid
        {
            get
            {
                return _Objectid;
            }
            set
            {
                if (_Objectid != value)
                {
                    _Objectid = value;
                }
            }
        }
        private string _Objectid;

        /// <summary>
        /// Menu id. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=3, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=4, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=5, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Object name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objectname
        {
            get
            {
                return _Objectname;
            }
            set
            {
                if (_Objectname != value)
                {
                    _Objectname = value;
                }
            }
        }
        private string _Objectname;

        /// <summary>
        /// Object type.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objecttype
        {
            get
            {
                return _Objecttype;
            }
            set
            {
                if (_Objecttype != value)
                {
                    _Objecttype = value;
                }
            }
        }
        private string _Objecttype;

        /// <summary>
        /// The flag to determine whether or not to be enable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isenable
        {
            get
            {
                return _Isenable;
            }
            set
            {
                if (_Isenable != value)
                {
                    _Isenable = value;
                }
            }
        }
        private string _Isenable;

        /// <summary>
        /// The flag to determine whether or not to be visible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isvisible
        {
            get
            {
                return _Isvisible;
            }
            set
            {
                if (_Isvisible != value)
                {
                    _Isvisible = value;
                }
            }
        }
        private string _Isvisible;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

    /// <summary>
    /// 사용자 오브젝트 이력
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MOM.MES.Entity", Name="Userobjectrelhist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userobjectrelhist : EntityObject
    {
        #region Primitive Properties
        
        /// <summary>
        /// Unique identifier for this table by using auto increment.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="bigint", MaxLength=8, DataSize=8, Scale=0, Precision=19, KeySeq=1, Default="")]
        [DataMemberAttribute()]
        public long Eventseq
        {
            get
            {
                return _Eventseq;
            }
            set
            {
                if (_Eventseq != value)
                {
                    _Eventseq = value;
                }
            }
        }
        private long _Eventseq;

        /// <summary>
        /// User id. (ref. SYS_USER)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                if (_Userid != value)
                {
                    _Userid = value;
                }
            }
        }
        private string _Userid;

        /// <summary>
        /// Object id. (ref. SYS_MENUOBJECT)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objectid
        {
            get
            {
                return _Objectid;
            }
            set
            {
                if (_Objectid != value)
                {
                    _Objectid = value;
                }
            }
        }
        private string _Objectid;

        /// <summary>
        /// Menu id. (ref. SYS_MENU)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=200, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuid
        {
            get
            {
                return _Menuid;
            }
            set
            {
                if (_Menuid != value)
                {
                    _Menuid = value;
                }
            }
        }
        private string _Menuid;

        /// <summary>
        /// Menu class id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Menuclassid
        {
            get
            {
                return _Menuclassid;
            }
            set
            {
                if (_Menuclassid != value)
                {
                    _Menuclassid = value;
                }
            }
        }
        private string _Menuclassid;

        /// <summary>
        /// Manufacturing factory identifier.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Factoryid
        {
            get
            {
                return _Factoryid;
            }
            set
            {
                if (_Factoryid != value)
                {
                    _Factoryid = value;
                }
            }
        }
        private string _Factoryid;

        /// <summary>
        /// Object name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objectname
        {
            get
            {
                return _Objectname;
            }
            set
            {
                if (_Objectname != value)
                {
                    _Objectname = value;
                }
            }
        }
        private string _Objectname;

        /// <summary>
        /// Object type.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Objecttype
        {
            get
            {
                return _Objecttype;
            }
            set
            {
                if (_Objecttype != value)
                {
                    _Objecttype = value;
                }
            }
        }
        private string _Objecttype;

        /// <summary>
        /// The flag to determine whether or not to be enable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isenable
        {
            get
            {
                return _Isenable;
            }
            set
            {
                if (_Isenable != value)
                {
                    _Isenable = value;
                }
            }
        }
        private string _Isenable;

        /// <summary>
        /// The flag to determine whether or not to be visible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=1, DataSize=1, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Isvisible
        {
            get
            {
                return _Isvisible;
            }
            set
            {
                if (_Isvisible != value)
                {
                    _Isvisible = value;
                }
            }
        }
        private string _Isvisible;

        /// <summary>
        /// Description of object.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=400, DataSize=200, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    _Description = value;
                }
            }
        }
        private string _Description;

        /// <summary>
        /// Creator.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                if (_Creator != value)
                {
                    _Creator = value;
                }
            }
        }
        private string _Creator;

        /// <summary>
        /// Time of creation.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Createtime
        {
            get
            {
                return _Createtime;
            }
            set
            {
                if (_Createtime != value)
                {
                    _Createtime = value;
                }
            }
        }
        private DateTime _Createtime;

        /// <summary>
        /// Event name of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=100, DataSize=100, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Event
        {
            get
            {
                return _Event;
            }
            set
            {
                if (_Event != value)
                {
                    _Event = value;
                }
            }
        }
        private string _Event;

        /// <summary>
        /// Event user of the transaction.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventuser
        {
            get
            {
                return _Eventuser;
            }
            set
            {
                if (_Eventuser != value)
                {
                    _Eventuser = value;
                }
            }
        }
        private string _Eventuser;

        /// <summary>
        /// Time of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventtime
        {
            get
            {
                return _Eventtime;
            }
            set
            {
                if (_Eventtime != value)
                {
                    _Eventtime = value;
                }
            }
        }
        private DateTime _Eventtime;

        /// <summary>
        /// UTCTime of event.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [EdmScalarPropertyDetailAttribute(DataType="datetime2", MaxLength=8, DataSize=8, Scale=7, Precision=27, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public DateTime Eventutctime
        {
            get
            {
                return _Eventutctime;
            }
            set
            {
                if (_Eventutctime != value)
                {
                    _Eventutctime = value;
                }
            }
        }
        private DateTime _Eventutctime;

        /// <summary>
        /// Comment of event, by system or user.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="nvarchar", MaxLength=4000, DataSize=2000, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Eventcomment
        {
            get
            {
                return _Eventcomment;
            }
            set
            {
                if (_Eventcomment != value)
                {
                    _Eventcomment = value;
                }
            }
        }
        private string _Eventcomment;

        /// <summary>
        /// Code of isusable. ex) Usable, UnUsable.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="'Usable'")]
        [DataMemberAttribute()]
        public string Isusable
        {
            get
            {
                return _Isusable;
            }
            set
            {
                if (_Isusable != value)
                {
                    _Isusable = value;
                }
            }
        }
        private string _Isusable;

        /// <summary>
        /// Transaction ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [EdmScalarPropertyDetailAttribute(DataType="varchar", MaxLength=40, DataSize=40, Scale=0, Precision=0, KeySeq=0, Default="")]
        [DataMemberAttribute()]
        public string Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                if (_Tid != value)
                {
                    _Tid = value;
                }
            }
        }
        private string _Tid;

        #endregion
    }

}
